/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.3.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

#ifdef _MSC_VER
// ignore constant conditional expression (C4127) and unreachable/unsafe code warnings
// and hidden local declaration (C4456), uninitialized variable (C4701), assignment in conditional expression (C4706)
// also see config.h.cmake
#pragma warning(disable:4127 4456 4701 4702 4706 4996 4365 4820 4514 5045 4191 4710 4668)
#else
// ignore unused parameter warnings for vector template code
#pragma GCC diagnostic ignored "-Wunused-parameter"
// ignore uninitialized fields for typeobject::tp_vectorcall and typeobject::tp_print
#pragma GCC diagnostic ignored "-Wmissing-field-initializers"
#endif
#define SWIG_PYTHON_2_UNICODE

#include <iostream>



#define SWIG_VERSION 0x040301
#define SWIGCSHARP

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if defined(__GNUC__)
#  if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#    ifndef GCC_HASCLASSVISIBILITY
#      define GCC_HASCLASSVISIBILITY
#    endif
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif

#if defined(__cplusplus) && __cplusplus >=201103L
# define SWIG_NULLPTR nullptr
#else
# define SWIG_NULLPTR NULL
#endif 

/* -----------------------------------------------------------------------------
 * swigcompat.swg
 *
 * Macros to provide support compatibility with older C and C++ standards.
 *
 * Note that SWIG expects __cplusplus to be defined to the appropriate C++ standard.
 * MSVC users are urged to check and examine the /Zc:__cplusplus compiler option.
 * See https://learn.microsoft.com/en-us/cpp/build/reference/zc-cplusplus.
 * ----------------------------------------------------------------------------- */

/* C99 and C++11 should provide snprintf, but define SWIG_NO_SNPRINTF
 * if you're missing it.
 */
#if ((defined __STDC_VERSION__ && __STDC_VERSION__ >= 199901L) || \
     (defined __cplusplus && __cplusplus >= 201103L) || \
     defined SWIG_HAVE_SNPRINTF) && \
    !defined SWIG_NO_SNPRINTF
# define SWIG_snprintf(O,S,F,A) snprintf(O,S,F,A)
# define SWIG_snprintf2(O,S,F,A,B) snprintf(O,S,F,A,B)
#else
/* Fallback versions ignore the buffer size, but most of our uses either have a
 * fixed maximum possible size or dynamically allocate a buffer that's large
 * enough.
 */
# define SWIG_snprintf(O,S,F,A) sprintf(O,F,A)
# define SWIG_snprintf2(O,S,F,A,B) sprintf(O,F,A,B)
#endif


#include <stdlib.h>
#include <string.h>
#include <stdio.h>


/* Support for throwing C# exceptions from C/C++. There are two types: 
 * Exceptions that take a message and ArgumentExceptions that take a message and a parameter name. */
typedef enum {
  SWIG_CSharpApplicationException,
  SWIG_CSharpArithmeticException,
  SWIG_CSharpDivideByZeroException,
  SWIG_CSharpIndexOutOfRangeException,
  SWIG_CSharpInvalidCastException,
  SWIG_CSharpInvalidOperationException,
  SWIG_CSharpIOException,
  SWIG_CSharpNullReferenceException,
  SWIG_CSharpOutOfMemoryException,
  SWIG_CSharpOverflowException,
  SWIG_CSharpSystemException
} SWIG_CSharpExceptionCodes;

typedef enum {
  SWIG_CSharpArgumentException,
  SWIG_CSharpArgumentNullException,
  SWIG_CSharpArgumentOutOfRangeException
} SWIG_CSharpExceptionArgumentCodes;

typedef void (SWIGSTDCALL* SWIG_CSharpExceptionCallback_t)(const char *);
typedef void (SWIGSTDCALL* SWIG_CSharpExceptionArgumentCallback_t)(const char *, const char *);

typedef struct {
  SWIG_CSharpExceptionCodes code;
  SWIG_CSharpExceptionCallback_t callback;
} SWIG_CSharpException_t;

typedef struct {
  SWIG_CSharpExceptionArgumentCodes code;
  SWIG_CSharpExceptionArgumentCallback_t callback;
} SWIG_CSharpExceptionArgument_t;

static SWIG_CSharpException_t SWIG_csharp_exceptions[] = {
  { SWIG_CSharpApplicationException, NULL },
  { SWIG_CSharpArithmeticException, NULL },
  { SWIG_CSharpDivideByZeroException, NULL },
  { SWIG_CSharpIndexOutOfRangeException, NULL },
  { SWIG_CSharpInvalidCastException, NULL },
  { SWIG_CSharpInvalidOperationException, NULL },
  { SWIG_CSharpIOException, NULL },
  { SWIG_CSharpNullReferenceException, NULL },
  { SWIG_CSharpOutOfMemoryException, NULL },
  { SWIG_CSharpOverflowException, NULL },
  { SWIG_CSharpSystemException, NULL }
};

static SWIG_CSharpExceptionArgument_t SWIG_csharp_exceptions_argument[] = {
  { SWIG_CSharpArgumentException, NULL },
  { SWIG_CSharpArgumentNullException, NULL },
  { SWIG_CSharpArgumentOutOfRangeException, NULL }
};

static void SWIGUNUSED SWIG_CSharpSetPendingException(SWIG_CSharpExceptionCodes code, const char *msg) {
  SWIG_CSharpExceptionCallback_t callback = SWIG_csharp_exceptions[SWIG_CSharpApplicationException].callback;
  if ((size_t)code < sizeof(SWIG_csharp_exceptions)/sizeof(SWIG_CSharpException_t)) {
    callback = SWIG_csharp_exceptions[code].callback;
  }
  callback(msg);
}

static void SWIGUNUSED SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpExceptionArgumentCodes code, const char *msg, const char *param_name) {
  SWIG_CSharpExceptionArgumentCallback_t callback = SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentException].callback;
  if ((size_t)code < sizeof(SWIG_csharp_exceptions_argument)/sizeof(SWIG_CSharpExceptionArgument_t)) {
    callback = SWIG_csharp_exceptions_argument[code].callback;
  }
  callback(msg, param_name);
}


#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT void SWIGSTDCALL SWIGRegisterExceptionCallbacks_libsumo(
                                                SWIG_CSharpExceptionCallback_t applicationCallback,
                                                SWIG_CSharpExceptionCallback_t arithmeticCallback,
                                                SWIG_CSharpExceptionCallback_t divideByZeroCallback, 
                                                SWIG_CSharpExceptionCallback_t indexOutOfRangeCallback, 
                                                SWIG_CSharpExceptionCallback_t invalidCastCallback,
                                                SWIG_CSharpExceptionCallback_t invalidOperationCallback,
                                                SWIG_CSharpExceptionCallback_t ioCallback,
                                                SWIG_CSharpExceptionCallback_t nullReferenceCallback,
                                                SWIG_CSharpExceptionCallback_t outOfMemoryCallback, 
                                                SWIG_CSharpExceptionCallback_t overflowCallback, 
                                                SWIG_CSharpExceptionCallback_t systemCallback) {
  SWIG_csharp_exceptions[SWIG_CSharpApplicationException].callback = applicationCallback;
  SWIG_csharp_exceptions[SWIG_CSharpArithmeticException].callback = arithmeticCallback;
  SWIG_csharp_exceptions[SWIG_CSharpDivideByZeroException].callback = divideByZeroCallback;
  SWIG_csharp_exceptions[SWIG_CSharpIndexOutOfRangeException].callback = indexOutOfRangeCallback;
  SWIG_csharp_exceptions[SWIG_CSharpInvalidCastException].callback = invalidCastCallback;
  SWIG_csharp_exceptions[SWIG_CSharpInvalidOperationException].callback = invalidOperationCallback;
  SWIG_csharp_exceptions[SWIG_CSharpIOException].callback = ioCallback;
  SWIG_csharp_exceptions[SWIG_CSharpNullReferenceException].callback = nullReferenceCallback;
  SWIG_csharp_exceptions[SWIG_CSharpOutOfMemoryException].callback = outOfMemoryCallback;
  SWIG_csharp_exceptions[SWIG_CSharpOverflowException].callback = overflowCallback;
  SWIG_csharp_exceptions[SWIG_CSharpSystemException].callback = systemCallback;
}

#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT void SWIGSTDCALL SWIGRegisterExceptionArgumentCallbacks_libsumo(
                                                SWIG_CSharpExceptionArgumentCallback_t argumentCallback,
                                                SWIG_CSharpExceptionArgumentCallback_t argumentNullCallback,
                                                SWIG_CSharpExceptionArgumentCallback_t argumentOutOfRangeCallback) {
  SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentException].callback = argumentCallback;
  SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentNullException].callback = argumentNullCallback;
  SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentOutOfRangeException].callback = argumentOutOfRangeCallback;
}


/* Callback for returning strings to C# without leaking memory */
typedef char * (SWIGSTDCALL* SWIG_CSharpStringHelperCallback)(const char *);
static SWIG_CSharpStringHelperCallback SWIG_csharp_string_callback = NULL;


#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT void SWIGSTDCALL SWIGRegisterStringCallback_libsumo(SWIG_CSharpStringHelperCallback callback) {
  SWIG_csharp_string_callback = callback;
}


/* Contract support */

#define SWIG_contract_assert(nullreturn, expr, msg) do { if (!(expr)) {SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, msg, ""); return nullreturn; } } while (0)

/* SWIG Errors applicable to all language modules, values are reserved from -1 to -99 */
#define  SWIG_UnknownError    	   -1
#define  SWIG_IOError        	   -2
#define  SWIG_RuntimeError   	   -3
#define  SWIG_IndexError     	   -4
#define  SWIG_TypeError      	   -5
#define  SWIG_DivisionByZero 	   -6
#define  SWIG_OverflowError  	   -7
#define  SWIG_SyntaxError    	   -8
#define  SWIG_ValueError     	   -9
#define  SWIG_SystemError    	   -10
#define  SWIG_AttributeError 	   -11
#define  SWIG_MemoryError    	   -12
#define  SWIG_NullReferenceError   -13



#ifdef __cplusplus
#include <utility>
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigSmartPointer {
    T *ptr;
    SwigSmartPointer(T *p) : ptr(p) { }
    ~SwigSmartPointer() { delete ptr; }
    SwigSmartPointer& operator=(SwigSmartPointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
    void reset(T *p) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = p; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigSmartPointer tmp(new T(t)); pointer = tmp; return *this; }
#if __cplusplus >=201103L
  SwigValueWrapper& operator=(T&& t) { SwigSmartPointer tmp(new T(std::move(t))); pointer = tmp; return *this; }
  operator T&&() const { return std::move(*pointer.ptr); }
#else
  operator T&() const { return *pointer.ptr; }
#endif
  T *operator&() const { return pointer.ptr; }
  static void reset(SwigValueWrapper& t, T *p) { t.pointer.reset(p); }
};

/*
 * SwigValueInit() is a generic initialisation solution as the following approach:
 * 
 *       T c_result = T();
 * 
 * doesn't compile for all types for example:
 * 
 *       unsigned int c_result = unsigned int();
 */
template <typename T> T SwigValueInit() {
  return T();
}

#if __cplusplus >=201103L
# define SWIG_STD_MOVE(OBJ) std::move(OBJ)
#else
# define SWIG_STD_MOVE(OBJ) OBJ
#endif

#endif


#include <string>


#include <typeinfo>
#include <stdexcept>


#include <vector>
#include <algorithm>
#include <stdexcept>


#include <map>
#include <algorithm>
#include <stdexcept>

SWIGINTERN std::vector< std::string > *new_std_vector_Sl_std_string_Sg___SWIG_2(int capacity){
        std::vector< std::string >* pv = 0;
        if (capacity >= 0) {
          pv = new std::vector< std::string >();
          pv->reserve(capacity);
       } else {
          throw std::out_of_range("capacity");
       }
       return pv;
      }
SWIGINTERN std::string std_vector_Sl_std_string_Sg__getitemcopy(std::vector< std::string > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN std::vector< std::string >::value_type const &std_vector_Sl_std_string_Sg__getitem(std::vector< std::string > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_std_string_Sg__setitem(std::vector< std::string > *self,int index,std::string const &val){
        if (index>=0 && index<(int)self->size())
          (*self)[index] = val;
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_std_string_Sg__AddRange(std::vector< std::string > *self,std::vector< std::string > const &values){
        self->insert(self->end(), values.begin(), values.end());
      }
SWIGINTERN std::vector< std::string > *std_vector_Sl_std_string_Sg__GetRange(std::vector< std::string > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        return new std::vector< std::string >(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_std_string_Sg__Insert(std::vector< std::string > *self,int index,std::string const &x){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, x);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_std_string_Sg__InsertRange(std::vector< std::string > *self,int index,std::vector< std::string > const &values){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, values.begin(), values.end());
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_std_string_Sg__RemoveAt(std::vector< std::string > *self,int index){
        if (index>=0 && index<(int)self->size())
          self->erase(self->begin() + index);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_std_string_Sg__RemoveRange(std::vector< std::string > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        self->erase(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN std::vector< std::string > *std_vector_Sl_std_string_Sg__Repeat(std::string const &value,int count){
        if (count < 0)
          throw std::out_of_range("count");
        return new std::vector< std::string >(count, value);
      }
SWIGINTERN void std_vector_Sl_std_string_Sg__Reverse__SWIG_0(std::vector< std::string > *self){
        std::reverse(self->begin(), self->end());
      }
SWIGINTERN void std_vector_Sl_std_string_Sg__Reverse__SWIG_1(std::vector< std::string > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        std::reverse(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_std_string_Sg__SetRange(std::vector< std::string > *self,int index,std::vector< std::string > const &values){
        if (index < 0)
          throw std::out_of_range("index");
        if (index+values.size() > self->size())
          throw std::out_of_range("index");
        std::copy(values.begin(), values.end(), self->begin()+index);
      }
SWIGINTERN bool std_vector_Sl_std_string_Sg__Contains(std::vector< std::string > *self,std::string const &value){
        return std::find(self->begin(), self->end(), value) != self->end();
      }
SWIGINTERN int std_vector_Sl_std_string_Sg__IndexOf(std::vector< std::string > *self,std::string const &value){
        int index = -1;
        std::vector< std::string >::iterator it = std::find(self->begin(), self->end(), value);
        if (it != self->end())
          index = (int)(it - self->begin());
        return index;
      }
SWIGINTERN int std_vector_Sl_std_string_Sg__LastIndexOf(std::vector< std::string > *self,std::string const &value){
        int index = -1;
        std::vector< std::string >::reverse_iterator rit = std::find(self->rbegin(), self->rend(), value);
        if (rit != self->rend())
          index = (int)(self->rend() - 1 - rit);
        return index;
      }
SWIGINTERN bool std_vector_Sl_std_string_Sg__Remove(std::vector< std::string > *self,std::string const &value){
        std::vector< std::string >::iterator it = std::find(self->begin(), self->end(), value);
        if (it != self->end()) {
          self->erase(it);
          return true;
        }
        return false;
      }
SWIGINTERN std::vector< int > *new_std_vector_Sl_int_Sg___SWIG_2(int capacity){
        std::vector< int >* pv = 0;
        if (capacity >= 0) {
          pv = new std::vector< int >();
          pv->reserve(capacity);
       } else {
          throw std::out_of_range("capacity");
       }
       return pv;
      }
SWIGINTERN int std_vector_Sl_int_Sg__getitemcopy(std::vector< int > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN std::vector< int >::value_type const &std_vector_Sl_int_Sg__getitem(std::vector< int > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_int_Sg__setitem(std::vector< int > *self,int index,int const &val){
        if (index>=0 && index<(int)self->size())
          (*self)[index] = val;
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_int_Sg__AddRange(std::vector< int > *self,std::vector< int > const &values){
        self->insert(self->end(), values.begin(), values.end());
      }
SWIGINTERN std::vector< int > *std_vector_Sl_int_Sg__GetRange(std::vector< int > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        return new std::vector< int >(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_int_Sg__Insert(std::vector< int > *self,int index,int const &x){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, x);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_int_Sg__InsertRange(std::vector< int > *self,int index,std::vector< int > const &values){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, values.begin(), values.end());
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_int_Sg__RemoveAt(std::vector< int > *self,int index){
        if (index>=0 && index<(int)self->size())
          self->erase(self->begin() + index);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_int_Sg__RemoveRange(std::vector< int > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        self->erase(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN std::vector< int > *std_vector_Sl_int_Sg__Repeat(int const &value,int count){
        if (count < 0)
          throw std::out_of_range("count");
        return new std::vector< int >(count, value);
      }
SWIGINTERN void std_vector_Sl_int_Sg__Reverse__SWIG_0(std::vector< int > *self){
        std::reverse(self->begin(), self->end());
      }
SWIGINTERN void std_vector_Sl_int_Sg__Reverse__SWIG_1(std::vector< int > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        std::reverse(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_int_Sg__SetRange(std::vector< int > *self,int index,std::vector< int > const &values){
        if (index < 0)
          throw std::out_of_range("index");
        if (index+values.size() > self->size())
          throw std::out_of_range("index");
        std::copy(values.begin(), values.end(), self->begin()+index);
      }
SWIGINTERN bool std_vector_Sl_int_Sg__Contains(std::vector< int > *self,int const &value){
        return std::find(self->begin(), self->end(), value) != self->end();
      }
SWIGINTERN int std_vector_Sl_int_Sg__IndexOf(std::vector< int > *self,int const &value){
        int index = -1;
        std::vector< int >::iterator it = std::find(self->begin(), self->end(), value);
        if (it != self->end())
          index = (int)(it - self->begin());
        return index;
      }
SWIGINTERN int std_vector_Sl_int_Sg__LastIndexOf(std::vector< int > *self,int const &value){
        int index = -1;
        std::vector< int >::reverse_iterator rit = std::find(self->rbegin(), self->rend(), value);
        if (rit != self->rend())
          index = (int)(self->rend() - 1 - rit);
        return index;
      }
SWIGINTERN bool std_vector_Sl_int_Sg__Remove(std::vector< int > *self,int const &value){
        std::vector< int >::iterator it = std::find(self->begin(), self->end(), value);
        if (it != self->end()) {
          self->erase(it);
          return true;
        }
        return false;
      }
SWIGINTERN std::vector< double > *new_std_vector_Sl_double_Sg___SWIG_2(int capacity){
        std::vector< double >* pv = 0;
        if (capacity >= 0) {
          pv = new std::vector< double >();
          pv->reserve(capacity);
       } else {
          throw std::out_of_range("capacity");
       }
       return pv;
      }
SWIGINTERN double std_vector_Sl_double_Sg__getitemcopy(std::vector< double > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN std::vector< double >::value_type const &std_vector_Sl_double_Sg__getitem(std::vector< double > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_double_Sg__setitem(std::vector< double > *self,int index,double const &val){
        if (index>=0 && index<(int)self->size())
          (*self)[index] = val;
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_double_Sg__AddRange(std::vector< double > *self,std::vector< double > const &values){
        self->insert(self->end(), values.begin(), values.end());
      }
SWIGINTERN std::vector< double > *std_vector_Sl_double_Sg__GetRange(std::vector< double > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        return new std::vector< double >(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_double_Sg__Insert(std::vector< double > *self,int index,double const &x){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, x);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_double_Sg__InsertRange(std::vector< double > *self,int index,std::vector< double > const &values){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, values.begin(), values.end());
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_double_Sg__RemoveAt(std::vector< double > *self,int index){
        if (index>=0 && index<(int)self->size())
          self->erase(self->begin() + index);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_double_Sg__RemoveRange(std::vector< double > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        self->erase(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN std::vector< double > *std_vector_Sl_double_Sg__Repeat(double const &value,int count){
        if (count < 0)
          throw std::out_of_range("count");
        return new std::vector< double >(count, value);
      }
SWIGINTERN void std_vector_Sl_double_Sg__Reverse__SWIG_0(std::vector< double > *self){
        std::reverse(self->begin(), self->end());
      }
SWIGINTERN void std_vector_Sl_double_Sg__Reverse__SWIG_1(std::vector< double > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        std::reverse(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_double_Sg__SetRange(std::vector< double > *self,int index,std::vector< double > const &values){
        if (index < 0)
          throw std::out_of_range("index");
        if (index+values.size() > self->size())
          throw std::out_of_range("index");
        std::copy(values.begin(), values.end(), self->begin()+index);
      }
SWIGINTERN bool std_vector_Sl_double_Sg__Contains(std::vector< double > *self,double const &value){
        return std::find(self->begin(), self->end(), value) != self->end();
      }
SWIGINTERN int std_vector_Sl_double_Sg__IndexOf(std::vector< double > *self,double const &value){
        int index = -1;
        std::vector< double >::iterator it = std::find(self->begin(), self->end(), value);
        if (it != self->end())
          index = (int)(it - self->begin());
        return index;
      }
SWIGINTERN int std_vector_Sl_double_Sg__LastIndexOf(std::vector< double > *self,double const &value){
        int index = -1;
        std::vector< double >::reverse_iterator rit = std::find(self->rbegin(), self->rend(), value);
        if (rit != self->rend())
          index = (int)(self->rend() - 1 - rit);
        return index;
      }
SWIGINTERN bool std_vector_Sl_double_Sg__Remove(std::vector< double > *self,double const &value){
        std::vector< double >::iterator it = std::find(self->begin(), self->end(), value);
        if (it != self->end()) {
          self->erase(it);
          return true;
        }
        return false;
      }
SWIGINTERN std::map< std::string,std::string >::mapped_type const &std_map_Sl_std_string_Sc_std_string_Sg__getitem(std::map< std::string,std::string > *self,std::map< std::string,std::string >::key_type const &key){
        std::map< std::string, std::string, std::less< std::string > >::iterator iter = self->find(key);
        if (iter != self->end())
          return iter->second;
        else
          throw std::out_of_range("key not found");
      }
SWIGINTERN void std_map_Sl_std_string_Sc_std_string_Sg__setitem(std::map< std::string,std::string > *self,std::map< std::string,std::string >::key_type const &key,std::map< std::string,std::string >::mapped_type const &x){
#ifdef __cpp_lib_map_try_emplace
        (*self).insert_or_assign(key, x);
#else
        (*self)[key] = x;
#endif
      }
SWIGINTERN bool std_map_Sl_std_string_Sc_std_string_Sg__ContainsKey(std::map< std::string,std::string > *self,std::map< std::string,std::string >::key_type const &key){
        std::map< std::string, std::string, std::less< std::string > >::iterator iter = self->find(key);
        return iter != self->end();
      }
SWIGINTERN void std_map_Sl_std_string_Sc_std_string_Sg__Add(std::map< std::string,std::string > *self,std::map< std::string,std::string >::key_type const &key,std::map< std::string,std::string >::mapped_type const &value){
        std::map< std::string, std::string, std::less< std::string > >::iterator iter = self->find(key);
        if (iter != self->end())
          throw std::out_of_range("key already exists");
        self->insert(std::pair< std::string, std::string >(key, value));
      }
SWIGINTERN bool std_map_Sl_std_string_Sc_std_string_Sg__Remove(std::map< std::string,std::string > *self,std::map< std::string,std::string >::key_type const &key){
        std::map< std::string, std::string, std::less< std::string > >::iterator iter = self->find(key);
        if (iter != self->end()) {
          self->erase(iter);
          return true;
        }
        return false;
      }
SWIGINTERN std::map< std::string,std::string,std::less< std::string > >::iterator *std_map_Sl_std_string_Sc_std_string_Sg__create_iterator_begin(std::map< std::string,std::string > *self){
        return new std::map< std::string, std::string, std::less< std::string > >::iterator(self->begin());
      }
SWIGINTERN std::map< std::string,std::string >::key_type const &std_map_Sl_std_string_Sc_std_string_Sg__get_next_key(std::map< std::string,std::string > *self,std::map< std::string,std::string,std::less< std::string > >::iterator *swigiterator){
        (void)self;
        std::map< std::string, std::string, std::less< std::string > >::iterator iter = *swigiterator;
        (*swigiterator)++;
        return (*iter).first;
      }
SWIGINTERN void std_map_Sl_std_string_Sc_std_string_Sg__destroy_iterator(std::map< std::string,std::string > *self,std::map< std::string,std::string,std::less< std::string > >::iterator *swigiterator){
        (void)self;
        delete swigiterator;
      }

SWIGINTERN void SWIG_CSharpException(int code, const char *msg) {
  if (code == SWIG_ValueError) {
    SWIG_CSharpExceptionArgumentCodes exception_code = SWIG_CSharpArgumentOutOfRangeException;
    SWIG_CSharpSetPendingExceptionArgument(exception_code, msg, 0);
  } else {
    SWIG_CSharpExceptionCodes exception_code = SWIG_CSharpApplicationException;
    switch(code) {
    case SWIG_MemoryError:
      exception_code = SWIG_CSharpOutOfMemoryException;
      break;
    case SWIG_IndexError:
      exception_code = SWIG_CSharpIndexOutOfRangeException;
      break;
    case SWIG_DivisionByZero:
      exception_code = SWIG_CSharpDivideByZeroException;
      break;
    case SWIG_IOError:
      exception_code = SWIG_CSharpIOException;
      break;
    case SWIG_OverflowError:
      exception_code = SWIG_CSharpOverflowException;
      break;
    case SWIG_NullReferenceError:
      exception_code = SWIG_CSharpNullReferenceException;
      break;
    case SWIG_RuntimeError:
    case SWIG_TypeError:
    case SWIG_SyntaxError:
    case SWIG_SystemError:
    case SWIG_UnknownError:
    default:
      exception_code = SWIG_CSharpApplicationException;
      break;
    }
    SWIG_CSharpSetPendingException(exception_code, msg);
  }
}


#include <typeinfo>
#include <stdexcept>


#include <utility>

SWIGINTERN std::vector< std::pair< std::string,double > > *new_std_vector_Sl_std_pair_Sl_std_string_Sc_double_Sg__Sg___SWIG_2(int capacity){
        std::vector< std::pair< std::string,double > >* pv = 0;
        if (capacity >= 0) {
          pv = new std::vector< std::pair< std::string,double > >();
          pv->reserve(capacity);
       } else {
          throw std::out_of_range("capacity");
       }
       return pv;
      }
SWIGINTERN std::pair< std::string,double > std_vector_Sl_std_pair_Sl_std_string_Sc_double_Sg__Sg__getitemcopy(std::vector< std::pair< std::string,double > > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN std::vector< std::pair< std::string,double > >::value_type const &std_vector_Sl_std_pair_Sl_std_string_Sc_double_Sg__Sg__getitem(std::vector< std::pair< std::string,double > > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_std_pair_Sl_std_string_Sc_double_Sg__Sg__setitem(std::vector< std::pair< std::string,double > > *self,int index,std::pair< std::string,double > const &val){
        if (index>=0 && index<(int)self->size())
          (*self)[index] = val;
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_std_pair_Sl_std_string_Sc_double_Sg__Sg__AddRange(std::vector< std::pair< std::string,double > > *self,std::vector< std::pair< std::string,double > > const &values){
        self->insert(self->end(), values.begin(), values.end());
      }
SWIGINTERN std::vector< std::pair< std::string,double > > *std_vector_Sl_std_pair_Sl_std_string_Sc_double_Sg__Sg__GetRange(std::vector< std::pair< std::string,double > > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        return new std::vector< std::pair< std::string,double > >(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_std_pair_Sl_std_string_Sc_double_Sg__Sg__Insert(std::vector< std::pair< std::string,double > > *self,int index,std::pair< std::string,double > const &x){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, x);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_std_pair_Sl_std_string_Sc_double_Sg__Sg__InsertRange(std::vector< std::pair< std::string,double > > *self,int index,std::vector< std::pair< std::string,double > > const &values){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, values.begin(), values.end());
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_std_pair_Sl_std_string_Sc_double_Sg__Sg__RemoveAt(std::vector< std::pair< std::string,double > > *self,int index){
        if (index>=0 && index<(int)self->size())
          self->erase(self->begin() + index);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_std_pair_Sl_std_string_Sc_double_Sg__Sg__RemoveRange(std::vector< std::pair< std::string,double > > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        self->erase(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN std::vector< std::pair< std::string,double > > *std_vector_Sl_std_pair_Sl_std_string_Sc_double_Sg__Sg__Repeat(std::pair< std::string,double > const &value,int count){
        if (count < 0)
          throw std::out_of_range("count");
        return new std::vector< std::pair< std::string,double > >(count, value);
      }
SWIGINTERN void std_vector_Sl_std_pair_Sl_std_string_Sc_double_Sg__Sg__Reverse__SWIG_0(std::vector< std::pair< std::string,double > > *self){
        std::reverse(self->begin(), self->end());
      }
SWIGINTERN void std_vector_Sl_std_pair_Sl_std_string_Sc_double_Sg__Sg__Reverse__SWIG_1(std::vector< std::pair< std::string,double > > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        std::reverse(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_std_pair_Sl_std_string_Sc_double_Sg__Sg__SetRange(std::vector< std::pair< std::string,double > > *self,int index,std::vector< std::pair< std::string,double > > const &values){
        if (index < 0)
          throw std::out_of_range("index");
        if (index+values.size() > self->size())
          throw std::out_of_range("index");
        std::copy(values.begin(), values.end(), self->begin()+index);
      }

#include <libsumo/Edge.h>
#include <libsumo/GUI.h>
#include <libsumo/InductionLoop.h>
#include <libsumo/Junction.h>
#include <libsumo/LaneArea.h>
#include <libsumo/Lane.h>
#include <libsumo/MultiEntryExit.h>
#include <libsumo/POI.h>
#include <libsumo/Polygon.h>
#include <libsumo/Route.h>
#include <libsumo/Simulation.h>
#include <libsumo/TrafficLight.h>
#include <libsumo/VehicleType.h>
#include <libsumo/Vehicle.h>
#include <libsumo/Person.h>
#include <libsumo/Calibrator.h>
#include <libsumo/BusStop.h>
#include <libsumo/ParkingArea.h>
#include <libsumo/ChargingStation.h>
#include <libsumo/OverheadWire.h>
#include <libsumo/Rerouter.h>
#include <libsumo/MeanData.h>
#include <libsumo/VariableSpeedSign.h>
#include <libsumo/RouteProbe.h>


struct SWIG_null_deleter {
  void operator() (void const *) const {
  }
};
#define SWIG_NO_NULL_DELETER_0 , SWIG_null_deleter()
#define SWIG_NO_NULL_DELETER_1
#define SWIG_NO_NULL_DELETER_SWIG_POINTER_NEW
#define SWIG_NO_NULL_DELETER_SWIG_POINTER_OWN

SWIGINTERN std::vector< std::shared_ptr< libsumo::TraCIPhase > > *new_std_vector_Sl_std_shared_ptr_Sl_libsumo_TraCIPhase_Sg__Sg___SWIG_2(int capacity){
        std::vector< std::shared_ptr< libsumo::TraCIPhase > >* pv = 0;
        if (capacity >= 0) {
          pv = new std::vector< std::shared_ptr< libsumo::TraCIPhase > >();
          pv->reserve(capacity);
       } else {
          throw std::out_of_range("capacity");
       }
       return pv;
      }
SWIGINTERN std::shared_ptr< libsumo::TraCIPhase > std_vector_Sl_std_shared_ptr_Sl_libsumo_TraCIPhase_Sg__Sg__getitemcopy(std::vector< std::shared_ptr< libsumo::TraCIPhase > > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN std::vector< std::shared_ptr< libsumo::TraCIPhase > >::value_type const &std_vector_Sl_std_shared_ptr_Sl_libsumo_TraCIPhase_Sg__Sg__getitem(std::vector< std::shared_ptr< libsumo::TraCIPhase > > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_libsumo_TraCIPhase_Sg__Sg__setitem(std::vector< std::shared_ptr< libsumo::TraCIPhase > > *self,int index,std::shared_ptr< libsumo::TraCIPhase > const &val){
        if (index>=0 && index<(int)self->size())
          (*self)[index] = val;
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_libsumo_TraCIPhase_Sg__Sg__AddRange(std::vector< std::shared_ptr< libsumo::TraCIPhase > > *self,std::vector< std::shared_ptr< libsumo::TraCIPhase > > const &values){
        self->insert(self->end(), values.begin(), values.end());
      }
SWIGINTERN std::vector< std::shared_ptr< libsumo::TraCIPhase > > *std_vector_Sl_std_shared_ptr_Sl_libsumo_TraCIPhase_Sg__Sg__GetRange(std::vector< std::shared_ptr< libsumo::TraCIPhase > > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        return new std::vector< std::shared_ptr< libsumo::TraCIPhase > >(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_libsumo_TraCIPhase_Sg__Sg__Insert(std::vector< std::shared_ptr< libsumo::TraCIPhase > > *self,int index,std::shared_ptr< libsumo::TraCIPhase > const &x){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, x);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_libsumo_TraCIPhase_Sg__Sg__InsertRange(std::vector< std::shared_ptr< libsumo::TraCIPhase > > *self,int index,std::vector< std::shared_ptr< libsumo::TraCIPhase > > const &values){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, values.begin(), values.end());
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_libsumo_TraCIPhase_Sg__Sg__RemoveAt(std::vector< std::shared_ptr< libsumo::TraCIPhase > > *self,int index){
        if (index>=0 && index<(int)self->size())
          self->erase(self->begin() + index);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_libsumo_TraCIPhase_Sg__Sg__RemoveRange(std::vector< std::shared_ptr< libsumo::TraCIPhase > > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        self->erase(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN std::vector< std::shared_ptr< libsumo::TraCIPhase > > *std_vector_Sl_std_shared_ptr_Sl_libsumo_TraCIPhase_Sg__Sg__Repeat(std::shared_ptr< libsumo::TraCIPhase > const &value,int count){
        if (count < 0)
          throw std::out_of_range("count");
        return new std::vector< std::shared_ptr< libsumo::TraCIPhase > >(count, value);
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_libsumo_TraCIPhase_Sg__Sg__Reverse__SWIG_0(std::vector< std::shared_ptr< libsumo::TraCIPhase > > *self){
        std::reverse(self->begin(), self->end());
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_libsumo_TraCIPhase_Sg__Sg__Reverse__SWIG_1(std::vector< std::shared_ptr< libsumo::TraCIPhase > > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        std::reverse(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_std_shared_ptr_Sl_libsumo_TraCIPhase_Sg__Sg__SetRange(std::vector< std::shared_ptr< libsumo::TraCIPhase > > *self,int index,std::vector< std::shared_ptr< libsumo::TraCIPhase > > const &values){
        if (index < 0)
          throw std::out_of_range("index");
        if (index+values.size() > self->size())
          throw std::out_of_range("index");
        std::copy(values.begin(), values.end(), self->begin()+index);
      }
SWIGINTERN std::vector< libsumo::TraCILogic > *new_std_vector_Sl_libsumo_TraCILogic_Sg___SWIG_2(int capacity){
        std::vector< libsumo::TraCILogic >* pv = 0;
        if (capacity >= 0) {
          pv = new std::vector< libsumo::TraCILogic >();
          pv->reserve(capacity);
       } else {
          throw std::out_of_range("capacity");
       }
       return pv;
      }
SWIGINTERN libsumo::TraCILogic std_vector_Sl_libsumo_TraCILogic_Sg__getitemcopy(std::vector< libsumo::TraCILogic > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN std::vector< libsumo::TraCILogic >::value_type const &std_vector_Sl_libsumo_TraCILogic_Sg__getitem(std::vector< libsumo::TraCILogic > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCILogic_Sg__setitem(std::vector< libsumo::TraCILogic > *self,int index,libsumo::TraCILogic const &val){
        if (index>=0 && index<(int)self->size())
          (*self)[index] = val;
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCILogic_Sg__AddRange(std::vector< libsumo::TraCILogic > *self,std::vector< libsumo::TraCILogic > const &values){
        self->insert(self->end(), values.begin(), values.end());
      }
SWIGINTERN std::vector< libsumo::TraCILogic > *std_vector_Sl_libsumo_TraCILogic_Sg__GetRange(std::vector< libsumo::TraCILogic > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        return new std::vector< libsumo::TraCILogic >(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCILogic_Sg__Insert(std::vector< libsumo::TraCILogic > *self,int index,libsumo::TraCILogic const &x){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, x);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCILogic_Sg__InsertRange(std::vector< libsumo::TraCILogic > *self,int index,std::vector< libsumo::TraCILogic > const &values){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, values.begin(), values.end());
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCILogic_Sg__RemoveAt(std::vector< libsumo::TraCILogic > *self,int index){
        if (index>=0 && index<(int)self->size())
          self->erase(self->begin() + index);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCILogic_Sg__RemoveRange(std::vector< libsumo::TraCILogic > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        self->erase(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN std::vector< libsumo::TraCILogic > *std_vector_Sl_libsumo_TraCILogic_Sg__Repeat(libsumo::TraCILogic const &value,int count){
        if (count < 0)
          throw std::out_of_range("count");
        return new std::vector< libsumo::TraCILogic >(count, value);
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCILogic_Sg__Reverse__SWIG_0(std::vector< libsumo::TraCILogic > *self){
        std::reverse(self->begin(), self->end());
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCILogic_Sg__Reverse__SWIG_1(std::vector< libsumo::TraCILogic > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        std::reverse(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCILogic_Sg__SetRange(std::vector< libsumo::TraCILogic > *self,int index,std::vector< libsumo::TraCILogic > const &values){
        if (index < 0)
          throw std::out_of_range("index");
        if (index+values.size() > self->size())
          throw std::out_of_range("index");
        std::copy(values.begin(), values.end(), self->begin()+index);
      }
SWIGINTERN std::vector< libsumo::TraCIStage > *new_std_vector_Sl_libsumo_TraCIStage_Sg___SWIG_2(int capacity){
        std::vector< libsumo::TraCIStage >* pv = 0;
        if (capacity >= 0) {
          pv = new std::vector< libsumo::TraCIStage >();
          pv->reserve(capacity);
       } else {
          throw std::out_of_range("capacity");
       }
       return pv;
      }
SWIGINTERN libsumo::TraCIStage std_vector_Sl_libsumo_TraCIStage_Sg__getitemcopy(std::vector< libsumo::TraCIStage > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN std::vector< libsumo::TraCIStage >::value_type const &std_vector_Sl_libsumo_TraCIStage_Sg__getitem(std::vector< libsumo::TraCIStage > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIStage_Sg__setitem(std::vector< libsumo::TraCIStage > *self,int index,libsumo::TraCIStage const &val){
        if (index>=0 && index<(int)self->size())
          (*self)[index] = val;
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIStage_Sg__AddRange(std::vector< libsumo::TraCIStage > *self,std::vector< libsumo::TraCIStage > const &values){
        self->insert(self->end(), values.begin(), values.end());
      }
SWIGINTERN std::vector< libsumo::TraCIStage > *std_vector_Sl_libsumo_TraCIStage_Sg__GetRange(std::vector< libsumo::TraCIStage > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        return new std::vector< libsumo::TraCIStage >(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIStage_Sg__Insert(std::vector< libsumo::TraCIStage > *self,int index,libsumo::TraCIStage const &x){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, x);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIStage_Sg__InsertRange(std::vector< libsumo::TraCIStage > *self,int index,std::vector< libsumo::TraCIStage > const &values){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, values.begin(), values.end());
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIStage_Sg__RemoveAt(std::vector< libsumo::TraCIStage > *self,int index){
        if (index>=0 && index<(int)self->size())
          self->erase(self->begin() + index);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIStage_Sg__RemoveRange(std::vector< libsumo::TraCIStage > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        self->erase(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN std::vector< libsumo::TraCIStage > *std_vector_Sl_libsumo_TraCIStage_Sg__Repeat(libsumo::TraCIStage const &value,int count){
        if (count < 0)
          throw std::out_of_range("count");
        return new std::vector< libsumo::TraCIStage >(count, value);
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIStage_Sg__Reverse__SWIG_0(std::vector< libsumo::TraCIStage > *self){
        std::reverse(self->begin(), self->end());
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIStage_Sg__Reverse__SWIG_1(std::vector< libsumo::TraCIStage > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        std::reverse(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIStage_Sg__SetRange(std::vector< libsumo::TraCIStage > *self,int index,std::vector< libsumo::TraCIStage > const &values){
        if (index < 0)
          throw std::out_of_range("index");
        if (index+values.size() > self->size())
          throw std::out_of_range("index");
        std::copy(values.begin(), values.end(), self->begin()+index);
      }
SWIGINTERN std::vector< libsumo::TraCINextStopData > *new_std_vector_Sl_libsumo_TraCINextStopData_Sg___SWIG_2(int capacity){
        std::vector< libsumo::TraCINextStopData >* pv = 0;
        if (capacity >= 0) {
          pv = new std::vector< libsumo::TraCINextStopData >();
          pv->reserve(capacity);
       } else {
          throw std::out_of_range("capacity");
       }
       return pv;
      }
SWIGINTERN libsumo::TraCINextStopData std_vector_Sl_libsumo_TraCINextStopData_Sg__getitemcopy(std::vector< libsumo::TraCINextStopData > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN std::vector< libsumo::TraCINextStopData >::value_type const &std_vector_Sl_libsumo_TraCINextStopData_Sg__getitem(std::vector< libsumo::TraCINextStopData > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCINextStopData_Sg__setitem(std::vector< libsumo::TraCINextStopData > *self,int index,libsumo::TraCINextStopData const &val){
        if (index>=0 && index<(int)self->size())
          (*self)[index] = val;
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCINextStopData_Sg__AddRange(std::vector< libsumo::TraCINextStopData > *self,std::vector< libsumo::TraCINextStopData > const &values){
        self->insert(self->end(), values.begin(), values.end());
      }
SWIGINTERN std::vector< libsumo::TraCINextStopData > *std_vector_Sl_libsumo_TraCINextStopData_Sg__GetRange(std::vector< libsumo::TraCINextStopData > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        return new std::vector< libsumo::TraCINextStopData >(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCINextStopData_Sg__Insert(std::vector< libsumo::TraCINextStopData > *self,int index,libsumo::TraCINextStopData const &x){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, x);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCINextStopData_Sg__InsertRange(std::vector< libsumo::TraCINextStopData > *self,int index,std::vector< libsumo::TraCINextStopData > const &values){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, values.begin(), values.end());
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCINextStopData_Sg__RemoveAt(std::vector< libsumo::TraCINextStopData > *self,int index){
        if (index>=0 && index<(int)self->size())
          self->erase(self->begin() + index);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCINextStopData_Sg__RemoveRange(std::vector< libsumo::TraCINextStopData > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        self->erase(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN std::vector< libsumo::TraCINextStopData > *std_vector_Sl_libsumo_TraCINextStopData_Sg__Repeat(libsumo::TraCINextStopData const &value,int count){
        if (count < 0)
          throw std::out_of_range("count");
        return new std::vector< libsumo::TraCINextStopData >(count, value);
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCINextStopData_Sg__Reverse__SWIG_0(std::vector< libsumo::TraCINextStopData > *self){
        std::reverse(self->begin(), self->end());
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCINextStopData_Sg__Reverse__SWIG_1(std::vector< libsumo::TraCINextStopData > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        std::reverse(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCINextStopData_Sg__SetRange(std::vector< libsumo::TraCINextStopData > *self,int index,std::vector< libsumo::TraCINextStopData > const &values){
        if (index < 0)
          throw std::out_of_range("index");
        if (index+values.size() > self->size())
          throw std::out_of_range("index");
        std::copy(values.begin(), values.end(), self->begin()+index);
      }
SWIGINTERN std::vector< libsumo::TraCIReservation > *new_std_vector_Sl_libsumo_TraCIReservation_Sg___SWIG_2(int capacity){
        std::vector< libsumo::TraCIReservation >* pv = 0;
        if (capacity >= 0) {
          pv = new std::vector< libsumo::TraCIReservation >();
          pv->reserve(capacity);
       } else {
          throw std::out_of_range("capacity");
       }
       return pv;
      }
SWIGINTERN libsumo::TraCIReservation std_vector_Sl_libsumo_TraCIReservation_Sg__getitemcopy(std::vector< libsumo::TraCIReservation > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN std::vector< libsumo::TraCIReservation >::value_type const &std_vector_Sl_libsumo_TraCIReservation_Sg__getitem(std::vector< libsumo::TraCIReservation > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIReservation_Sg__setitem(std::vector< libsumo::TraCIReservation > *self,int index,libsumo::TraCIReservation const &val){
        if (index>=0 && index<(int)self->size())
          (*self)[index] = val;
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIReservation_Sg__AddRange(std::vector< libsumo::TraCIReservation > *self,std::vector< libsumo::TraCIReservation > const &values){
        self->insert(self->end(), values.begin(), values.end());
      }
SWIGINTERN std::vector< libsumo::TraCIReservation > *std_vector_Sl_libsumo_TraCIReservation_Sg__GetRange(std::vector< libsumo::TraCIReservation > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        return new std::vector< libsumo::TraCIReservation >(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIReservation_Sg__Insert(std::vector< libsumo::TraCIReservation > *self,int index,libsumo::TraCIReservation const &x){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, x);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIReservation_Sg__InsertRange(std::vector< libsumo::TraCIReservation > *self,int index,std::vector< libsumo::TraCIReservation > const &values){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, values.begin(), values.end());
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIReservation_Sg__RemoveAt(std::vector< libsumo::TraCIReservation > *self,int index){
        if (index>=0 && index<(int)self->size())
          self->erase(self->begin() + index);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIReservation_Sg__RemoveRange(std::vector< libsumo::TraCIReservation > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        self->erase(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN std::vector< libsumo::TraCIReservation > *std_vector_Sl_libsumo_TraCIReservation_Sg__Repeat(libsumo::TraCIReservation const &value,int count){
        if (count < 0)
          throw std::out_of_range("count");
        return new std::vector< libsumo::TraCIReservation >(count, value);
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIReservation_Sg__Reverse__SWIG_0(std::vector< libsumo::TraCIReservation > *self){
        std::reverse(self->begin(), self->end());
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIReservation_Sg__Reverse__SWIG_1(std::vector< libsumo::TraCIReservation > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        std::reverse(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIReservation_Sg__SetRange(std::vector< libsumo::TraCIReservation > *self,int index,std::vector< libsumo::TraCIReservation > const &values){
        if (index < 0)
          throw std::out_of_range("index");
        if (index+values.size() > self->size())
          throw std::out_of_range("index");
        std::copy(values.begin(), values.end(), self->begin()+index);
      }
SWIGINTERN std::vector< libsumo::TraCISignalConstraint > *new_std_vector_Sl_libsumo_TraCISignalConstraint_Sg___SWIG_2(int capacity){
        std::vector< libsumo::TraCISignalConstraint >* pv = 0;
        if (capacity >= 0) {
          pv = new std::vector< libsumo::TraCISignalConstraint >();
          pv->reserve(capacity);
       } else {
          throw std::out_of_range("capacity");
       }
       return pv;
      }
SWIGINTERN libsumo::TraCISignalConstraint std_vector_Sl_libsumo_TraCISignalConstraint_Sg__getitemcopy(std::vector< libsumo::TraCISignalConstraint > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN std::vector< libsumo::TraCISignalConstraint >::value_type const &std_vector_Sl_libsumo_TraCISignalConstraint_Sg__getitem(std::vector< libsumo::TraCISignalConstraint > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCISignalConstraint_Sg__setitem(std::vector< libsumo::TraCISignalConstraint > *self,int index,libsumo::TraCISignalConstraint const &val){
        if (index>=0 && index<(int)self->size())
          (*self)[index] = val;
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCISignalConstraint_Sg__AddRange(std::vector< libsumo::TraCISignalConstraint > *self,std::vector< libsumo::TraCISignalConstraint > const &values){
        self->insert(self->end(), values.begin(), values.end());
      }
SWIGINTERN std::vector< libsumo::TraCISignalConstraint > *std_vector_Sl_libsumo_TraCISignalConstraint_Sg__GetRange(std::vector< libsumo::TraCISignalConstraint > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        return new std::vector< libsumo::TraCISignalConstraint >(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCISignalConstraint_Sg__Insert(std::vector< libsumo::TraCISignalConstraint > *self,int index,libsumo::TraCISignalConstraint const &x){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, x);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCISignalConstraint_Sg__InsertRange(std::vector< libsumo::TraCISignalConstraint > *self,int index,std::vector< libsumo::TraCISignalConstraint > const &values){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, values.begin(), values.end());
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCISignalConstraint_Sg__RemoveAt(std::vector< libsumo::TraCISignalConstraint > *self,int index){
        if (index>=0 && index<(int)self->size())
          self->erase(self->begin() + index);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCISignalConstraint_Sg__RemoveRange(std::vector< libsumo::TraCISignalConstraint > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        self->erase(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN std::vector< libsumo::TraCISignalConstraint > *std_vector_Sl_libsumo_TraCISignalConstraint_Sg__Repeat(libsumo::TraCISignalConstraint const &value,int count){
        if (count < 0)
          throw std::out_of_range("count");
        return new std::vector< libsumo::TraCISignalConstraint >(count, value);
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCISignalConstraint_Sg__Reverse__SWIG_0(std::vector< libsumo::TraCISignalConstraint > *self){
        std::reverse(self->begin(), self->end());
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCISignalConstraint_Sg__Reverse__SWIG_1(std::vector< libsumo::TraCISignalConstraint > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        std::reverse(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCISignalConstraint_Sg__SetRange(std::vector< libsumo::TraCISignalConstraint > *self,int index,std::vector< libsumo::TraCISignalConstraint > const &values){
        if (index < 0)
          throw std::out_of_range("index");
        if (index+values.size() > self->size())
          throw std::out_of_range("index");
        std::copy(values.begin(), values.end(), self->begin()+index);
      }
SWIGINTERN std::vector< libsumo::TraCICollision > *new_std_vector_Sl_libsumo_TraCICollision_Sg___SWIG_2(int capacity){
        std::vector< libsumo::TraCICollision >* pv = 0;
        if (capacity >= 0) {
          pv = new std::vector< libsumo::TraCICollision >();
          pv->reserve(capacity);
       } else {
          throw std::out_of_range("capacity");
       }
       return pv;
      }
SWIGINTERN libsumo::TraCICollision std_vector_Sl_libsumo_TraCICollision_Sg__getitemcopy(std::vector< libsumo::TraCICollision > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN std::vector< libsumo::TraCICollision >::value_type const &std_vector_Sl_libsumo_TraCICollision_Sg__getitem(std::vector< libsumo::TraCICollision > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCICollision_Sg__setitem(std::vector< libsumo::TraCICollision > *self,int index,libsumo::TraCICollision const &val){
        if (index>=0 && index<(int)self->size())
          (*self)[index] = val;
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCICollision_Sg__AddRange(std::vector< libsumo::TraCICollision > *self,std::vector< libsumo::TraCICollision > const &values){
        self->insert(self->end(), values.begin(), values.end());
      }
SWIGINTERN std::vector< libsumo::TraCICollision > *std_vector_Sl_libsumo_TraCICollision_Sg__GetRange(std::vector< libsumo::TraCICollision > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        return new std::vector< libsumo::TraCICollision >(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCICollision_Sg__Insert(std::vector< libsumo::TraCICollision > *self,int index,libsumo::TraCICollision const &x){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, x);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCICollision_Sg__InsertRange(std::vector< libsumo::TraCICollision > *self,int index,std::vector< libsumo::TraCICollision > const &values){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, values.begin(), values.end());
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCICollision_Sg__RemoveAt(std::vector< libsumo::TraCICollision > *self,int index){
        if (index>=0 && index<(int)self->size())
          self->erase(self->begin() + index);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCICollision_Sg__RemoveRange(std::vector< libsumo::TraCICollision > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        self->erase(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN std::vector< libsumo::TraCICollision > *std_vector_Sl_libsumo_TraCICollision_Sg__Repeat(libsumo::TraCICollision const &value,int count){
        if (count < 0)
          throw std::out_of_range("count");
        return new std::vector< libsumo::TraCICollision >(count, value);
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCICollision_Sg__Reverse__SWIG_0(std::vector< libsumo::TraCICollision > *self){
        std::reverse(self->begin(), self->end());
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCICollision_Sg__Reverse__SWIG_1(std::vector< libsumo::TraCICollision > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        std::reverse(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCICollision_Sg__SetRange(std::vector< libsumo::TraCICollision > *self,int index,std::vector< libsumo::TraCICollision > const &values){
        if (index < 0)
          throw std::out_of_range("index");
        if (index+values.size() > self->size())
          throw std::out_of_range("index");
        std::copy(values.begin(), values.end(), self->begin()+index);
      }
SWIGINTERN std::vector< libsumo::TraCIBestLanesData > *new_std_vector_Sl_libsumo_TraCIBestLanesData_Sg___SWIG_2(int capacity){
        std::vector< libsumo::TraCIBestLanesData >* pv = 0;
        if (capacity >= 0) {
          pv = new std::vector< libsumo::TraCIBestLanesData >();
          pv->reserve(capacity);
       } else {
          throw std::out_of_range("capacity");
       }
       return pv;
      }
SWIGINTERN libsumo::TraCIBestLanesData std_vector_Sl_libsumo_TraCIBestLanesData_Sg__getitemcopy(std::vector< libsumo::TraCIBestLanesData > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN std::vector< libsumo::TraCIBestLanesData >::value_type const &std_vector_Sl_libsumo_TraCIBestLanesData_Sg__getitem(std::vector< libsumo::TraCIBestLanesData > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIBestLanesData_Sg__setitem(std::vector< libsumo::TraCIBestLanesData > *self,int index,libsumo::TraCIBestLanesData const &val){
        if (index>=0 && index<(int)self->size())
          (*self)[index] = val;
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIBestLanesData_Sg__AddRange(std::vector< libsumo::TraCIBestLanesData > *self,std::vector< libsumo::TraCIBestLanesData > const &values){
        self->insert(self->end(), values.begin(), values.end());
      }
SWIGINTERN std::vector< libsumo::TraCIBestLanesData > *std_vector_Sl_libsumo_TraCIBestLanesData_Sg__GetRange(std::vector< libsumo::TraCIBestLanesData > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        return new std::vector< libsumo::TraCIBestLanesData >(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIBestLanesData_Sg__Insert(std::vector< libsumo::TraCIBestLanesData > *self,int index,libsumo::TraCIBestLanesData const &x){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, x);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIBestLanesData_Sg__InsertRange(std::vector< libsumo::TraCIBestLanesData > *self,int index,std::vector< libsumo::TraCIBestLanesData > const &values){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, values.begin(), values.end());
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIBestLanesData_Sg__RemoveAt(std::vector< libsumo::TraCIBestLanesData > *self,int index){
        if (index>=0 && index<(int)self->size())
          self->erase(self->begin() + index);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIBestLanesData_Sg__RemoveRange(std::vector< libsumo::TraCIBestLanesData > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        self->erase(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN std::vector< libsumo::TraCIBestLanesData > *std_vector_Sl_libsumo_TraCIBestLanesData_Sg__Repeat(libsumo::TraCIBestLanesData const &value,int count){
        if (count < 0)
          throw std::out_of_range("count");
        return new std::vector< libsumo::TraCIBestLanesData >(count, value);
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIBestLanesData_Sg__Reverse__SWIG_0(std::vector< libsumo::TraCIBestLanesData > *self){
        std::reverse(self->begin(), self->end());
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIBestLanesData_Sg__Reverse__SWIG_1(std::vector< libsumo::TraCIBestLanesData > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        std::reverse(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIBestLanesData_Sg__SetRange(std::vector< libsumo::TraCIBestLanesData > *self,int index,std::vector< libsumo::TraCIBestLanesData > const &values){
        if (index < 0)
          throw std::out_of_range("index");
        if (index+values.size() > self->size())
          throw std::out_of_range("index");
        std::copy(values.begin(), values.end(), self->begin()+index);
      }
SWIGINTERN std::vector< libsumo::TraCIConnection > *new_std_vector_Sl_libsumo_TraCIConnection_Sg___SWIG_2(int capacity){
        std::vector< libsumo::TraCIConnection >* pv = 0;
        if (capacity >= 0) {
          pv = new std::vector< libsumo::TraCIConnection >();
          pv->reserve(capacity);
       } else {
          throw std::out_of_range("capacity");
       }
       return pv;
      }
SWIGINTERN libsumo::TraCIConnection std_vector_Sl_libsumo_TraCIConnection_Sg__getitemcopy(std::vector< libsumo::TraCIConnection > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN std::vector< libsumo::TraCIConnection >::value_type const &std_vector_Sl_libsumo_TraCIConnection_Sg__getitem(std::vector< libsumo::TraCIConnection > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIConnection_Sg__setitem(std::vector< libsumo::TraCIConnection > *self,int index,libsumo::TraCIConnection const &val){
        if (index>=0 && index<(int)self->size())
          (*self)[index] = val;
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIConnection_Sg__AddRange(std::vector< libsumo::TraCIConnection > *self,std::vector< libsumo::TraCIConnection > const &values){
        self->insert(self->end(), values.begin(), values.end());
      }
SWIGINTERN std::vector< libsumo::TraCIConnection > *std_vector_Sl_libsumo_TraCIConnection_Sg__GetRange(std::vector< libsumo::TraCIConnection > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        return new std::vector< libsumo::TraCIConnection >(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIConnection_Sg__Insert(std::vector< libsumo::TraCIConnection > *self,int index,libsumo::TraCIConnection const &x){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, x);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIConnection_Sg__InsertRange(std::vector< libsumo::TraCIConnection > *self,int index,std::vector< libsumo::TraCIConnection > const &values){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, values.begin(), values.end());
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIConnection_Sg__RemoveAt(std::vector< libsumo::TraCIConnection > *self,int index){
        if (index>=0 && index<(int)self->size())
          self->erase(self->begin() + index);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIConnection_Sg__RemoveRange(std::vector< libsumo::TraCIConnection > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        self->erase(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN std::vector< libsumo::TraCIConnection > *std_vector_Sl_libsumo_TraCIConnection_Sg__Repeat(libsumo::TraCIConnection const &value,int count){
        if (count < 0)
          throw std::out_of_range("count");
        return new std::vector< libsumo::TraCIConnection >(count, value);
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIConnection_Sg__Reverse__SWIG_0(std::vector< libsumo::TraCIConnection > *self){
        std::reverse(self->begin(), self->end());
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIConnection_Sg__Reverse__SWIG_1(std::vector< libsumo::TraCIConnection > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        std::reverse(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIConnection_Sg__SetRange(std::vector< libsumo::TraCIConnection > *self,int index,std::vector< libsumo::TraCIConnection > const &values){
        if (index < 0)
          throw std::out_of_range("index");
        if (index+values.size() > self->size())
          throw std::out_of_range("index");
        std::copy(values.begin(), values.end(), self->begin()+index);
      }
SWIGINTERN std::vector< libsumo::TraCIJunctionFoe > *new_std_vector_Sl_libsumo_TraCIJunctionFoe_Sg___SWIG_2(int capacity){
        std::vector< libsumo::TraCIJunctionFoe >* pv = 0;
        if (capacity >= 0) {
          pv = new std::vector< libsumo::TraCIJunctionFoe >();
          pv->reserve(capacity);
       } else {
          throw std::out_of_range("capacity");
       }
       return pv;
      }
SWIGINTERN libsumo::TraCIJunctionFoe std_vector_Sl_libsumo_TraCIJunctionFoe_Sg__getitemcopy(std::vector< libsumo::TraCIJunctionFoe > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN std::vector< libsumo::TraCIJunctionFoe >::value_type const &std_vector_Sl_libsumo_TraCIJunctionFoe_Sg__getitem(std::vector< libsumo::TraCIJunctionFoe > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIJunctionFoe_Sg__setitem(std::vector< libsumo::TraCIJunctionFoe > *self,int index,libsumo::TraCIJunctionFoe const &val){
        if (index>=0 && index<(int)self->size())
          (*self)[index] = val;
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIJunctionFoe_Sg__AddRange(std::vector< libsumo::TraCIJunctionFoe > *self,std::vector< libsumo::TraCIJunctionFoe > const &values){
        self->insert(self->end(), values.begin(), values.end());
      }
SWIGINTERN std::vector< libsumo::TraCIJunctionFoe > *std_vector_Sl_libsumo_TraCIJunctionFoe_Sg__GetRange(std::vector< libsumo::TraCIJunctionFoe > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        return new std::vector< libsumo::TraCIJunctionFoe >(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIJunctionFoe_Sg__Insert(std::vector< libsumo::TraCIJunctionFoe > *self,int index,libsumo::TraCIJunctionFoe const &x){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, x);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIJunctionFoe_Sg__InsertRange(std::vector< libsumo::TraCIJunctionFoe > *self,int index,std::vector< libsumo::TraCIJunctionFoe > const &values){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, values.begin(), values.end());
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIJunctionFoe_Sg__RemoveAt(std::vector< libsumo::TraCIJunctionFoe > *self,int index){
        if (index>=0 && index<(int)self->size())
          self->erase(self->begin() + index);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIJunctionFoe_Sg__RemoveRange(std::vector< libsumo::TraCIJunctionFoe > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        self->erase(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN std::vector< libsumo::TraCIJunctionFoe > *std_vector_Sl_libsumo_TraCIJunctionFoe_Sg__Repeat(libsumo::TraCIJunctionFoe const &value,int count){
        if (count < 0)
          throw std::out_of_range("count");
        return new std::vector< libsumo::TraCIJunctionFoe >(count, value);
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIJunctionFoe_Sg__Reverse__SWIG_0(std::vector< libsumo::TraCIJunctionFoe > *self){
        std::reverse(self->begin(), self->end());
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIJunctionFoe_Sg__Reverse__SWIG_1(std::vector< libsumo::TraCIJunctionFoe > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        std::reverse(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIJunctionFoe_Sg__SetRange(std::vector< libsumo::TraCIJunctionFoe > *self,int index,std::vector< libsumo::TraCIJunctionFoe > const &values){
        if (index < 0)
          throw std::out_of_range("index");
        if (index+values.size() > self->size())
          throw std::out_of_range("index");
        std::copy(values.begin(), values.end(), self->begin()+index);
      }
SWIGINTERN std::vector< libsumo::TraCILink > *new_std_vector_Sl_libsumo_TraCILink_Sg___SWIG_2(int capacity){
        std::vector< libsumo::TraCILink >* pv = 0;
        if (capacity >= 0) {
          pv = new std::vector< libsumo::TraCILink >();
          pv->reserve(capacity);
       } else {
          throw std::out_of_range("capacity");
       }
       return pv;
      }
SWIGINTERN libsumo::TraCILink std_vector_Sl_libsumo_TraCILink_Sg__getitemcopy(std::vector< libsumo::TraCILink > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN std::vector< libsumo::TraCILink >::value_type const &std_vector_Sl_libsumo_TraCILink_Sg__getitem(std::vector< libsumo::TraCILink > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCILink_Sg__setitem(std::vector< libsumo::TraCILink > *self,int index,libsumo::TraCILink const &val){
        if (index>=0 && index<(int)self->size())
          (*self)[index] = val;
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCILink_Sg__AddRange(std::vector< libsumo::TraCILink > *self,std::vector< libsumo::TraCILink > const &values){
        self->insert(self->end(), values.begin(), values.end());
      }
SWIGINTERN std::vector< libsumo::TraCILink > *std_vector_Sl_libsumo_TraCILink_Sg__GetRange(std::vector< libsumo::TraCILink > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        return new std::vector< libsumo::TraCILink >(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCILink_Sg__Insert(std::vector< libsumo::TraCILink > *self,int index,libsumo::TraCILink const &x){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, x);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCILink_Sg__InsertRange(std::vector< libsumo::TraCILink > *self,int index,std::vector< libsumo::TraCILink > const &values){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, values.begin(), values.end());
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCILink_Sg__RemoveAt(std::vector< libsumo::TraCILink > *self,int index){
        if (index>=0 && index<(int)self->size())
          self->erase(self->begin() + index);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCILink_Sg__RemoveRange(std::vector< libsumo::TraCILink > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        self->erase(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN std::vector< libsumo::TraCILink > *std_vector_Sl_libsumo_TraCILink_Sg__Repeat(libsumo::TraCILink const &value,int count){
        if (count < 0)
          throw std::out_of_range("count");
        return new std::vector< libsumo::TraCILink >(count, value);
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCILink_Sg__Reverse__SWIG_0(std::vector< libsumo::TraCILink > *self){
        std::reverse(self->begin(), self->end());
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCILink_Sg__Reverse__SWIG_1(std::vector< libsumo::TraCILink > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        std::reverse(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCILink_Sg__SetRange(std::vector< libsumo::TraCILink > *self,int index,std::vector< libsumo::TraCILink > const &values){
        if (index < 0)
          throw std::out_of_range("index");
        if (index+values.size() > self->size())
          throw std::out_of_range("index");
        std::copy(values.begin(), values.end(), self->begin()+index);
      }
SWIGINTERN std::vector< std::vector< libsumo::TraCILink > > *new_std_vector_Sl_std_vector_Sl_libsumo_TraCILink_Sg__Sg___SWIG_2(int capacity){
        std::vector< std::vector< libsumo::TraCILink > >* pv = 0;
        if (capacity >= 0) {
          pv = new std::vector< std::vector< libsumo::TraCILink > >();
          pv->reserve(capacity);
       } else {
          throw std::out_of_range("capacity");
       }
       return pv;
      }
SWIGINTERN std::vector< libsumo::TraCILink > std_vector_Sl_std_vector_Sl_libsumo_TraCILink_Sg__Sg__getitemcopy(std::vector< std::vector< libsumo::TraCILink > > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN std::vector< std::vector< libsumo::TraCILink > >::value_type const &std_vector_Sl_std_vector_Sl_libsumo_TraCILink_Sg__Sg__getitem(std::vector< std::vector< libsumo::TraCILink > > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_std_vector_Sl_libsumo_TraCILink_Sg__Sg__setitem(std::vector< std::vector< libsumo::TraCILink > > *self,int index,std::vector< libsumo::TraCILink > const &val){
        if (index>=0 && index<(int)self->size())
          (*self)[index] = val;
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_std_vector_Sl_libsumo_TraCILink_Sg__Sg__AddRange(std::vector< std::vector< libsumo::TraCILink > > *self,std::vector< std::vector< libsumo::TraCILink > > const &values){
        self->insert(self->end(), values.begin(), values.end());
      }
SWIGINTERN std::vector< std::vector< libsumo::TraCILink > > *std_vector_Sl_std_vector_Sl_libsumo_TraCILink_Sg__Sg__GetRange(std::vector< std::vector< libsumo::TraCILink > > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        return new std::vector< std::vector< libsumo::TraCILink > >(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_std_vector_Sl_libsumo_TraCILink_Sg__Sg__Insert(std::vector< std::vector< libsumo::TraCILink > > *self,int index,std::vector< libsumo::TraCILink > const &x){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, x);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_std_vector_Sl_libsumo_TraCILink_Sg__Sg__InsertRange(std::vector< std::vector< libsumo::TraCILink > > *self,int index,std::vector< std::vector< libsumo::TraCILink > > const &values){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, values.begin(), values.end());
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_std_vector_Sl_libsumo_TraCILink_Sg__Sg__RemoveAt(std::vector< std::vector< libsumo::TraCILink > > *self,int index){
        if (index>=0 && index<(int)self->size())
          self->erase(self->begin() + index);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_std_vector_Sl_libsumo_TraCILink_Sg__Sg__RemoveRange(std::vector< std::vector< libsumo::TraCILink > > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        self->erase(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN std::vector< std::vector< libsumo::TraCILink > > *std_vector_Sl_std_vector_Sl_libsumo_TraCILink_Sg__Sg__Repeat(std::vector< libsumo::TraCILink > const &value,int count){
        if (count < 0)
          throw std::out_of_range("count");
        return new std::vector< std::vector< libsumo::TraCILink > >(count, value);
      }
SWIGINTERN void std_vector_Sl_std_vector_Sl_libsumo_TraCILink_Sg__Sg__Reverse__SWIG_0(std::vector< std::vector< libsumo::TraCILink > > *self){
        std::reverse(self->begin(), self->end());
      }
SWIGINTERN void std_vector_Sl_std_vector_Sl_libsumo_TraCILink_Sg__Sg__Reverse__SWIG_1(std::vector< std::vector< libsumo::TraCILink > > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        std::reverse(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_std_vector_Sl_libsumo_TraCILink_Sg__Sg__SetRange(std::vector< std::vector< libsumo::TraCILink > > *self,int index,std::vector< std::vector< libsumo::TraCILink > > const &values){
        if (index < 0)
          throw std::out_of_range("index");
        if (index+values.size() > self->size())
          throw std::out_of_range("index");
        std::copy(values.begin(), values.end(), self->begin()+index);
      }
SWIGINTERN std::vector< libsumo::TraCINextTLSData > *new_std_vector_Sl_libsumo_TraCINextTLSData_Sg___SWIG_2(int capacity){
        std::vector< libsumo::TraCINextTLSData >* pv = 0;
        if (capacity >= 0) {
          pv = new std::vector< libsumo::TraCINextTLSData >();
          pv->reserve(capacity);
       } else {
          throw std::out_of_range("capacity");
       }
       return pv;
      }
SWIGINTERN libsumo::TraCINextTLSData std_vector_Sl_libsumo_TraCINextTLSData_Sg__getitemcopy(std::vector< libsumo::TraCINextTLSData > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN std::vector< libsumo::TraCINextTLSData >::value_type const &std_vector_Sl_libsumo_TraCINextTLSData_Sg__getitem(std::vector< libsumo::TraCINextTLSData > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCINextTLSData_Sg__setitem(std::vector< libsumo::TraCINextTLSData > *self,int index,libsumo::TraCINextTLSData const &val){
        if (index>=0 && index<(int)self->size())
          (*self)[index] = val;
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCINextTLSData_Sg__AddRange(std::vector< libsumo::TraCINextTLSData > *self,std::vector< libsumo::TraCINextTLSData > const &values){
        self->insert(self->end(), values.begin(), values.end());
      }
SWIGINTERN std::vector< libsumo::TraCINextTLSData > *std_vector_Sl_libsumo_TraCINextTLSData_Sg__GetRange(std::vector< libsumo::TraCINextTLSData > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        return new std::vector< libsumo::TraCINextTLSData >(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCINextTLSData_Sg__Insert(std::vector< libsumo::TraCINextTLSData > *self,int index,libsumo::TraCINextTLSData const &x){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, x);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCINextTLSData_Sg__InsertRange(std::vector< libsumo::TraCINextTLSData > *self,int index,std::vector< libsumo::TraCINextTLSData > const &values){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, values.begin(), values.end());
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCINextTLSData_Sg__RemoveAt(std::vector< libsumo::TraCINextTLSData > *self,int index){
        if (index>=0 && index<(int)self->size())
          self->erase(self->begin() + index);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCINextTLSData_Sg__RemoveRange(std::vector< libsumo::TraCINextTLSData > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        self->erase(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN std::vector< libsumo::TraCINextTLSData > *std_vector_Sl_libsumo_TraCINextTLSData_Sg__Repeat(libsumo::TraCINextTLSData const &value,int count){
        if (count < 0)
          throw std::out_of_range("count");
        return new std::vector< libsumo::TraCINextTLSData >(count, value);
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCINextTLSData_Sg__Reverse__SWIG_0(std::vector< libsumo::TraCINextTLSData > *self){
        std::reverse(self->begin(), self->end());
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCINextTLSData_Sg__Reverse__SWIG_1(std::vector< libsumo::TraCINextTLSData > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        std::reverse(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCINextTLSData_Sg__SetRange(std::vector< libsumo::TraCINextTLSData > *self,int index,std::vector< libsumo::TraCINextTLSData > const &values){
        if (index < 0)
          throw std::out_of_range("index");
        if (index+values.size() > self->size())
          throw std::out_of_range("index");
        std::copy(values.begin(), values.end(), self->begin()+index);
      }
SWIGINTERN std::vector< libsumo::TraCIPosition > *new_std_vector_Sl_libsumo_TraCIPosition_Sg___SWIG_2(int capacity){
        std::vector< libsumo::TraCIPosition >* pv = 0;
        if (capacity >= 0) {
          pv = new std::vector< libsumo::TraCIPosition >();
          pv->reserve(capacity);
       } else {
          throw std::out_of_range("capacity");
       }
       return pv;
      }
SWIGINTERN libsumo::TraCIPosition std_vector_Sl_libsumo_TraCIPosition_Sg__getitemcopy(std::vector< libsumo::TraCIPosition > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN std::vector< libsumo::TraCIPosition >::value_type const &std_vector_Sl_libsumo_TraCIPosition_Sg__getitem(std::vector< libsumo::TraCIPosition > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIPosition_Sg__setitem(std::vector< libsumo::TraCIPosition > *self,int index,libsumo::TraCIPosition const &val){
        if (index>=0 && index<(int)self->size())
          (*self)[index] = val;
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIPosition_Sg__AddRange(std::vector< libsumo::TraCIPosition > *self,std::vector< libsumo::TraCIPosition > const &values){
        self->insert(self->end(), values.begin(), values.end());
      }
SWIGINTERN std::vector< libsumo::TraCIPosition > *std_vector_Sl_libsumo_TraCIPosition_Sg__GetRange(std::vector< libsumo::TraCIPosition > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        return new std::vector< libsumo::TraCIPosition >(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIPosition_Sg__Insert(std::vector< libsumo::TraCIPosition > *self,int index,libsumo::TraCIPosition const &x){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, x);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIPosition_Sg__InsertRange(std::vector< libsumo::TraCIPosition > *self,int index,std::vector< libsumo::TraCIPosition > const &values){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, values.begin(), values.end());
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIPosition_Sg__RemoveAt(std::vector< libsumo::TraCIPosition > *self,int index){
        if (index>=0 && index<(int)self->size())
          self->erase(self->begin() + index);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIPosition_Sg__RemoveRange(std::vector< libsumo::TraCIPosition > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        self->erase(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN std::vector< libsumo::TraCIPosition > *std_vector_Sl_libsumo_TraCIPosition_Sg__Repeat(libsumo::TraCIPosition const &value,int count){
        if (count < 0)
          throw std::out_of_range("count");
        return new std::vector< libsumo::TraCIPosition >(count, value);
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIPosition_Sg__Reverse__SWIG_0(std::vector< libsumo::TraCIPosition > *self){
        std::reverse(self->begin(), self->end());
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIPosition_Sg__Reverse__SWIG_1(std::vector< libsumo::TraCIPosition > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        std::reverse(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIPosition_Sg__SetRange(std::vector< libsumo::TraCIPosition > *self,int index,std::vector< libsumo::TraCIPosition > const &values){
        if (index < 0)
          throw std::out_of_range("index");
        if (index+values.size() > self->size())
          throw std::out_of_range("index");
        std::copy(values.begin(), values.end(), self->begin()+index);
      }
SWIGINTERN std::vector< libsumo::TraCIVehicleData > *new_std_vector_Sl_libsumo_TraCIVehicleData_Sg___SWIG_2(int capacity){
        std::vector< libsumo::TraCIVehicleData >* pv = 0;
        if (capacity >= 0) {
          pv = new std::vector< libsumo::TraCIVehicleData >();
          pv->reserve(capacity);
       } else {
          throw std::out_of_range("capacity");
       }
       return pv;
      }
SWIGINTERN libsumo::TraCIVehicleData std_vector_Sl_libsumo_TraCIVehicleData_Sg__getitemcopy(std::vector< libsumo::TraCIVehicleData > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN std::vector< libsumo::TraCIVehicleData >::value_type const &std_vector_Sl_libsumo_TraCIVehicleData_Sg__getitem(std::vector< libsumo::TraCIVehicleData > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIVehicleData_Sg__setitem(std::vector< libsumo::TraCIVehicleData > *self,int index,libsumo::TraCIVehicleData const &val){
        if (index>=0 && index<(int)self->size())
          (*self)[index] = val;
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIVehicleData_Sg__AddRange(std::vector< libsumo::TraCIVehicleData > *self,std::vector< libsumo::TraCIVehicleData > const &values){
        self->insert(self->end(), values.begin(), values.end());
      }
SWIGINTERN std::vector< libsumo::TraCIVehicleData > *std_vector_Sl_libsumo_TraCIVehicleData_Sg__GetRange(std::vector< libsumo::TraCIVehicleData > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        return new std::vector< libsumo::TraCIVehicleData >(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIVehicleData_Sg__Insert(std::vector< libsumo::TraCIVehicleData > *self,int index,libsumo::TraCIVehicleData const &x){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, x);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIVehicleData_Sg__InsertRange(std::vector< libsumo::TraCIVehicleData > *self,int index,std::vector< libsumo::TraCIVehicleData > const &values){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, values.begin(), values.end());
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIVehicleData_Sg__RemoveAt(std::vector< libsumo::TraCIVehicleData > *self,int index){
        if (index>=0 && index<(int)self->size())
          self->erase(self->begin() + index);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIVehicleData_Sg__RemoveRange(std::vector< libsumo::TraCIVehicleData > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        self->erase(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN std::vector< libsumo::TraCIVehicleData > *std_vector_Sl_libsumo_TraCIVehicleData_Sg__Repeat(libsumo::TraCIVehicleData const &value,int count){
        if (count < 0)
          throw std::out_of_range("count");
        return new std::vector< libsumo::TraCIVehicleData >(count, value);
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIVehicleData_Sg__Reverse__SWIG_0(std::vector< libsumo::TraCIVehicleData > *self){
        std::reverse(self->begin(), self->end());
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIVehicleData_Sg__Reverse__SWIG_1(std::vector< libsumo::TraCIVehicleData > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        std::reverse(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_libsumo_TraCIVehicleData_Sg__SetRange(std::vector< libsumo::TraCIVehicleData > *self,int index,std::vector< libsumo::TraCIVehicleData > const &values){
        if (index < 0)
          throw std::out_of_range("index");
        if (index+values.size() > self->size())
          throw std::out_of_range("index");
        std::copy(values.begin(), values.end(), self->begin()+index);
      }
SWIGINTERN std::map< int,std::shared_ptr< libsumo::TraCIResult > >::mapped_type const &std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__getitem(std::map< int,std::shared_ptr< libsumo::TraCIResult > > *self,std::map< int,std::shared_ptr< libsumo::TraCIResult > >::key_type const &key){
        std::map< int, std::shared_ptr< libsumo::TraCIResult >, std::less< int > >::iterator iter = self->find(key);
        if (iter != self->end())
          return iter->second;
        else
          throw std::out_of_range("key not found");
      }
SWIGINTERN void std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__setitem(std::map< int,std::shared_ptr< libsumo::TraCIResult > > *self,std::map< int,std::shared_ptr< libsumo::TraCIResult > >::key_type const &key,std::map< int,std::shared_ptr< libsumo::TraCIResult > >::mapped_type const &x){
#ifdef __cpp_lib_map_try_emplace
        (*self).insert_or_assign(key, x);
#else
        (*self)[key] = x;
#endif
      }
SWIGINTERN bool std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__ContainsKey(std::map< int,std::shared_ptr< libsumo::TraCIResult > > *self,std::map< int,std::shared_ptr< libsumo::TraCIResult > >::key_type const &key){
        std::map< int, std::shared_ptr< libsumo::TraCIResult >, std::less< int > >::iterator iter = self->find(key);
        return iter != self->end();
      }
SWIGINTERN void std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__Add(std::map< int,std::shared_ptr< libsumo::TraCIResult > > *self,std::map< int,std::shared_ptr< libsumo::TraCIResult > >::key_type const &key,std::map< int,std::shared_ptr< libsumo::TraCIResult > >::mapped_type const &value){
        std::map< int, std::shared_ptr< libsumo::TraCIResult >, std::less< int > >::iterator iter = self->find(key);
        if (iter != self->end())
          throw std::out_of_range("key already exists");
        self->insert(std::pair< int, std::shared_ptr< libsumo::TraCIResult > >(key, value));
      }
SWIGINTERN bool std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__Remove(std::map< int,std::shared_ptr< libsumo::TraCIResult > > *self,std::map< int,std::shared_ptr< libsumo::TraCIResult > >::key_type const &key){
        std::map< int, std::shared_ptr< libsumo::TraCIResult >, std::less< int > >::iterator iter = self->find(key);
        if (iter != self->end()) {
          self->erase(iter);
          return true;
        }
        return false;
      }
SWIGINTERN std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > >::iterator *std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__create_iterator_begin(std::map< int,std::shared_ptr< libsumo::TraCIResult > > *self){
        return new std::map< int, std::shared_ptr< libsumo::TraCIResult >, std::less< int > >::iterator(self->begin());
      }
SWIGINTERN std::map< int,std::shared_ptr< libsumo::TraCIResult > >::key_type const &std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__get_next_key(std::map< int,std::shared_ptr< libsumo::TraCIResult > > *self,std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > >::iterator *swigiterator){
        (void)self;
        std::map< int, std::shared_ptr< libsumo::TraCIResult >, std::less< int > >::iterator iter = *swigiterator;
        (*swigiterator)++;
        return (*iter).first;
      }
SWIGINTERN void std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__destroy_iterator(std::map< int,std::shared_ptr< libsumo::TraCIResult > > *self,std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > >::iterator *swigiterator){
        (void)self;
        delete swigiterator;
      }
SWIGINTERN std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > >::mapped_type const &std_map_Sl_std_string_Sc_std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__Sg__getitem(std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *self,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > >::key_type const &key){
        std::map< std::string, std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > >, std::less< std::string > >::iterator iter = self->find(key);
        if (iter != self->end())
          return iter->second;
        else
          throw std::out_of_range("key not found");
      }
SWIGINTERN void std_map_Sl_std_string_Sc_std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__Sg__setitem(std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *self,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > >::key_type const &key,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > >::mapped_type const &x){
#ifdef __cpp_lib_map_try_emplace
        (*self).insert_or_assign(key, x);
#else
        (*self)[key] = x;
#endif
      }
SWIGINTERN bool std_map_Sl_std_string_Sc_std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__Sg__ContainsKey(std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *self,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > >::key_type const &key){
        std::map< std::string, std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > >, std::less< std::string > >::iterator iter = self->find(key);
        return iter != self->end();
      }
SWIGINTERN void std_map_Sl_std_string_Sc_std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__Sg__Add(std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *self,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > >::key_type const &key,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > >::mapped_type const &value){
        std::map< std::string, std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > >, std::less< std::string > >::iterator iter = self->find(key);
        if (iter != self->end())
          throw std::out_of_range("key already exists");
        self->insert(std::pair< std::string, std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > > >(key, value));
      }
SWIGINTERN bool std_map_Sl_std_string_Sc_std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__Sg__Remove(std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *self,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > >::key_type const &key){
        std::map< std::string, std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > >, std::less< std::string > >::iterator iter = self->find(key);
        if (iter != self->end()) {
          self->erase(iter);
          return true;
        }
        return false;
      }
SWIGINTERN std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > >,std::less< std::string > >::iterator *std_map_Sl_std_string_Sc_std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__Sg__create_iterator_begin(std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *self){
        return new std::map< std::string, std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > >, std::less< std::string > >::iterator(self->begin());
      }
SWIGINTERN std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > >::key_type const &std_map_Sl_std_string_Sc_std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__Sg__get_next_key(std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *self,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > >,std::less< std::string > >::iterator *swigiterator){
        (void)self;
        std::map< std::string, std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > >, std::less< std::string > >::iterator iter = *swigiterator;
        (*swigiterator)++;
        return (*iter).first;
      }
SWIGINTERN void std_map_Sl_std_string_Sc_std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__Sg__destroy_iterator(std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *self,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > >,std::less< std::string > >::iterator *swigiterator){
        (void)self;
        delete swigiterator;
      }
SWIGINTERN std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > >::mapped_type const &std_map_Sl_std_string_Sc_std_map_Sl_std_string_Sc_std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__Sg__Sg__getitem(std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *self,std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > >::key_type const &key){
        std::map< std::string, std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > >,std::less< std::string > >, std::less< std::string > >::iterator iter = self->find(key);
        if (iter != self->end())
          return iter->second;
        else
          throw std::out_of_range("key not found");
      }
SWIGINTERN void std_map_Sl_std_string_Sc_std_map_Sl_std_string_Sc_std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__Sg__Sg__setitem(std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *self,std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > >::key_type const &key,std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > >::mapped_type const &x){
#ifdef __cpp_lib_map_try_emplace
        (*self).insert_or_assign(key, x);
#else
        (*self)[key] = x;
#endif
      }
SWIGINTERN bool std_map_Sl_std_string_Sc_std_map_Sl_std_string_Sc_std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__Sg__Sg__ContainsKey(std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *self,std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > >::key_type const &key){
        std::map< std::string, std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > >,std::less< std::string > >, std::less< std::string > >::iterator iter = self->find(key);
        return iter != self->end();
      }
SWIGINTERN void std_map_Sl_std_string_Sc_std_map_Sl_std_string_Sc_std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__Sg__Sg__Add(std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *self,std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > >::key_type const &key,std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > >::mapped_type const &value){
        std::map< std::string, std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > >,std::less< std::string > >, std::less< std::string > >::iterator iter = self->find(key);
        if (iter != self->end())
          throw std::out_of_range("key already exists");
        self->insert(std::pair< std::string, std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > >,std::less< std::string > > >(key, value));
      }
SWIGINTERN bool std_map_Sl_std_string_Sc_std_map_Sl_std_string_Sc_std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__Sg__Sg__Remove(std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *self,std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > >::key_type const &key){
        std::map< std::string, std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > >,std::less< std::string > >, std::less< std::string > >::iterator iter = self->find(key);
        if (iter != self->end()) {
          self->erase(iter);
          return true;
        }
        return false;
      }
SWIGINTERN std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > >,std::less< std::string > >,std::less< std::string > >::iterator *std_map_Sl_std_string_Sc_std_map_Sl_std_string_Sc_std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__Sg__Sg__create_iterator_begin(std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *self){
        return new std::map< std::string, std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > >,std::less< std::string > >, std::less< std::string > >::iterator(self->begin());
      }
SWIGINTERN std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > >::key_type const &std_map_Sl_std_string_Sc_std_map_Sl_std_string_Sc_std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__Sg__Sg__get_next_key(std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *self,std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > >,std::less< std::string > >,std::less< std::string > >::iterator *swigiterator){
        (void)self;
        std::map< std::string, std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > >,std::less< std::string > >, std::less< std::string > >::iterator iter = *swigiterator;
        (*swigiterator)++;
        return (*iter).first;
      }
SWIGINTERN void std_map_Sl_std_string_Sc_std_map_Sl_std_string_Sc_std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__Sg__Sg__destroy_iterator(std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *self,std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > >,std::less< std::string > >,std::less< std::string > >::iterator *swigiterator){
        (void)self;
        delete swigiterator;
      }

#ifdef __cplusplus
extern "C" {
#endif

SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_StringVector__SWIG_0___() {
  void * jresult ;
  std::vector< std::string > *result = 0 ;
  
  result = (std::vector< std::string > *)new std::vector< std::string >();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_StringVector__SWIG_1___(void * jarg1) {
  void * jresult ;
  std::vector< std::string > *arg1 = 0 ;
  std::vector< std::string > *result = 0 ;
  
  arg1 = (std::vector< std::string > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::string > const & is null", 0);
    return 0;
  } 
  result = (std::vector< std::string > *)new std::vector< std::string >((std::vector< std::string > const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringVector_Clear___(void * jarg1) {
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  
  arg1 = (std::vector< std::string > *)jarg1; 
  (arg1)->clear();
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringVector_Add___(void * jarg1, const char * jarg2) {
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::string *arg2 = 0 ;
  
  arg1 = (std::vector< std::string > *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  (arg1)->push_back((std::string const &)*arg2);
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringVector_size___(void * jarg1) {
  unsigned int jresult ;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::vector< std::string >::size_type result;
  
  arg1 = (std::vector< std::string > *)jarg1; 
  result = ((std::vector< std::string > const *)arg1)->size();
  jresult = (unsigned int)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringVector_empty___(void * jarg1) {
  unsigned int jresult ;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  bool result;
  
  arg1 = (std::vector< std::string > *)jarg1; 
  result = (bool)((std::vector< std::string > const *)arg1)->empty();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringVector_capacity___(void * jarg1) {
  unsigned int jresult ;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::vector< std::string >::size_type result;
  
  arg1 = (std::vector< std::string > *)jarg1; 
  result = ((std::vector< std::string > const *)arg1)->capacity();
  jresult = (unsigned int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringVector_reserve___(void * jarg1, unsigned int jarg2) {
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::vector< std::string >::size_type arg2 ;
  
  arg1 = (std::vector< std::string > *)jarg1; 
  arg2 = (std::vector< std::string >::size_type)jarg2; 
  (arg1)->reserve(SWIG_STD_MOVE(arg2));
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_StringVector__SWIG_2___(int jarg1) {
  void * jresult ;
  int arg1 ;
  std::vector< std::string > *result = 0 ;
  
  arg1 = (int)jarg1; 
  try {
    result = (std::vector< std::string > *)new_std_vector_Sl_std_string_Sg___SWIG_2(arg1);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringVector_getitemcopy___(void * jarg1, int jarg2) {
  const char * jresult ;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  int arg2 ;
  std::string result;
  
  arg1 = (std::vector< std::string > *)jarg1; 
  arg2 = (int)jarg2; 
  try {
    result = std_vector_Sl_std_string_Sg__getitemcopy(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringVector_getitem___(void * jarg1, int jarg2) {
  const char * jresult ;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  int arg2 ;
  std::vector< std::string >::value_type *result = 0 ;
  
  arg1 = (std::vector< std::string > *)jarg1; 
  arg2 = (int)jarg2; 
  try {
    result = (std::vector< std::string >::value_type *) &std_vector_Sl_std_string_Sg__getitem(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringVector_setitem___(void * jarg1, int jarg2, const char * jarg3) {
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  int arg2 ;
  std::string *arg3 = 0 ;
  
  arg1 = (std::vector< std::string > *)jarg1; 
  arg2 = (int)jarg2; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  try {
    std_vector_Sl_std_string_Sg__setitem(arg1,arg2,(std::string const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringVector_AddRange___(void * jarg1, void * jarg2) {
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::vector< std::string > *arg2 = 0 ;
  
  arg1 = (std::vector< std::string > *)jarg1; 
  arg2 = (std::vector< std::string > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::string > const & is null", 0);
    return ;
  } 
  std_vector_Sl_std_string_Sg__AddRange(arg1,(std::vector< std::string > const &)*arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringVector_GetRange___(void * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  int arg2 ;
  int arg3 ;
  std::vector< std::string > *result = 0 ;
  
  arg1 = (std::vector< std::string > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  try {
    result = (std::vector< std::string > *)std_vector_Sl_std_string_Sg__GetRange(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  } catch(std::invalid_argument &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringVector_Insert___(void * jarg1, int jarg2, const char * jarg3) {
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  int arg2 ;
  std::string *arg3 = 0 ;
  
  arg1 = (std::vector< std::string > *)jarg1; 
  arg2 = (int)jarg2; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  try {
    std_vector_Sl_std_string_Sg__Insert(arg1,arg2,(std::string const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringVector_InsertRange___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  int arg2 ;
  std::vector< std::string > *arg3 = 0 ;
  
  arg1 = (std::vector< std::string > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< std::string > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::string > const & is null", 0);
    return ;
  } 
  try {
    std_vector_Sl_std_string_Sg__InsertRange(arg1,arg2,(std::vector< std::string > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringVector_RemoveAt___(void * jarg1, int jarg2) {
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  int arg2 ;
  
  arg1 = (std::vector< std::string > *)jarg1; 
  arg2 = (int)jarg2; 
  try {
    std_vector_Sl_std_string_Sg__RemoveAt(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringVector_RemoveRange___(void * jarg1, int jarg2, int jarg3) {
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< std::string > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  try {
    std_vector_Sl_std_string_Sg__RemoveRange(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  } catch(std::invalid_argument &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
    return ;
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringVector_Repeat___(const char * jarg1, int jarg2) {
  void * jresult ;
  std::string *arg1 = 0 ;
  int arg2 ;
  std::vector< std::string > *result = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  try {
    result = (std::vector< std::string > *)std_vector_Sl_std_string_Sg__Repeat((std::string const &)*arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringVector_Reverse__SWIG_0___(void * jarg1) {
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  
  arg1 = (std::vector< std::string > *)jarg1; 
  std_vector_Sl_std_string_Sg__Reverse__SWIG_0(arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringVector_Reverse__SWIG_1___(void * jarg1, int jarg2, int jarg3) {
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< std::string > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  try {
    std_vector_Sl_std_string_Sg__Reverse__SWIG_1(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  } catch(std::invalid_argument &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringVector_SetRange___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  int arg2 ;
  std::vector< std::string > *arg3 = 0 ;
  
  arg1 = (std::vector< std::string > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< std::string > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::string > const & is null", 0);
    return ;
  } 
  try {
    std_vector_Sl_std_string_Sg__SetRange(arg1,arg2,(std::vector< std::string > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringVector_Contains___(void * jarg1, const char * jarg2) {
  unsigned int jresult ;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::string *arg2 = 0 ;
  bool result;
  
  arg1 = (std::vector< std::string > *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  result = (bool)std_vector_Sl_std_string_Sg__Contains(arg1,(std::string const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringVector_IndexOf___(void * jarg1, const char * jarg2) {
  int jresult ;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::string *arg2 = 0 ;
  int result;
  
  arg1 = (std::vector< std::string > *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  result = (int)std_vector_Sl_std_string_Sg__IndexOf(arg1,(std::string const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringVector_LastIndexOf___(void * jarg1, const char * jarg2) {
  int jresult ;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::string *arg2 = 0 ;
  int result;
  
  arg1 = (std::vector< std::string > *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  result = (int)std_vector_Sl_std_string_Sg__LastIndexOf(arg1,(std::string const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringVector_Remove___(void * jarg1, const char * jarg2) {
  unsigned int jresult ;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::string *arg2 = 0 ;
  bool result;
  
  arg1 = (std::vector< std::string > *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  result = (bool)std_vector_Sl_std_string_Sg__Remove(arg1,(std::string const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_StringVector___(void * jarg1) {
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  
  arg1 = (std::vector< std::string > *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_IntVector__SWIG_0___() {
  void * jresult ;
  std::vector< int > *result = 0 ;
  
  result = (std::vector< int > *)new std::vector< int >();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_IntVector__SWIG_1___(void * jarg1) {
  void * jresult ;
  std::vector< int > *arg1 = 0 ;
  std::vector< int > *result = 0 ;
  
  arg1 = (std::vector< int > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return 0;
  } 
  result = (std::vector< int > *)new std::vector< int >((std::vector< int > const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_IntVector_Clear___(void * jarg1) {
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  
  arg1 = (std::vector< int > *)jarg1; 
  (arg1)->clear();
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_IntVector_Add___(void * jarg1, int jarg2) {
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  int *arg2 = 0 ;
  int temp2 ;
  
  arg1 = (std::vector< int > *)jarg1; 
  temp2 = (int)jarg2; 
  arg2 = &temp2; 
  (arg1)->push_back((int const &)*arg2);
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_IntVector_size___(void * jarg1) {
  unsigned int jresult ;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  std::vector< int >::size_type result;
  
  arg1 = (std::vector< int > *)jarg1; 
  result = ((std::vector< int > const *)arg1)->size();
  jresult = (unsigned int)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_IntVector_empty___(void * jarg1) {
  unsigned int jresult ;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  bool result;
  
  arg1 = (std::vector< int > *)jarg1; 
  result = (bool)((std::vector< int > const *)arg1)->empty();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_IntVector_capacity___(void * jarg1) {
  unsigned int jresult ;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  std::vector< int >::size_type result;
  
  arg1 = (std::vector< int > *)jarg1; 
  result = ((std::vector< int > const *)arg1)->capacity();
  jresult = (unsigned int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_IntVector_reserve___(void * jarg1, unsigned int jarg2) {
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  std::vector< int >::size_type arg2 ;
  
  arg1 = (std::vector< int > *)jarg1; 
  arg2 = (std::vector< int >::size_type)jarg2; 
  (arg1)->reserve(SWIG_STD_MOVE(arg2));
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_IntVector__SWIG_2___(int jarg1) {
  void * jresult ;
  int arg1 ;
  std::vector< int > *result = 0 ;
  
  arg1 = (int)jarg1; 
  try {
    result = (std::vector< int > *)new_std_vector_Sl_int_Sg___SWIG_2(arg1);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_IntVector_getitemcopy___(void * jarg1, int jarg2) {
  int jresult ;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  int arg2 ;
  int result;
  
  arg1 = (std::vector< int > *)jarg1; 
  arg2 = (int)jarg2; 
  try {
    result = (int)std_vector_Sl_int_Sg__getitemcopy(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_IntVector_getitem___(void * jarg1, int jarg2) {
  int jresult ;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  int arg2 ;
  std::vector< int >::value_type *result = 0 ;
  
  arg1 = (std::vector< int > *)jarg1; 
  arg2 = (int)jarg2; 
  try {
    result = (std::vector< int >::value_type *) &std_vector_Sl_int_Sg__getitem(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = *result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_IntVector_setitem___(void * jarg1, int jarg2, int jarg3) {
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  int arg2 ;
  int *arg3 = 0 ;
  int temp3 ;
  
  arg1 = (std::vector< int > *)jarg1; 
  arg2 = (int)jarg2; 
  temp3 = (int)jarg3; 
  arg3 = &temp3; 
  try {
    std_vector_Sl_int_Sg__setitem(arg1,arg2,(int const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_IntVector_AddRange___(void * jarg1, void * jarg2) {
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  std::vector< int > *arg2 = 0 ;
  
  arg1 = (std::vector< int > *)jarg1; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  std_vector_Sl_int_Sg__AddRange(arg1,(std::vector< int > const &)*arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_IntVector_GetRange___(void * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  int arg2 ;
  int arg3 ;
  std::vector< int > *result = 0 ;
  
  arg1 = (std::vector< int > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  try {
    result = (std::vector< int > *)std_vector_Sl_int_Sg__GetRange(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  } catch(std::invalid_argument &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_IntVector_Insert___(void * jarg1, int jarg2, int jarg3) {
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  int arg2 ;
  int *arg3 = 0 ;
  int temp3 ;
  
  arg1 = (std::vector< int > *)jarg1; 
  arg2 = (int)jarg2; 
  temp3 = (int)jarg3; 
  arg3 = &temp3; 
  try {
    std_vector_Sl_int_Sg__Insert(arg1,arg2,(int const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_IntVector_InsertRange___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  int arg2 ;
  std::vector< int > *arg3 = 0 ;
  
  arg1 = (std::vector< int > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< int > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  try {
    std_vector_Sl_int_Sg__InsertRange(arg1,arg2,(std::vector< int > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_IntVector_RemoveAt___(void * jarg1, int jarg2) {
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  int arg2 ;
  
  arg1 = (std::vector< int > *)jarg1; 
  arg2 = (int)jarg2; 
  try {
    std_vector_Sl_int_Sg__RemoveAt(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_IntVector_RemoveRange___(void * jarg1, int jarg2, int jarg3) {
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< int > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  try {
    std_vector_Sl_int_Sg__RemoveRange(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  } catch(std::invalid_argument &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
    return ;
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_IntVector_Repeat___(int jarg1, int jarg2) {
  void * jresult ;
  int *arg1 = 0 ;
  int arg2 ;
  int temp1 ;
  std::vector< int > *result = 0 ;
  
  temp1 = (int)jarg1; 
  arg1 = &temp1; 
  arg2 = (int)jarg2; 
  try {
    result = (std::vector< int > *)std_vector_Sl_int_Sg__Repeat((int const &)*arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_IntVector_Reverse__SWIG_0___(void * jarg1) {
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  
  arg1 = (std::vector< int > *)jarg1; 
  std_vector_Sl_int_Sg__Reverse__SWIG_0(arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_IntVector_Reverse__SWIG_1___(void * jarg1, int jarg2, int jarg3) {
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< int > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  try {
    std_vector_Sl_int_Sg__Reverse__SWIG_1(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  } catch(std::invalid_argument &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_IntVector_SetRange___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  int arg2 ;
  std::vector< int > *arg3 = 0 ;
  
  arg1 = (std::vector< int > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< int > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  try {
    std_vector_Sl_int_Sg__SetRange(arg1,arg2,(std::vector< int > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_IntVector_Contains___(void * jarg1, int jarg2) {
  unsigned int jresult ;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  int *arg2 = 0 ;
  int temp2 ;
  bool result;
  
  arg1 = (std::vector< int > *)jarg1; 
  temp2 = (int)jarg2; 
  arg2 = &temp2; 
  result = (bool)std_vector_Sl_int_Sg__Contains(arg1,(int const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_IntVector_IndexOf___(void * jarg1, int jarg2) {
  int jresult ;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  int *arg2 = 0 ;
  int temp2 ;
  int result;
  
  arg1 = (std::vector< int > *)jarg1; 
  temp2 = (int)jarg2; 
  arg2 = &temp2; 
  result = (int)std_vector_Sl_int_Sg__IndexOf(arg1,(int const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_IntVector_LastIndexOf___(void * jarg1, int jarg2) {
  int jresult ;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  int *arg2 = 0 ;
  int temp2 ;
  int result;
  
  arg1 = (std::vector< int > *)jarg1; 
  temp2 = (int)jarg2; 
  arg2 = &temp2; 
  result = (int)std_vector_Sl_int_Sg__LastIndexOf(arg1,(int const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_IntVector_Remove___(void * jarg1, int jarg2) {
  unsigned int jresult ;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  int *arg2 = 0 ;
  int temp2 ;
  bool result;
  
  arg1 = (std::vector< int > *)jarg1; 
  temp2 = (int)jarg2; 
  arg2 = &temp2; 
  result = (bool)std_vector_Sl_int_Sg__Remove(arg1,(int const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_IntVector___(void * jarg1) {
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  
  arg1 = (std::vector< int > *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_DoubleVector__SWIG_0___() {
  void * jresult ;
  std::vector< double > *result = 0 ;
  
  result = (std::vector< double > *)new std::vector< double >();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_DoubleVector__SWIG_1___(void * jarg1) {
  void * jresult ;
  std::vector< double > *arg1 = 0 ;
  std::vector< double > *result = 0 ;
  
  arg1 = (std::vector< double > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< double > const & is null", 0);
    return 0;
  } 
  result = (std::vector< double > *)new std::vector< double >((std::vector< double > const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_DoubleVector_Clear___(void * jarg1) {
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  
  arg1 = (std::vector< double > *)jarg1; 
  (arg1)->clear();
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_DoubleVector_Add___(void * jarg1, double jarg2) {
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  double *arg2 = 0 ;
  double temp2 ;
  
  arg1 = (std::vector< double > *)jarg1; 
  temp2 = (double)jarg2; 
  arg2 = &temp2; 
  (arg1)->push_back((double const &)*arg2);
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_DoubleVector_size___(void * jarg1) {
  unsigned int jresult ;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  std::vector< double >::size_type result;
  
  arg1 = (std::vector< double > *)jarg1; 
  result = ((std::vector< double > const *)arg1)->size();
  jresult = (unsigned int)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_DoubleVector_empty___(void * jarg1) {
  unsigned int jresult ;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  bool result;
  
  arg1 = (std::vector< double > *)jarg1; 
  result = (bool)((std::vector< double > const *)arg1)->empty();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_DoubleVector_capacity___(void * jarg1) {
  unsigned int jresult ;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  std::vector< double >::size_type result;
  
  arg1 = (std::vector< double > *)jarg1; 
  result = ((std::vector< double > const *)arg1)->capacity();
  jresult = (unsigned int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_DoubleVector_reserve___(void * jarg1, unsigned int jarg2) {
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  std::vector< double >::size_type arg2 ;
  
  arg1 = (std::vector< double > *)jarg1; 
  arg2 = (std::vector< double >::size_type)jarg2; 
  (arg1)->reserve(SWIG_STD_MOVE(arg2));
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_DoubleVector__SWIG_2___(int jarg1) {
  void * jresult ;
  int arg1 ;
  std::vector< double > *result = 0 ;
  
  arg1 = (int)jarg1; 
  try {
    result = (std::vector< double > *)new_std_vector_Sl_double_Sg___SWIG_2(arg1);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_DoubleVector_getitemcopy___(void * jarg1, int jarg2) {
  double jresult ;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  int arg2 ;
  double result;
  
  arg1 = (std::vector< double > *)jarg1; 
  arg2 = (int)jarg2; 
  try {
    result = (double)std_vector_Sl_double_Sg__getitemcopy(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_DoubleVector_getitem___(void * jarg1, int jarg2) {
  double jresult ;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  int arg2 ;
  std::vector< double >::value_type *result = 0 ;
  
  arg1 = (std::vector< double > *)jarg1; 
  arg2 = (int)jarg2; 
  try {
    result = (std::vector< double >::value_type *) &std_vector_Sl_double_Sg__getitem(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = *result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_DoubleVector_setitem___(void * jarg1, int jarg2, double jarg3) {
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  int arg2 ;
  double *arg3 = 0 ;
  double temp3 ;
  
  arg1 = (std::vector< double > *)jarg1; 
  arg2 = (int)jarg2; 
  temp3 = (double)jarg3; 
  arg3 = &temp3; 
  try {
    std_vector_Sl_double_Sg__setitem(arg1,arg2,(double const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_DoubleVector_AddRange___(void * jarg1, void * jarg2) {
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  std::vector< double > *arg2 = 0 ;
  
  arg1 = (std::vector< double > *)jarg1; 
  arg2 = (std::vector< double > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< double > const & is null", 0);
    return ;
  } 
  std_vector_Sl_double_Sg__AddRange(arg1,(std::vector< double > const &)*arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_DoubleVector_GetRange___(void * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  int arg2 ;
  int arg3 ;
  std::vector< double > *result = 0 ;
  
  arg1 = (std::vector< double > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  try {
    result = (std::vector< double > *)std_vector_Sl_double_Sg__GetRange(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  } catch(std::invalid_argument &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_DoubleVector_Insert___(void * jarg1, int jarg2, double jarg3) {
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  int arg2 ;
  double *arg3 = 0 ;
  double temp3 ;
  
  arg1 = (std::vector< double > *)jarg1; 
  arg2 = (int)jarg2; 
  temp3 = (double)jarg3; 
  arg3 = &temp3; 
  try {
    std_vector_Sl_double_Sg__Insert(arg1,arg2,(double const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_DoubleVector_InsertRange___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  int arg2 ;
  std::vector< double > *arg3 = 0 ;
  
  arg1 = (std::vector< double > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< double > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< double > const & is null", 0);
    return ;
  } 
  try {
    std_vector_Sl_double_Sg__InsertRange(arg1,arg2,(std::vector< double > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_DoubleVector_RemoveAt___(void * jarg1, int jarg2) {
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  int arg2 ;
  
  arg1 = (std::vector< double > *)jarg1; 
  arg2 = (int)jarg2; 
  try {
    std_vector_Sl_double_Sg__RemoveAt(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_DoubleVector_RemoveRange___(void * jarg1, int jarg2, int jarg3) {
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< double > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  try {
    std_vector_Sl_double_Sg__RemoveRange(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  } catch(std::invalid_argument &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
    return ;
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_DoubleVector_Repeat___(double jarg1, int jarg2) {
  void * jresult ;
  double *arg1 = 0 ;
  int arg2 ;
  double temp1 ;
  std::vector< double > *result = 0 ;
  
  temp1 = (double)jarg1; 
  arg1 = &temp1; 
  arg2 = (int)jarg2; 
  try {
    result = (std::vector< double > *)std_vector_Sl_double_Sg__Repeat((double const &)*arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_DoubleVector_Reverse__SWIG_0___(void * jarg1) {
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  
  arg1 = (std::vector< double > *)jarg1; 
  std_vector_Sl_double_Sg__Reverse__SWIG_0(arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_DoubleVector_Reverse__SWIG_1___(void * jarg1, int jarg2, int jarg3) {
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< double > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  try {
    std_vector_Sl_double_Sg__Reverse__SWIG_1(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  } catch(std::invalid_argument &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_DoubleVector_SetRange___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  int arg2 ;
  std::vector< double > *arg3 = 0 ;
  
  arg1 = (std::vector< double > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< double > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< double > const & is null", 0);
    return ;
  } 
  try {
    std_vector_Sl_double_Sg__SetRange(arg1,arg2,(std::vector< double > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_DoubleVector_Contains___(void * jarg1, double jarg2) {
  unsigned int jresult ;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  double *arg2 = 0 ;
  double temp2 ;
  bool result;
  
  arg1 = (std::vector< double > *)jarg1; 
  temp2 = (double)jarg2; 
  arg2 = &temp2; 
  result = (bool)std_vector_Sl_double_Sg__Contains(arg1,(double const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_DoubleVector_IndexOf___(void * jarg1, double jarg2) {
  int jresult ;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  double *arg2 = 0 ;
  double temp2 ;
  int result;
  
  arg1 = (std::vector< double > *)jarg1; 
  temp2 = (double)jarg2; 
  arg2 = &temp2; 
  result = (int)std_vector_Sl_double_Sg__IndexOf(arg1,(double const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_DoubleVector_LastIndexOf___(void * jarg1, double jarg2) {
  int jresult ;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  double *arg2 = 0 ;
  double temp2 ;
  int result;
  
  arg1 = (std::vector< double > *)jarg1; 
  temp2 = (double)jarg2; 
  arg2 = &temp2; 
  result = (int)std_vector_Sl_double_Sg__LastIndexOf(arg1,(double const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_DoubleVector_Remove___(void * jarg1, double jarg2) {
  unsigned int jresult ;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  double *arg2 = 0 ;
  double temp2 ;
  bool result;
  
  arg1 = (std::vector< double > *)jarg1; 
  temp2 = (double)jarg2; 
  arg2 = &temp2; 
  result = (bool)std_vector_Sl_double_Sg__Remove(arg1,(double const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_DoubleVector___(void * jarg1) {
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  
  arg1 = (std::vector< double > *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_StringStringMap__SWIG_0___() {
  void * jresult ;
  std::map< std::string,std::string > *result = 0 ;
  
  result = (std::map< std::string,std::string > *)new std::map< std::string,std::string >();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_StringStringMap__SWIG_1___(void * jarg1) {
  void * jresult ;
  std::map< std::string,std::string > *arg1 = 0 ;
  std::map< std::string,std::string > *result = 0 ;
  
  arg1 = (std::map< std::string,std::string > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::map< std::string,std::string > const & is null", 0);
    return 0;
  } 
  result = (std::map< std::string,std::string > *)new std::map< std::string,std::string >((std::map< std::string,std::string > const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringStringMap_size___(void * jarg1) {
  unsigned int jresult ;
  std::map< std::string,std::string > *arg1 = (std::map< std::string,std::string > *) 0 ;
  std::map< std::string,std::string >::size_type result;
  
  arg1 = (std::map< std::string,std::string > *)jarg1; 
  result = ((std::map< std::string,std::string > const *)arg1)->size();
  jresult = (unsigned int)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringStringMap_empty___(void * jarg1) {
  unsigned int jresult ;
  std::map< std::string,std::string > *arg1 = (std::map< std::string,std::string > *) 0 ;
  bool result;
  
  arg1 = (std::map< std::string,std::string > *)jarg1; 
  result = (bool)((std::map< std::string,std::string > const *)arg1)->empty();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringStringMap_Clear___(void * jarg1) {
  std::map< std::string,std::string > *arg1 = (std::map< std::string,std::string > *) 0 ;
  
  arg1 = (std::map< std::string,std::string > *)jarg1; 
  (arg1)->clear();
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringStringMap_getitem___(void * jarg1, const char * jarg2) {
  const char * jresult ;
  std::map< std::string,std::string > *arg1 = (std::map< std::string,std::string > *) 0 ;
  std::map< std::string,std::string >::key_type *arg2 = 0 ;
  std::map< std::string,std::string >::mapped_type *result = 0 ;
  
  arg1 = (std::map< std::string,std::string > *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::map< std::string,std::string >::key_type arg2_str(jarg2);
  arg2 = &arg2_str; 
  try {
    result = (std::map< std::string,std::string >::mapped_type *) &std_map_Sl_std_string_Sc_std_string_Sg__getitem(arg1,(std::string const &)*arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringStringMap_setitem___(void * jarg1, const char * jarg2, const char * jarg3) {
  std::map< std::string,std::string > *arg1 = (std::map< std::string,std::string > *) 0 ;
  std::map< std::string,std::string >::key_type *arg2 = 0 ;
  std::map< std::string,std::string >::mapped_type *arg3 = 0 ;
  
  arg1 = (std::map< std::string,std::string > *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::map< std::string,std::string >::key_type arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::map< std::string,std::string >::mapped_type arg3_str(jarg3);
  arg3 = &arg3_str; 
  std_map_Sl_std_string_Sc_std_string_Sg__setitem(arg1,(std::string const &)*arg2,(std::string const &)*arg3);
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringStringMap_ContainsKey___(void * jarg1, const char * jarg2) {
  unsigned int jresult ;
  std::map< std::string,std::string > *arg1 = (std::map< std::string,std::string > *) 0 ;
  std::map< std::string,std::string >::key_type *arg2 = 0 ;
  bool result;
  
  arg1 = (std::map< std::string,std::string > *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::map< std::string,std::string >::key_type arg2_str(jarg2);
  arg2 = &arg2_str; 
  result = (bool)std_map_Sl_std_string_Sc_std_string_Sg__ContainsKey(arg1,(std::string const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringStringMap_Add___(void * jarg1, const char * jarg2, const char * jarg3) {
  std::map< std::string,std::string > *arg1 = (std::map< std::string,std::string > *) 0 ;
  std::map< std::string,std::string >::key_type *arg2 = 0 ;
  std::map< std::string,std::string >::mapped_type *arg3 = 0 ;
  
  arg1 = (std::map< std::string,std::string > *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::map< std::string,std::string >::key_type arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::map< std::string,std::string >::mapped_type arg3_str(jarg3);
  arg3 = &arg3_str; 
  try {
    std_map_Sl_std_string_Sc_std_string_Sg__Add(arg1,(std::string const &)*arg2,(std::string const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringStringMap_Remove___(void * jarg1, const char * jarg2) {
  unsigned int jresult ;
  std::map< std::string,std::string > *arg1 = (std::map< std::string,std::string > *) 0 ;
  std::map< std::string,std::string >::key_type *arg2 = 0 ;
  bool result;
  
  arg1 = (std::map< std::string,std::string > *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::map< std::string,std::string >::key_type arg2_str(jarg2);
  arg2 = &arg2_str; 
  result = (bool)std_map_Sl_std_string_Sc_std_string_Sg__Remove(arg1,(std::string const &)*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringStringMap_create_iterator_begin___(void * jarg1) {
  void * jresult ;
  std::map< std::string,std::string > *arg1 = (std::map< std::string,std::string > *) 0 ;
  std::map< std::string,std::string,std::less< std::string > >::iterator *result = 0 ;
  
  arg1 = (std::map< std::string,std::string > *)jarg1; 
  result = (std::map< std::string,std::string,std::less< std::string > >::iterator *)std_map_Sl_std_string_Sc_std_string_Sg__create_iterator_begin(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringStringMap_get_next_key___(void * jarg1, void * jarg2) {
  const char * jresult ;
  std::map< std::string,std::string > *arg1 = (std::map< std::string,std::string > *) 0 ;
  std::map< std::string,std::string,std::less< std::string > >::iterator *arg2 = (std::map< std::string,std::string,std::less< std::string > >::iterator *) 0 ;
  std::map< std::string,std::string >::key_type *result = 0 ;
  
  arg1 = (std::map< std::string,std::string > *)jarg1; 
  arg2 = (std::map< std::string,std::string,std::less< std::string > >::iterator *)jarg2; 
  result = (std::map< std::string,std::string >::key_type *) &std_map_Sl_std_string_Sc_std_string_Sg__get_next_key(arg1,arg2);
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringStringMap_destroy_iterator___(void * jarg1, void * jarg2) {
  std::map< std::string,std::string > *arg1 = (std::map< std::string,std::string > *) 0 ;
  std::map< std::string,std::string,std::less< std::string > >::iterator *arg2 = (std::map< std::string,std::string,std::less< std::string > >::iterator *) 0 ;
  
  arg1 = (std::map< std::string,std::string > *)jarg1; 
  arg2 = (std::map< std::string,std::string,std::less< std::string > >::iterator *)jarg2; 
  std_map_Sl_std_string_Sc_std_string_Sg__destroy_iterator(arg1,arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_StringStringMap___(void * jarg1) {
  std::map< std::string,std::string > *arg1 = (std::map< std::string,std::string > *) 0 ;
  
  arg1 = (std::map< std::string,std::string > *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_StringStringPair__SWIG_0___() {
  void * jresult ;
  std::pair< std::string,std::string > *result = 0 ;
  
  result = (std::pair< std::string,std::string > *)new std::pair< std::string,std::string >();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_StringStringPair__SWIG_1___(const char * jarg1, const char * jarg2) {
  void * jresult ;
  std::string arg1 ;
  std::string arg2 ;
  std::pair< std::string,std::string > *result = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  (&arg1)->assign(jarg1); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  (&arg2)->assign(jarg2); 
  result = (std::pair< std::string,std::string > *)new std::pair< std::string,std::string >(SWIG_STD_MOVE(arg1),SWIG_STD_MOVE(arg2));
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_StringStringPair__SWIG_2___(void * jarg1) {
  void * jresult ;
  std::pair< std::string,std::string > *arg1 = 0 ;
  std::pair< std::string,std::string > *result = 0 ;
  
  arg1 = (std::pair< std::string,std::string > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::pair< std::string,std::string > const & is null", 0);
    return 0;
  } 
  result = (std::pair< std::string,std::string > *)new std::pair< std::string,std::string >((std::pair< std::string,std::string > const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringStringPair_first_set___(void * jarg1, const char * jarg2) {
  std::pair< std::string,std::string > *arg1 = (std::pair< std::string,std::string > *) 0 ;
  std::string *arg2 = 0 ;
  
  arg1 = (std::pair< std::string,std::string > *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (arg1) (arg1)->first = *arg2;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringStringPair_first_get___(void * jarg1) {
  const char * jresult ;
  std::pair< std::string,std::string > *arg1 = (std::pair< std::string,std::string > *) 0 ;
  std::string *result = 0 ;
  
  arg1 = (std::pair< std::string,std::string > *)jarg1; 
  result = (std::string *) & ((arg1)->first);
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringStringPair_second_set___(void * jarg1, const char * jarg2) {
  std::pair< std::string,std::string > *arg1 = (std::pair< std::string,std::string > *) 0 ;
  std::string *arg2 = 0 ;
  
  arg1 = (std::pair< std::string,std::string > *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (arg1) (arg1)->second = *arg2;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringStringPair_second_get___(void * jarg1) {
  const char * jresult ;
  std::pair< std::string,std::string > *arg1 = (std::pair< std::string,std::string > *) 0 ;
  std::string *result = 0 ;
  
  arg1 = (std::pair< std::string,std::string > *)jarg1; 
  result = (std::string *) & ((arg1)->second);
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_StringStringPair___(void * jarg1) {
  std::pair< std::string,std::string > *arg1 = (std::pair< std::string,std::string > *) 0 ;
  
  arg1 = (std::pair< std::string,std::string > *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_IntStringPair__SWIG_0___() {
  void * jresult ;
  std::pair< int,std::string > *result = 0 ;
  
  result = (std::pair< int,std::string > *)new std::pair< int,std::string >();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_IntStringPair__SWIG_1___(int jarg1, const char * jarg2) {
  void * jresult ;
  int arg1 ;
  std::string arg2 ;
  std::pair< int,std::string > *result = 0 ;
  
  arg1 = (int)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  (&arg2)->assign(jarg2); 
  result = (std::pair< int,std::string > *)new std::pair< int,std::string >(arg1,SWIG_STD_MOVE(arg2));
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_IntStringPair__SWIG_2___(void * jarg1) {
  void * jresult ;
  std::pair< int,std::string > *arg1 = 0 ;
  std::pair< int,std::string > *result = 0 ;
  
  arg1 = (std::pair< int,std::string > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::pair< int,std::string > const & is null", 0);
    return 0;
  } 
  result = (std::pair< int,std::string > *)new std::pair< int,std::string >((std::pair< int,std::string > const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_IntStringPair_first_set___(void * jarg1, int jarg2) {
  std::pair< int,std::string > *arg1 = (std::pair< int,std::string > *) 0 ;
  int arg2 ;
  
  arg1 = (std::pair< int,std::string > *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->first = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_IntStringPair_first_get___(void * jarg1) {
  int jresult ;
  std::pair< int,std::string > *arg1 = (std::pair< int,std::string > *) 0 ;
  int result;
  
  arg1 = (std::pair< int,std::string > *)jarg1; 
  result = (int) ((arg1)->first);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_IntStringPair_second_set___(void * jarg1, const char * jarg2) {
  std::pair< int,std::string > *arg1 = (std::pair< int,std::string > *) 0 ;
  std::string *arg2 = 0 ;
  
  arg1 = (std::pair< int,std::string > *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (arg1) (arg1)->second = *arg2;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_IntStringPair_second_get___(void * jarg1) {
  const char * jresult ;
  std::pair< int,std::string > *arg1 = (std::pair< int,std::string > *) 0 ;
  std::string *result = 0 ;
  
  arg1 = (std::pair< int,std::string > *)jarg1; 
  result = (std::string *) & ((arg1)->second);
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_IntStringPair___(void * jarg1) {
  std::pair< int,std::string > *arg1 = (std::pair< int,std::string > *) 0 ;
  
  arg1 = (std::pair< int,std::string > *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_IntIntPair__SWIG_0___() {
  void * jresult ;
  std::pair< int,int > *result = 0 ;
  
  result = (std::pair< int,int > *)new std::pair< int,int >();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_IntIntPair__SWIG_1___(int jarg1, int jarg2) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  std::pair< int,int > *result = 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  result = (std::pair< int,int > *)new std::pair< int,int >(arg1,arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_IntIntPair__SWIG_2___(void * jarg1) {
  void * jresult ;
  std::pair< int,int > *arg1 = 0 ;
  std::pair< int,int > *result = 0 ;
  
  arg1 = (std::pair< int,int > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::pair< int,int > const & is null", 0);
    return 0;
  } 
  result = (std::pair< int,int > *)new std::pair< int,int >((std::pair< int,int > const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_IntIntPair_first_set___(void * jarg1, int jarg2) {
  std::pair< int,int > *arg1 = (std::pair< int,int > *) 0 ;
  int arg2 ;
  
  arg1 = (std::pair< int,int > *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->first = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_IntIntPair_first_get___(void * jarg1) {
  int jresult ;
  std::pair< int,int > *arg1 = (std::pair< int,int > *) 0 ;
  int result;
  
  arg1 = (std::pair< int,int > *)jarg1; 
  result = (int) ((arg1)->first);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_IntIntPair_second_set___(void * jarg1, int jarg2) {
  std::pair< int,int > *arg1 = (std::pair< int,int > *) 0 ;
  int arg2 ;
  
  arg1 = (std::pair< int,int > *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->second = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_IntIntPair_second_get___(void * jarg1) {
  int jresult ;
  std::pair< int,int > *arg1 = (std::pair< int,int > *) 0 ;
  int result;
  
  arg1 = (std::pair< int,int > *)jarg1; 
  result = (int) ((arg1)->second);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_IntIntPair___(void * jarg1) {
  std::pair< int,int > *arg1 = (std::pair< int,int > *) 0 ;
  
  arg1 = (std::pair< int,int > *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_StringDoublePair__SWIG_0___() {
  void * jresult ;
  std::pair< std::string,double > *result = 0 ;
  
  result = (std::pair< std::string,double > *)new std::pair< std::string,double >();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_StringDoublePair__SWIG_1___(const char * jarg1, double jarg2) {
  void * jresult ;
  std::string arg1 ;
  double arg2 ;
  std::pair< std::string,double > *result = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  (&arg1)->assign(jarg1); 
  arg2 = (double)jarg2; 
  result = (std::pair< std::string,double > *)new std::pair< std::string,double >(SWIG_STD_MOVE(arg1),arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_StringDoublePair__SWIG_2___(void * jarg1) {
  void * jresult ;
  std::pair< std::string,double > *arg1 = 0 ;
  std::pair< std::string,double > *result = 0 ;
  
  arg1 = (std::pair< std::string,double > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::pair< std::string,double > const & is null", 0);
    return 0;
  } 
  result = (std::pair< std::string,double > *)new std::pair< std::string,double >((std::pair< std::string,double > const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringDoublePair_first_set___(void * jarg1, const char * jarg2) {
  std::pair< std::string,double > *arg1 = (std::pair< std::string,double > *) 0 ;
  std::string *arg2 = 0 ;
  
  arg1 = (std::pair< std::string,double > *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (arg1) (arg1)->first = *arg2;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringDoublePair_first_get___(void * jarg1) {
  const char * jresult ;
  std::pair< std::string,double > *arg1 = (std::pair< std::string,double > *) 0 ;
  std::string *result = 0 ;
  
  arg1 = (std::pair< std::string,double > *)jarg1; 
  result = (std::string *) & ((arg1)->first);
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringDoublePair_second_set___(void * jarg1, double jarg2) {
  std::pair< std::string,double > *arg1 = (std::pair< std::string,double > *) 0 ;
  double arg2 ;
  
  arg1 = (std::pair< std::string,double > *)jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->second = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringDoublePair_second_get___(void * jarg1) {
  double jresult ;
  std::pair< std::string,double > *arg1 = (std::pair< std::string,double > *) 0 ;
  double result;
  
  arg1 = (std::pair< std::string,double > *)jarg1; 
  result = (double) ((arg1)->second);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_StringDoublePair___(void * jarg1) {
  std::pair< std::string,double > *arg1 = (std::pair< std::string,double > *) 0 ;
  
  arg1 = (std::pair< std::string,double > *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_StringDoublePairVector__SWIG_0___() {
  void * jresult ;
  std::vector< std::pair< std::string,double > > *result = 0 ;
  
  result = (std::vector< std::pair< std::string,double > > *)new std::vector< std::pair< std::string,double > >();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_StringDoublePairVector__SWIG_1___(void * jarg1) {
  void * jresult ;
  std::vector< std::pair< std::string,double > > *arg1 = 0 ;
  std::vector< std::pair< std::string,double > > *result = 0 ;
  
  arg1 = (std::vector< std::pair< std::string,double > > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::pair< std::string,double > > const & is null", 0);
    return 0;
  } 
  result = (std::vector< std::pair< std::string,double > > *)new std::vector< std::pair< std::string,double > >((std::vector< std::pair< std::string,double > > const &)*arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringDoublePairVector_Clear___(void * jarg1) {
  std::vector< std::pair< std::string,double > > *arg1 = (std::vector< std::pair< std::string,double > > *) 0 ;
  
  arg1 = (std::vector< std::pair< std::string,double > > *)jarg1; 
  (arg1)->clear();
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringDoublePairVector_Add___(void * jarg1, void * jarg2) {
  std::vector< std::pair< std::string,double > > *arg1 = (std::vector< std::pair< std::string,double > > *) 0 ;
  std::pair< std::string,double > *arg2 = 0 ;
  
  arg1 = (std::vector< std::pair< std::string,double > > *)jarg1; 
  arg2 = (std::pair< std::string,double > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::pair< std::string,double > const & is null", 0);
    return ;
  } 
  (arg1)->push_back((std::pair< std::string,double > const &)*arg2);
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringDoublePairVector_size___(void * jarg1) {
  unsigned int jresult ;
  std::vector< std::pair< std::string,double > > *arg1 = (std::vector< std::pair< std::string,double > > *) 0 ;
  std::vector< std::pair< std::string,double > >::size_type result;
  
  arg1 = (std::vector< std::pair< std::string,double > > *)jarg1; 
  result = ((std::vector< std::pair< std::string,double > > const *)arg1)->size();
  jresult = (unsigned int)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringDoublePairVector_empty___(void * jarg1) {
  unsigned int jresult ;
  std::vector< std::pair< std::string,double > > *arg1 = (std::vector< std::pair< std::string,double > > *) 0 ;
  bool result;
  
  arg1 = (std::vector< std::pair< std::string,double > > *)jarg1; 
  result = (bool)((std::vector< std::pair< std::string,double > > const *)arg1)->empty();
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringDoublePairVector_capacity___(void * jarg1) {
  unsigned int jresult ;
  std::vector< std::pair< std::string,double > > *arg1 = (std::vector< std::pair< std::string,double > > *) 0 ;
  std::vector< std::pair< std::string,double > >::size_type result;
  
  arg1 = (std::vector< std::pair< std::string,double > > *)jarg1; 
  result = ((std::vector< std::pair< std::string,double > > const *)arg1)->capacity();
  jresult = (unsigned int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringDoublePairVector_reserve___(void * jarg1, unsigned int jarg2) {
  std::vector< std::pair< std::string,double > > *arg1 = (std::vector< std::pair< std::string,double > > *) 0 ;
  std::vector< std::pair< std::string,double > >::size_type arg2 ;
  
  arg1 = (std::vector< std::pair< std::string,double > > *)jarg1; 
  arg2 = (std::vector< std::pair< std::string,double > >::size_type)jarg2; 
  (arg1)->reserve(SWIG_STD_MOVE(arg2));
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_StringDoublePairVector__SWIG_2___(int jarg1) {
  void * jresult ;
  int arg1 ;
  std::vector< std::pair< std::string,double > > *result = 0 ;
  
  arg1 = (int)jarg1; 
  try {
    result = (std::vector< std::pair< std::string,double > > *)new_std_vector_Sl_std_pair_Sl_std_string_Sc_double_Sg__Sg___SWIG_2(arg1);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringDoublePairVector_getitemcopy___(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< std::pair< std::string,double > > *arg1 = (std::vector< std::pair< std::string,double > > *) 0 ;
  int arg2 ;
  std::pair< std::string,double > result;
  
  arg1 = (std::vector< std::pair< std::string,double > > *)jarg1; 
  arg2 = (int)jarg2; 
  try {
    result = std_vector_Sl_std_pair_Sl_std_string_Sc_double_Sg__Sg__getitemcopy(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = new std::pair< std::string,double >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringDoublePairVector_getitem___(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< std::pair< std::string,double > > *arg1 = (std::vector< std::pair< std::string,double > > *) 0 ;
  int arg2 ;
  std::vector< std::pair< std::string,double > >::value_type *result = 0 ;
  
  arg1 = (std::vector< std::pair< std::string,double > > *)jarg1; 
  arg2 = (int)jarg2; 
  try {
    result = (std::vector< std::pair< std::string,double > >::value_type *) &std_vector_Sl_std_pair_Sl_std_string_Sc_double_Sg__Sg__getitem(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringDoublePairVector_setitem___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< std::pair< std::string,double > > *arg1 = (std::vector< std::pair< std::string,double > > *) 0 ;
  int arg2 ;
  std::pair< std::string,double > *arg3 = 0 ;
  
  arg1 = (std::vector< std::pair< std::string,double > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::pair< std::string,double > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::pair< std::string,double > const & is null", 0);
    return ;
  } 
  try {
    std_vector_Sl_std_pair_Sl_std_string_Sc_double_Sg__Sg__setitem(arg1,arg2,(std::pair< std::string,double > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringDoublePairVector_AddRange___(void * jarg1, void * jarg2) {
  std::vector< std::pair< std::string,double > > *arg1 = (std::vector< std::pair< std::string,double > > *) 0 ;
  std::vector< std::pair< std::string,double > > *arg2 = 0 ;
  
  arg1 = (std::vector< std::pair< std::string,double > > *)jarg1; 
  arg2 = (std::vector< std::pair< std::string,double > > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::pair< std::string,double > > const & is null", 0);
    return ;
  } 
  std_vector_Sl_std_pair_Sl_std_string_Sc_double_Sg__Sg__AddRange(arg1,(std::vector< std::pair< std::string,double > > const &)*arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringDoublePairVector_GetRange___(void * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  std::vector< std::pair< std::string,double > > *arg1 = (std::vector< std::pair< std::string,double > > *) 0 ;
  int arg2 ;
  int arg3 ;
  std::vector< std::pair< std::string,double > > *result = 0 ;
  
  arg1 = (std::vector< std::pair< std::string,double > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  try {
    result = (std::vector< std::pair< std::string,double > > *)std_vector_Sl_std_pair_Sl_std_string_Sc_double_Sg__Sg__GetRange(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  } catch(std::invalid_argument &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringDoublePairVector_Insert___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< std::pair< std::string,double > > *arg1 = (std::vector< std::pair< std::string,double > > *) 0 ;
  int arg2 ;
  std::pair< std::string,double > *arg3 = 0 ;
  
  arg1 = (std::vector< std::pair< std::string,double > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::pair< std::string,double > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::pair< std::string,double > const & is null", 0);
    return ;
  } 
  try {
    std_vector_Sl_std_pair_Sl_std_string_Sc_double_Sg__Sg__Insert(arg1,arg2,(std::pair< std::string,double > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringDoublePairVector_InsertRange___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< std::pair< std::string,double > > *arg1 = (std::vector< std::pair< std::string,double > > *) 0 ;
  int arg2 ;
  std::vector< std::pair< std::string,double > > *arg3 = 0 ;
  
  arg1 = (std::vector< std::pair< std::string,double > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< std::pair< std::string,double > > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::pair< std::string,double > > const & is null", 0);
    return ;
  } 
  try {
    std_vector_Sl_std_pair_Sl_std_string_Sc_double_Sg__Sg__InsertRange(arg1,arg2,(std::vector< std::pair< std::string,double > > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringDoublePairVector_RemoveAt___(void * jarg1, int jarg2) {
  std::vector< std::pair< std::string,double > > *arg1 = (std::vector< std::pair< std::string,double > > *) 0 ;
  int arg2 ;
  
  arg1 = (std::vector< std::pair< std::string,double > > *)jarg1; 
  arg2 = (int)jarg2; 
  try {
    std_vector_Sl_std_pair_Sl_std_string_Sc_double_Sg__Sg__RemoveAt(arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringDoublePairVector_RemoveRange___(void * jarg1, int jarg2, int jarg3) {
  std::vector< std::pair< std::string,double > > *arg1 = (std::vector< std::pair< std::string,double > > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< std::pair< std::string,double > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  try {
    std_vector_Sl_std_pair_Sl_std_string_Sc_double_Sg__Sg__RemoveRange(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  } catch(std::invalid_argument &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
    return ;
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringDoublePairVector_Repeat___(void * jarg1, int jarg2) {
  void * jresult ;
  std::pair< std::string,double > *arg1 = 0 ;
  int arg2 ;
  std::vector< std::pair< std::string,double > > *result = 0 ;
  
  arg1 = (std::pair< std::string,double > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::pair< std::string,double > const & is null", 0);
    return 0;
  } 
  arg2 = (int)jarg2; 
  try {
    result = (std::vector< std::pair< std::string,double > > *)std_vector_Sl_std_pair_Sl_std_string_Sc_double_Sg__Sg__Repeat((std::pair< std::string,double > const &)*arg1,arg2);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return 0;
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringDoublePairVector_Reverse__SWIG_0___(void * jarg1) {
  std::vector< std::pair< std::string,double > > *arg1 = (std::vector< std::pair< std::string,double > > *) 0 ;
  
  arg1 = (std::vector< std::pair< std::string,double > > *)jarg1; 
  std_vector_Sl_std_pair_Sl_std_string_Sc_double_Sg__Sg__Reverse__SWIG_0(arg1);
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringDoublePairVector_Reverse__SWIG_1___(void * jarg1, int jarg2, int jarg3) {
  std::vector< std::pair< std::string,double > > *arg1 = (std::vector< std::pair< std::string,double > > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< std::pair< std::string,double > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  try {
    std_vector_Sl_std_pair_Sl_std_string_Sc_double_Sg__Sg__Reverse__SWIG_1(arg1,arg2,arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  } catch(std::invalid_argument &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_StringDoublePairVector_SetRange___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< std::pair< std::string,double > > *arg1 = (std::vector< std::pair< std::string,double > > *) 0 ;
  int arg2 ;
  std::vector< std::pair< std::string,double > > *arg3 = 0 ;
  
  arg1 = (std::vector< std::pair< std::string,double > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< std::pair< std::string,double > > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::pair< std::string,double > > const & is null", 0);
    return ;
  } 
  try {
    std_vector_Sl_std_pair_Sl_std_string_Sc_double_Sg__Sg__SetRange(arg1,arg2,(std::vector< std::pair< std::string,double > > const &)*arg3);
  } catch(std::out_of_range &_e) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
    return ;
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_StringDoublePairVector___(void * jarg1) {
  std::vector< std::pair< std::string,double > > *arg1 = (std::vector< std::pair< std::string,double > > *) 0 ;
  
  arg1 = (std::vector< std::pair< std::string,double > > *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIException___(const char * jarg1) {
  void * jresult ;
  std::string arg1 ;
  libsumo::TraCIException *result = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  (&arg1)->assign(jarg1); 
  {
    try {
      result = (libsumo::TraCIException *)new libsumo::TraCIException(SWIG_STD_MOVE(arg1));
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_TraCIException___(void * jarg1) {
  libsumo::TraCIException *arg1 = (libsumo::TraCIException *) 0 ;
  
  arg1 = (libsumo::TraCIException *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_FatalTraCIError___(const char * jarg1) {
  void * jresult ;
  std::string arg1 ;
  libsumo::FatalTraCIError *result = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  (&arg1)->assign(jarg1); 
  {
    try {
      result = (libsumo::FatalTraCIError *)new libsumo::FatalTraCIError(SWIG_STD_MOVE(arg1));
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_FatalTraCIError___(void * jarg1) {
  libsumo::FatalTraCIError *arg1 = (libsumo::FatalTraCIError *) 0 ;
  
  arg1 = (libsumo::FatalTraCIError *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_TraCIResult___(void * jarg1) {
  libsumo::TraCIResult *arg1 = (libsumo::TraCIResult *) 0 ;
  std::shared_ptr< libsumo::TraCIResult > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIResult > *)jarg1;
  arg1 = (libsumo::TraCIResult *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      (void)arg1; delete smartarg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIResult_getString___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCIResult *arg1 = (libsumo::TraCIResult *) 0 ;
  std::shared_ptr< libsumo::TraCIResult const > *smartarg1 = 0 ;
  std::string result;
  
  
  smartarg1 = (std::shared_ptr< const libsumo::TraCIResult > *)jarg1;
  arg1 = (libsumo::TraCIResult *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      result = ((libsumo::TraCIResult const *)arg1)->getString();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIResult_getType___(void * jarg1) {
  int jresult ;
  libsumo::TraCIResult *arg1 = (libsumo::TraCIResult *) 0 ;
  std::shared_ptr< libsumo::TraCIResult const > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr< const libsumo::TraCIResult > *)jarg1;
  arg1 = (libsumo::TraCIResult *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      result = (int)((libsumo::TraCIResult const *)arg1)->getType();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIResult___() {
  void * jresult ;
  libsumo::TraCIResult *result = 0 ;
  
  {
    try {
      result = (libsumo::TraCIResult *)new libsumo::TraCIResult();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCIResult >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIPosition_getString___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCIPosition *arg1 = (libsumo::TraCIPosition *) 0 ;
  std::shared_ptr< libsumo::TraCIPosition const > *smartarg1 = 0 ;
  std::string result;
  
  
  smartarg1 = (std::shared_ptr< const libsumo::TraCIPosition > *)jarg1;
  arg1 = (libsumo::TraCIPosition *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      result = ((libsumo::TraCIPosition const *)arg1)->getString();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIPosition_getType___(void * jarg1) {
  int jresult ;
  libsumo::TraCIPosition *arg1 = (libsumo::TraCIPosition *) 0 ;
  std::shared_ptr< libsumo::TraCIPosition const > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr< const libsumo::TraCIPosition > *)jarg1;
  arg1 = (libsumo::TraCIPosition *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      result = (int)((libsumo::TraCIPosition const *)arg1)->getType();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIPosition_x_set___(void * jarg1, double jarg2) {
  libsumo::TraCIPosition *arg1 = (libsumo::TraCIPosition *) 0 ;
  double arg2 ;
  std::shared_ptr< libsumo::TraCIPosition > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIPosition > *)jarg1;
  arg1 = (libsumo::TraCIPosition *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->x = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIPosition_x_get___(void * jarg1) {
  double jresult ;
  libsumo::TraCIPosition *arg1 = (libsumo::TraCIPosition *) 0 ;
  std::shared_ptr< libsumo::TraCIPosition > *smartarg1 = 0 ;
  double result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIPosition > *)jarg1;
  arg1 = (libsumo::TraCIPosition *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double) ((arg1)->x);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIPosition_y_set___(void * jarg1, double jarg2) {
  libsumo::TraCIPosition *arg1 = (libsumo::TraCIPosition *) 0 ;
  double arg2 ;
  std::shared_ptr< libsumo::TraCIPosition > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIPosition > *)jarg1;
  arg1 = (libsumo::TraCIPosition *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->y = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIPosition_y_get___(void * jarg1) {
  double jresult ;
  libsumo::TraCIPosition *arg1 = (libsumo::TraCIPosition *) 0 ;
  std::shared_ptr< libsumo::TraCIPosition > *smartarg1 = 0 ;
  double result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIPosition > *)jarg1;
  arg1 = (libsumo::TraCIPosition *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double) ((arg1)->y);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIPosition_z_set___(void * jarg1, double jarg2) {
  libsumo::TraCIPosition *arg1 = (libsumo::TraCIPosition *) 0 ;
  double arg2 ;
  std::shared_ptr< libsumo::TraCIPosition > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIPosition > *)jarg1;
  arg1 = (libsumo::TraCIPosition *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->z = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIPosition_z_get___(void * jarg1) {
  double jresult ;
  libsumo::TraCIPosition *arg1 = (libsumo::TraCIPosition *) 0 ;
  std::shared_ptr< libsumo::TraCIPosition > *smartarg1 = 0 ;
  double result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIPosition > *)jarg1;
  arg1 = (libsumo::TraCIPosition *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double) ((arg1)->z);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIPosition___() {
  void * jresult ;
  libsumo::TraCIPosition *result = 0 ;
  
  {
    try {
      result = (libsumo::TraCIPosition *)new libsumo::TraCIPosition();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCIPosition >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_TraCIPosition___(void * jarg1) {
  libsumo::TraCIPosition *arg1 = (libsumo::TraCIPosition *) 0 ;
  std::shared_ptr< libsumo::TraCIPosition > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIPosition > *)jarg1;
  arg1 = (libsumo::TraCIPosition *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      (void)arg1; delete smartarg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIRoadPosition__SWIG_0___(const char * jarg1, double jarg2, int jarg3) {
  void * jresult ;
  std::string arg1 ;
  double arg2 ;
  int arg3 ;
  libsumo::TraCIRoadPosition *result = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  (&arg1)->assign(jarg1); 
  arg2 = (double)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      result = (libsumo::TraCIRoadPosition *)new libsumo::TraCIRoadPosition(SWIG_STD_MOVE(arg1),arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCIRoadPosition >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIRoadPosition__SWIG_1___(const char * jarg1, double jarg2) {
  void * jresult ;
  std::string arg1 ;
  double arg2 ;
  libsumo::TraCIRoadPosition *result = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  (&arg1)->assign(jarg1); 
  arg2 = (double)jarg2; 
  {
    try {
      result = (libsumo::TraCIRoadPosition *)new libsumo::TraCIRoadPosition(SWIG_STD_MOVE(arg1),arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCIRoadPosition >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIRoadPosition__SWIG_2___(const char * jarg1) {
  void * jresult ;
  std::string arg1 ;
  libsumo::TraCIRoadPosition *result = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  (&arg1)->assign(jarg1); 
  {
    try {
      result = (libsumo::TraCIRoadPosition *)new libsumo::TraCIRoadPosition(SWIG_STD_MOVE(arg1));
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCIRoadPosition >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIRoadPosition__SWIG_3___() {
  void * jresult ;
  libsumo::TraCIRoadPosition *result = 0 ;
  
  {
    try {
      result = (libsumo::TraCIRoadPosition *)new libsumo::TraCIRoadPosition();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCIRoadPosition >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIRoadPosition_getString___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCIRoadPosition *arg1 = (libsumo::TraCIRoadPosition *) 0 ;
  std::shared_ptr< libsumo::TraCIRoadPosition const > *smartarg1 = 0 ;
  std::string result;
  
  
  smartarg1 = (std::shared_ptr< const libsumo::TraCIRoadPosition > *)jarg1;
  arg1 = (libsumo::TraCIRoadPosition *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      result = ((libsumo::TraCIRoadPosition const *)arg1)->getString();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIRoadPosition_getType___(void * jarg1) {
  int jresult ;
  libsumo::TraCIRoadPosition *arg1 = (libsumo::TraCIRoadPosition *) 0 ;
  std::shared_ptr< libsumo::TraCIRoadPosition const > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr< const libsumo::TraCIRoadPosition > *)jarg1;
  arg1 = (libsumo::TraCIRoadPosition *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      result = (int)((libsumo::TraCIRoadPosition const *)arg1)->getType();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIRoadPosition_edgeID_set___(void * jarg1, const char * jarg2) {
  libsumo::TraCIRoadPosition *arg1 = (libsumo::TraCIRoadPosition *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< libsumo::TraCIRoadPosition > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIRoadPosition > *)jarg1;
  arg1 = (libsumo::TraCIRoadPosition *)(smartarg1 ? smartarg1->get() : 0); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (arg1) (arg1)->edgeID = *arg2;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIRoadPosition_edgeID_get___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCIRoadPosition *arg1 = (libsumo::TraCIRoadPosition *) 0 ;
  std::shared_ptr< libsumo::TraCIRoadPosition > *smartarg1 = 0 ;
  std::string *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIRoadPosition > *)jarg1;
  arg1 = (libsumo::TraCIRoadPosition *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::string *) & ((arg1)->edgeID);
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIRoadPosition_pos_set___(void * jarg1, double jarg2) {
  libsumo::TraCIRoadPosition *arg1 = (libsumo::TraCIRoadPosition *) 0 ;
  double arg2 ;
  std::shared_ptr< libsumo::TraCIRoadPosition > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIRoadPosition > *)jarg1;
  arg1 = (libsumo::TraCIRoadPosition *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->pos = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIRoadPosition_pos_get___(void * jarg1) {
  double jresult ;
  libsumo::TraCIRoadPosition *arg1 = (libsumo::TraCIRoadPosition *) 0 ;
  std::shared_ptr< libsumo::TraCIRoadPosition > *smartarg1 = 0 ;
  double result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIRoadPosition > *)jarg1;
  arg1 = (libsumo::TraCIRoadPosition *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double) ((arg1)->pos);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIRoadPosition_laneIndex_set___(void * jarg1, int jarg2) {
  libsumo::TraCIRoadPosition *arg1 = (libsumo::TraCIRoadPosition *) 0 ;
  int arg2 ;
  std::shared_ptr< libsumo::TraCIRoadPosition > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIRoadPosition > *)jarg1;
  arg1 = (libsumo::TraCIRoadPosition *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->laneIndex = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIRoadPosition_laneIndex_get___(void * jarg1) {
  int jresult ;
  libsumo::TraCIRoadPosition *arg1 = (libsumo::TraCIRoadPosition *) 0 ;
  std::shared_ptr< libsumo::TraCIRoadPosition > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIRoadPosition > *)jarg1;
  arg1 = (libsumo::TraCIRoadPosition *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int) ((arg1)->laneIndex);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_TraCIRoadPosition___(void * jarg1) {
  libsumo::TraCIRoadPosition *arg1 = (libsumo::TraCIRoadPosition *) 0 ;
  std::shared_ptr< libsumo::TraCIRoadPosition > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIRoadPosition > *)jarg1;
  arg1 = (libsumo::TraCIRoadPosition *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      (void)arg1; delete smartarg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIColor__SWIG_0___() {
  void * jresult ;
  libsumo::TraCIColor *result = 0 ;
  
  {
    try {
      result = (libsumo::TraCIColor *)new libsumo::TraCIColor();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCIColor >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIColor__SWIG_1___(int jarg1, int jarg2, int jarg3, int jarg4) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  libsumo::TraCIColor *result = 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  {
    try {
      result = (libsumo::TraCIColor *)new libsumo::TraCIColor(arg1,arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCIColor >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIColor__SWIG_2___(int jarg1, int jarg2, int jarg3) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  libsumo::TraCIColor *result = 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      result = (libsumo::TraCIColor *)new libsumo::TraCIColor(arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCIColor >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIColor_getString___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCIColor *arg1 = (libsumo::TraCIColor *) 0 ;
  std::shared_ptr< libsumo::TraCIColor const > *smartarg1 = 0 ;
  std::string result;
  
  
  smartarg1 = (std::shared_ptr< const libsumo::TraCIColor > *)jarg1;
  arg1 = (libsumo::TraCIColor *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      result = ((libsumo::TraCIColor const *)arg1)->getString();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIColor_r_set___(void * jarg1, int jarg2) {
  libsumo::TraCIColor *arg1 = (libsumo::TraCIColor *) 0 ;
  int arg2 ;
  std::shared_ptr< libsumo::TraCIColor > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIColor > *)jarg1;
  arg1 = (libsumo::TraCIColor *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->r = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIColor_r_get___(void * jarg1) {
  int jresult ;
  libsumo::TraCIColor *arg1 = (libsumo::TraCIColor *) 0 ;
  std::shared_ptr< libsumo::TraCIColor > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIColor > *)jarg1;
  arg1 = (libsumo::TraCIColor *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int) ((arg1)->r);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIColor_g_set___(void * jarg1, int jarg2) {
  libsumo::TraCIColor *arg1 = (libsumo::TraCIColor *) 0 ;
  int arg2 ;
  std::shared_ptr< libsumo::TraCIColor > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIColor > *)jarg1;
  arg1 = (libsumo::TraCIColor *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->g = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIColor_g_get___(void * jarg1) {
  int jresult ;
  libsumo::TraCIColor *arg1 = (libsumo::TraCIColor *) 0 ;
  std::shared_ptr< libsumo::TraCIColor > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIColor > *)jarg1;
  arg1 = (libsumo::TraCIColor *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int) ((arg1)->g);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIColor_b_set___(void * jarg1, int jarg2) {
  libsumo::TraCIColor *arg1 = (libsumo::TraCIColor *) 0 ;
  int arg2 ;
  std::shared_ptr< libsumo::TraCIColor > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIColor > *)jarg1;
  arg1 = (libsumo::TraCIColor *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->b = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIColor_b_get___(void * jarg1) {
  int jresult ;
  libsumo::TraCIColor *arg1 = (libsumo::TraCIColor *) 0 ;
  std::shared_ptr< libsumo::TraCIColor > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIColor > *)jarg1;
  arg1 = (libsumo::TraCIColor *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int) ((arg1)->b);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIColor_a_set___(void * jarg1, int jarg2) {
  libsumo::TraCIColor *arg1 = (libsumo::TraCIColor *) 0 ;
  int arg2 ;
  std::shared_ptr< libsumo::TraCIColor > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIColor > *)jarg1;
  arg1 = (libsumo::TraCIColor *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->a = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIColor_a_get___(void * jarg1) {
  int jresult ;
  libsumo::TraCIColor *arg1 = (libsumo::TraCIColor *) 0 ;
  std::shared_ptr< libsumo::TraCIColor > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIColor > *)jarg1;
  arg1 = (libsumo::TraCIColor *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int) ((arg1)->a);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_TraCIColor___(void * jarg1) {
  libsumo::TraCIColor *arg1 = (libsumo::TraCIColor *) 0 ;
  std::shared_ptr< libsumo::TraCIColor > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIColor > *)jarg1;
  arg1 = (libsumo::TraCIColor *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      (void)arg1; delete smartarg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIPositionVector_getString___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCIPositionVector *arg1 = (libsumo::TraCIPositionVector *) 0 ;
  std::shared_ptr< libsumo::TraCIPositionVector const > *smartarg1 = 0 ;
  std::string result;
  
  
  smartarg1 = (std::shared_ptr< const libsumo::TraCIPositionVector > *)jarg1;
  arg1 = (libsumo::TraCIPositionVector *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      result = ((libsumo::TraCIPositionVector const *)arg1)->getString();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIPositionVector_value_set___(void * jarg1, void * jarg2) {
  libsumo::TraCIPositionVector *arg1 = (libsumo::TraCIPositionVector *) 0 ;
  std::vector< libsumo::TraCIPosition > *arg2 = (std::vector< libsumo::TraCIPosition > *) 0 ;
  std::shared_ptr< libsumo::TraCIPositionVector > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIPositionVector > *)jarg1;
  arg1 = (libsumo::TraCIPositionVector *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (std::vector< libsumo::TraCIPosition > *)jarg2; 
  if (arg1) (arg1)->value = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIPositionVector_value_get___(void * jarg1) {
  void * jresult ;
  libsumo::TraCIPositionVector *arg1 = (libsumo::TraCIPositionVector *) 0 ;
  std::shared_ptr< libsumo::TraCIPositionVector > *smartarg1 = 0 ;
  std::vector< libsumo::TraCIPosition > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIPositionVector > *)jarg1;
  arg1 = (libsumo::TraCIPositionVector *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::vector< libsumo::TraCIPosition > *)& ((arg1)->value);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIPositionVector___() {
  void * jresult ;
  libsumo::TraCIPositionVector *result = 0 ;
  
  {
    try {
      result = (libsumo::TraCIPositionVector *)new libsumo::TraCIPositionVector();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCIPositionVector >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_TraCIPositionVector___(void * jarg1) {
  libsumo::TraCIPositionVector *arg1 = (libsumo::TraCIPositionVector *) 0 ;
  std::shared_ptr< libsumo::TraCIPositionVector > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIPositionVector > *)jarg1;
  arg1 = (libsumo::TraCIPositionVector *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      (void)arg1; delete smartarg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIInt__SWIG_0___(int jarg1, int jarg2) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  libsumo::TraCIInt *result = 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      result = (libsumo::TraCIInt *)new libsumo::TraCIInt(arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCIInt >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIInt__SWIG_1___(int jarg1) {
  void * jresult ;
  int arg1 ;
  libsumo::TraCIInt *result = 0 ;
  
  arg1 = (int)jarg1; 
  {
    try {
      result = (libsumo::TraCIInt *)new libsumo::TraCIInt(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCIInt >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIInt__SWIG_2___() {
  void * jresult ;
  libsumo::TraCIInt *result = 0 ;
  
  {
    try {
      result = (libsumo::TraCIInt *)new libsumo::TraCIInt();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCIInt >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIInt_getString___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCIInt *arg1 = (libsumo::TraCIInt *) 0 ;
  std::shared_ptr< libsumo::TraCIInt const > *smartarg1 = 0 ;
  std::string result;
  
  
  smartarg1 = (std::shared_ptr< const libsumo::TraCIInt > *)jarg1;
  arg1 = (libsumo::TraCIInt *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      result = ((libsumo::TraCIInt const *)arg1)->getString();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIInt_getType___(void * jarg1) {
  int jresult ;
  libsumo::TraCIInt *arg1 = (libsumo::TraCIInt *) 0 ;
  std::shared_ptr< libsumo::TraCIInt const > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr< const libsumo::TraCIInt > *)jarg1;
  arg1 = (libsumo::TraCIInt *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      result = (int)((libsumo::TraCIInt const *)arg1)->getType();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIInt_value_set___(void * jarg1, int jarg2) {
  libsumo::TraCIInt *arg1 = (libsumo::TraCIInt *) 0 ;
  int arg2 ;
  std::shared_ptr< libsumo::TraCIInt > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIInt > *)jarg1;
  arg1 = (libsumo::TraCIInt *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->value = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIInt_value_get___(void * jarg1) {
  int jresult ;
  libsumo::TraCIInt *arg1 = (libsumo::TraCIInt *) 0 ;
  std::shared_ptr< libsumo::TraCIInt > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIInt > *)jarg1;
  arg1 = (libsumo::TraCIInt *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int) ((arg1)->value);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIInt_traciType_set___(void * jarg1, int jarg2) {
  libsumo::TraCIInt *arg1 = (libsumo::TraCIInt *) 0 ;
  int arg2 ;
  std::shared_ptr< libsumo::TraCIInt > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIInt > *)jarg1;
  arg1 = (libsumo::TraCIInt *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->traciType = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIInt_traciType_get___(void * jarg1) {
  int jresult ;
  libsumo::TraCIInt *arg1 = (libsumo::TraCIInt *) 0 ;
  std::shared_ptr< libsumo::TraCIInt > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIInt > *)jarg1;
  arg1 = (libsumo::TraCIInt *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int) ((arg1)->traciType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_TraCIInt___(void * jarg1) {
  libsumo::TraCIInt *arg1 = (libsumo::TraCIInt *) 0 ;
  std::shared_ptr< libsumo::TraCIInt > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIInt > *)jarg1;
  arg1 = (libsumo::TraCIInt *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      (void)arg1; delete smartarg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIDouble__SWIG_0___(double jarg1) {
  void * jresult ;
  double arg1 ;
  libsumo::TraCIDouble *result = 0 ;
  
  arg1 = (double)jarg1; 
  {
    try {
      result = (libsumo::TraCIDouble *)new libsumo::TraCIDouble(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCIDouble >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIDouble__SWIG_1___() {
  void * jresult ;
  libsumo::TraCIDouble *result = 0 ;
  
  {
    try {
      result = (libsumo::TraCIDouble *)new libsumo::TraCIDouble();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCIDouble >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIDouble_getString___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCIDouble *arg1 = (libsumo::TraCIDouble *) 0 ;
  std::shared_ptr< libsumo::TraCIDouble const > *smartarg1 = 0 ;
  std::string result;
  
  
  smartarg1 = (std::shared_ptr< const libsumo::TraCIDouble > *)jarg1;
  arg1 = (libsumo::TraCIDouble *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      result = ((libsumo::TraCIDouble const *)arg1)->getString();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIDouble_getType___(void * jarg1) {
  int jresult ;
  libsumo::TraCIDouble *arg1 = (libsumo::TraCIDouble *) 0 ;
  std::shared_ptr< libsumo::TraCIDouble const > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr< const libsumo::TraCIDouble > *)jarg1;
  arg1 = (libsumo::TraCIDouble *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      result = (int)((libsumo::TraCIDouble const *)arg1)->getType();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIDouble_value_set___(void * jarg1, double jarg2) {
  libsumo::TraCIDouble *arg1 = (libsumo::TraCIDouble *) 0 ;
  double arg2 ;
  std::shared_ptr< libsumo::TraCIDouble > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIDouble > *)jarg1;
  arg1 = (libsumo::TraCIDouble *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->value = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIDouble_value_get___(void * jarg1) {
  double jresult ;
  libsumo::TraCIDouble *arg1 = (libsumo::TraCIDouble *) 0 ;
  std::shared_ptr< libsumo::TraCIDouble > *smartarg1 = 0 ;
  double result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIDouble > *)jarg1;
  arg1 = (libsumo::TraCIDouble *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double) ((arg1)->value);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_TraCIDouble___(void * jarg1) {
  libsumo::TraCIDouble *arg1 = (libsumo::TraCIDouble *) 0 ;
  std::shared_ptr< libsumo::TraCIDouble > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIDouble > *)jarg1;
  arg1 = (libsumo::TraCIDouble *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      (void)arg1; delete smartarg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIString__SWIG_0___(const char * jarg1) {
  void * jresult ;
  std::string arg1 ;
  libsumo::TraCIString *result = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  (&arg1)->assign(jarg1); 
  {
    try {
      result = (libsumo::TraCIString *)new libsumo::TraCIString(SWIG_STD_MOVE(arg1));
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCIString >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIString__SWIG_1___() {
  void * jresult ;
  libsumo::TraCIString *result = 0 ;
  
  {
    try {
      result = (libsumo::TraCIString *)new libsumo::TraCIString();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCIString >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIString_getString___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCIString *arg1 = (libsumo::TraCIString *) 0 ;
  std::shared_ptr< libsumo::TraCIString const > *smartarg1 = 0 ;
  std::string result;
  
  
  smartarg1 = (std::shared_ptr< const libsumo::TraCIString > *)jarg1;
  arg1 = (libsumo::TraCIString *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      result = ((libsumo::TraCIString const *)arg1)->getString();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIString_getType___(void * jarg1) {
  int jresult ;
  libsumo::TraCIString *arg1 = (libsumo::TraCIString *) 0 ;
  std::shared_ptr< libsumo::TraCIString const > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr< const libsumo::TraCIString > *)jarg1;
  arg1 = (libsumo::TraCIString *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      result = (int)((libsumo::TraCIString const *)arg1)->getType();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIString_value_set___(void * jarg1, const char * jarg2) {
  libsumo::TraCIString *arg1 = (libsumo::TraCIString *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< libsumo::TraCIString > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIString > *)jarg1;
  arg1 = (libsumo::TraCIString *)(smartarg1 ? smartarg1->get() : 0); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (arg1) (arg1)->value = *arg2;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIString_value_get___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCIString *arg1 = (libsumo::TraCIString *) 0 ;
  std::shared_ptr< libsumo::TraCIString > *smartarg1 = 0 ;
  std::string *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIString > *)jarg1;
  arg1 = (libsumo::TraCIString *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::string *) & ((arg1)->value);
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_TraCIString___(void * jarg1) {
  libsumo::TraCIString *arg1 = (libsumo::TraCIString *) 0 ;
  std::shared_ptr< libsumo::TraCIString > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIString > *)jarg1;
  arg1 = (libsumo::TraCIString *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      (void)arg1; delete smartarg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIStringList_getString___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCIStringList *arg1 = (libsumo::TraCIStringList *) 0 ;
  std::shared_ptr< libsumo::TraCIStringList const > *smartarg1 = 0 ;
  std::string result;
  
  
  smartarg1 = (std::shared_ptr< const libsumo::TraCIStringList > *)jarg1;
  arg1 = (libsumo::TraCIStringList *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      result = ((libsumo::TraCIStringList const *)arg1)->getString();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIStringList_value_set___(void * jarg1, void * jarg2) {
  libsumo::TraCIStringList *arg1 = (libsumo::TraCIStringList *) 0 ;
  std::vector< std::string > *arg2 = (std::vector< std::string > *) 0 ;
  std::shared_ptr< libsumo::TraCIStringList > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIStringList > *)jarg1;
  arg1 = (libsumo::TraCIStringList *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (std::vector< std::string > *)jarg2; 
  if (arg1) (arg1)->value = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIStringList_value_get___(void * jarg1) {
  void * jresult ;
  libsumo::TraCIStringList *arg1 = (libsumo::TraCIStringList *) 0 ;
  std::shared_ptr< libsumo::TraCIStringList > *smartarg1 = 0 ;
  std::vector< std::string > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIStringList > *)jarg1;
  arg1 = (libsumo::TraCIStringList *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::vector< std::string > *)& ((arg1)->value);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIStringList___() {
  void * jresult ;
  libsumo::TraCIStringList *result = 0 ;
  
  {
    try {
      result = (libsumo::TraCIStringList *)new libsumo::TraCIStringList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCIStringList >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_TraCIStringList___(void * jarg1) {
  libsumo::TraCIStringList *arg1 = (libsumo::TraCIStringList *) 0 ;
  std::shared_ptr< libsumo::TraCIStringList > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIStringList > *)jarg1;
  arg1 = (libsumo::TraCIStringList *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      (void)arg1; delete smartarg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIDoubleList_getString___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCIDoubleList *arg1 = (libsumo::TraCIDoubleList *) 0 ;
  std::shared_ptr< libsumo::TraCIDoubleList const > *smartarg1 = 0 ;
  std::string result;
  
  
  smartarg1 = (std::shared_ptr< const libsumo::TraCIDoubleList > *)jarg1;
  arg1 = (libsumo::TraCIDoubleList *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      result = ((libsumo::TraCIDoubleList const *)arg1)->getString();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIDoubleList_value_set___(void * jarg1, void * jarg2) {
  libsumo::TraCIDoubleList *arg1 = (libsumo::TraCIDoubleList *) 0 ;
  std::vector< double > *arg2 = (std::vector< double > *) 0 ;
  std::shared_ptr< libsumo::TraCIDoubleList > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIDoubleList > *)jarg1;
  arg1 = (libsumo::TraCIDoubleList *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (std::vector< double > *)jarg2; 
  if (arg1) (arg1)->value = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIDoubleList_value_get___(void * jarg1) {
  void * jresult ;
  libsumo::TraCIDoubleList *arg1 = (libsumo::TraCIDoubleList *) 0 ;
  std::shared_ptr< libsumo::TraCIDoubleList > *smartarg1 = 0 ;
  std::vector< double > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIDoubleList > *)jarg1;
  arg1 = (libsumo::TraCIDoubleList *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::vector< double > *)& ((arg1)->value);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIDoubleList___() {
  void * jresult ;
  libsumo::TraCIDoubleList *result = 0 ;
  
  {
    try {
      result = (libsumo::TraCIDoubleList *)new libsumo::TraCIDoubleList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCIDoubleList >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_TraCIDoubleList___(void * jarg1) {
  libsumo::TraCIDoubleList *arg1 = (libsumo::TraCIDoubleList *) 0 ;
  std::shared_ptr< libsumo::TraCIDoubleList > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIDoubleList > *)jarg1;
  arg1 = (libsumo::TraCIDoubleList *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      (void)arg1; delete smartarg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIIntList_getString___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCIIntList *arg1 = (libsumo::TraCIIntList *) 0 ;
  std::shared_ptr< libsumo::TraCIIntList const > *smartarg1 = 0 ;
  std::string result;
  
  
  smartarg1 = (std::shared_ptr< const libsumo::TraCIIntList > *)jarg1;
  arg1 = (libsumo::TraCIIntList *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      result = ((libsumo::TraCIIntList const *)arg1)->getString();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIIntList_value_set___(void * jarg1, void * jarg2) {
  libsumo::TraCIIntList *arg1 = (libsumo::TraCIIntList *) 0 ;
  std::vector< int > *arg2 = (std::vector< int > *) 0 ;
  std::shared_ptr< libsumo::TraCIIntList > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIIntList > *)jarg1;
  arg1 = (libsumo::TraCIIntList *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (std::vector< int > *)jarg2; 
  if (arg1) (arg1)->value = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIIntList_value_get___(void * jarg1) {
  void * jresult ;
  libsumo::TraCIIntList *arg1 = (libsumo::TraCIIntList *) 0 ;
  std::shared_ptr< libsumo::TraCIIntList > *smartarg1 = 0 ;
  std::vector< int > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIIntList > *)jarg1;
  arg1 = (libsumo::TraCIIntList *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::vector< int > *)& ((arg1)->value);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIIntList___() {
  void * jresult ;
  libsumo::TraCIIntList *result = 0 ;
  
  {
    try {
      result = (libsumo::TraCIIntList *)new libsumo::TraCIIntList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCIIntList >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_TraCIIntList___(void * jarg1) {
  libsumo::TraCIIntList *arg1 = (libsumo::TraCIIntList *) 0 ;
  std::shared_ptr< libsumo::TraCIIntList > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIIntList > *)jarg1;
  arg1 = (libsumo::TraCIIntList *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      (void)arg1; delete smartarg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIStringDoublePairList_getString___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCIStringDoublePairList *arg1 = (libsumo::TraCIStringDoublePairList *) 0 ;
  std::shared_ptr< libsumo::TraCIStringDoublePairList const > *smartarg1 = 0 ;
  std::string result;
  
  
  smartarg1 = (std::shared_ptr< const libsumo::TraCIStringDoublePairList > *)jarg1;
  arg1 = (libsumo::TraCIStringDoublePairList *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      result = ((libsumo::TraCIStringDoublePairList const *)arg1)->getString();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIStringDoublePairList_value_set___(void * jarg1, void * jarg2) {
  libsumo::TraCIStringDoublePairList *arg1 = (libsumo::TraCIStringDoublePairList *) 0 ;
  std::vector< std::pair< std::string,double > > *arg2 = (std::vector< std::pair< std::string,double > > *) 0 ;
  std::shared_ptr< libsumo::TraCIStringDoublePairList > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIStringDoublePairList > *)jarg1;
  arg1 = (libsumo::TraCIStringDoublePairList *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (std::vector< std::pair< std::string,double > > *)jarg2; 
  if (arg1) (arg1)->value = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIStringDoublePairList_value_get___(void * jarg1) {
  void * jresult ;
  libsumo::TraCIStringDoublePairList *arg1 = (libsumo::TraCIStringDoublePairList *) 0 ;
  std::shared_ptr< libsumo::TraCIStringDoublePairList > *smartarg1 = 0 ;
  std::vector< std::pair< std::string,double > > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIStringDoublePairList > *)jarg1;
  arg1 = (libsumo::TraCIStringDoublePairList *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::vector< std::pair< std::string,double > > *)& ((arg1)->value);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIStringDoublePairList___() {
  void * jresult ;
  libsumo::TraCIStringDoublePairList *result = 0 ;
  
  {
    try {
      result = (libsumo::TraCIStringDoublePairList *)new libsumo::TraCIStringDoublePairList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCIStringDoublePairList >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_TraCIStringDoublePairList___(void * jarg1) {
  libsumo::TraCIStringDoublePairList *arg1 = (libsumo::TraCIStringDoublePairList *) 0 ;
  std::shared_ptr< libsumo::TraCIStringDoublePairList > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIStringDoublePairList > *)jarg1;
  arg1 = (libsumo::TraCIStringDoublePairList *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      (void)arg1; delete smartarg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIPhase__SWIG_0___() {
  void * jresult ;
  libsumo::TraCIPhase *result = 0 ;
  
  {
    try {
      result = (libsumo::TraCIPhase *)new libsumo::TraCIPhase();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCIPhase >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIPhase__SWIG_1___(double jarg1, const char * jarg2, double jarg3, double jarg4, void * jarg5, const char * jarg6) {
  void * jresult ;
  double arg1 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  std::vector< int > *arg5 = 0 ;
  std::string *arg6 = 0 ;
  libsumo::TraCIPhase *result = 0 ;
  
  arg1 = (double)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (std::vector< int > *)jarg5;
  if (!arg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return 0;
  } 
  if (!jarg6) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg6_str(jarg6);
  arg6 = &arg6_str; 
  {
    try {
      result = (libsumo::TraCIPhase *)new libsumo::TraCIPhase(arg1,(std::string const &)*arg2,arg3,arg4,(std::vector< int > const &)*arg5,(std::string const &)*arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCIPhase >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIPhase__SWIG_2___(double jarg1, const char * jarg2, double jarg3, double jarg4, void * jarg5) {
  void * jresult ;
  double arg1 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  std::vector< int > *arg5 = 0 ;
  libsumo::TraCIPhase *result = 0 ;
  
  arg1 = (double)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (std::vector< int > *)jarg5;
  if (!arg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return 0;
  } 
  {
    try {
      result = (libsumo::TraCIPhase *)new libsumo::TraCIPhase(arg1,(std::string const &)*arg2,arg3,arg4,(std::vector< int > const &)*arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCIPhase >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIPhase__SWIG_3___(double jarg1, const char * jarg2, double jarg3, double jarg4) {
  void * jresult ;
  double arg1 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  libsumo::TraCIPhase *result = 0 ;
  
  arg1 = (double)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      result = (libsumo::TraCIPhase *)new libsumo::TraCIPhase(arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCIPhase >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIPhase__SWIG_4___(double jarg1, const char * jarg2, double jarg3) {
  void * jresult ;
  double arg1 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  libsumo::TraCIPhase *result = 0 ;
  
  arg1 = (double)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  {
    try {
      result = (libsumo::TraCIPhase *)new libsumo::TraCIPhase(arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCIPhase >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIPhase__SWIG_5___(double jarg1, const char * jarg2) {
  void * jresult ;
  double arg1 ;
  std::string *arg2 = 0 ;
  libsumo::TraCIPhase *result = 0 ;
  
  arg1 = (double)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = (libsumo::TraCIPhase *)new libsumo::TraCIPhase(arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCIPhase >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_TraCIPhase___(void * jarg1) {
  libsumo::TraCIPhase *arg1 = (libsumo::TraCIPhase *) 0 ;
  std::shared_ptr< libsumo::TraCIPhase > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIPhase > *)jarg1;
  arg1 = (libsumo::TraCIPhase *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      (void)arg1; delete smartarg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIPhase_duration_set___(void * jarg1, double jarg2) {
  libsumo::TraCIPhase *arg1 = (libsumo::TraCIPhase *) 0 ;
  double arg2 ;
  std::shared_ptr< libsumo::TraCIPhase > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIPhase > *)jarg1;
  arg1 = (libsumo::TraCIPhase *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->duration = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIPhase_duration_get___(void * jarg1) {
  double jresult ;
  libsumo::TraCIPhase *arg1 = (libsumo::TraCIPhase *) 0 ;
  std::shared_ptr< libsumo::TraCIPhase > *smartarg1 = 0 ;
  double result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIPhase > *)jarg1;
  arg1 = (libsumo::TraCIPhase *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double) ((arg1)->duration);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIPhase_state_set___(void * jarg1, const char * jarg2) {
  libsumo::TraCIPhase *arg1 = (libsumo::TraCIPhase *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< libsumo::TraCIPhase > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIPhase > *)jarg1;
  arg1 = (libsumo::TraCIPhase *)(smartarg1 ? smartarg1->get() : 0); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (arg1) (arg1)->state = *arg2;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIPhase_state_get___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCIPhase *arg1 = (libsumo::TraCIPhase *) 0 ;
  std::shared_ptr< libsumo::TraCIPhase > *smartarg1 = 0 ;
  std::string *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIPhase > *)jarg1;
  arg1 = (libsumo::TraCIPhase *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::string *) & ((arg1)->state);
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIPhase_minDur_set___(void * jarg1, double jarg2) {
  libsumo::TraCIPhase *arg1 = (libsumo::TraCIPhase *) 0 ;
  double arg2 ;
  std::shared_ptr< libsumo::TraCIPhase > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIPhase > *)jarg1;
  arg1 = (libsumo::TraCIPhase *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->minDur = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIPhase_minDur_get___(void * jarg1) {
  double jresult ;
  libsumo::TraCIPhase *arg1 = (libsumo::TraCIPhase *) 0 ;
  std::shared_ptr< libsumo::TraCIPhase > *smartarg1 = 0 ;
  double result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIPhase > *)jarg1;
  arg1 = (libsumo::TraCIPhase *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double) ((arg1)->minDur);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIPhase_maxDur_set___(void * jarg1, double jarg2) {
  libsumo::TraCIPhase *arg1 = (libsumo::TraCIPhase *) 0 ;
  double arg2 ;
  std::shared_ptr< libsumo::TraCIPhase > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIPhase > *)jarg1;
  arg1 = (libsumo::TraCIPhase *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->maxDur = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIPhase_maxDur_get___(void * jarg1) {
  double jresult ;
  libsumo::TraCIPhase *arg1 = (libsumo::TraCIPhase *) 0 ;
  std::shared_ptr< libsumo::TraCIPhase > *smartarg1 = 0 ;
  double result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIPhase > *)jarg1;
  arg1 = (libsumo::TraCIPhase *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double) ((arg1)->maxDur);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIPhase_next_set___(void * jarg1, void * jarg2) {
  libsumo::TraCIPhase *arg1 = (libsumo::TraCIPhase *) 0 ;
  std::vector< int > *arg2 = (std::vector< int > *) 0 ;
  std::shared_ptr< libsumo::TraCIPhase > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIPhase > *)jarg1;
  arg1 = (libsumo::TraCIPhase *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (std::vector< int > *)jarg2; 
  if (arg1) (arg1)->next = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIPhase_next_get___(void * jarg1) {
  void * jresult ;
  libsumo::TraCIPhase *arg1 = (libsumo::TraCIPhase *) 0 ;
  std::shared_ptr< libsumo::TraCIPhase > *smartarg1 = 0 ;
  std::vector< int > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIPhase > *)jarg1;
  arg1 = (libsumo::TraCIPhase *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::vector< int > *)& ((arg1)->next);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIPhase_name_set___(void * jarg1, const char * jarg2) {
  libsumo::TraCIPhase *arg1 = (libsumo::TraCIPhase *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< libsumo::TraCIPhase > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIPhase > *)jarg1;
  arg1 = (libsumo::TraCIPhase *)(smartarg1 ? smartarg1->get() : 0); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (arg1) (arg1)->name = *arg2;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIPhase_name_get___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCIPhase *arg1 = (libsumo::TraCIPhase *) 0 ;
  std::shared_ptr< libsumo::TraCIPhase > *smartarg1 = 0 ;
  std::string *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIPhase > *)jarg1;
  arg1 = (libsumo::TraCIPhase *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::string *) & ((arg1)->name);
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIPhaseVector__SWIG_0___() {
  void * jresult ;
  std::vector< std::shared_ptr< libsumo::TraCIPhase > > *result = 0 ;
  
  {
    try {
      result = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *)new std::vector< std::shared_ptr< libsumo::TraCIPhase > >();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIPhaseVector__SWIG_1___(void * jarg1) {
  void * jresult ;
  std::vector< std::shared_ptr< libsumo::TraCIPhase > > *arg1 = 0 ;
  std::vector< std::shared_ptr< libsumo::TraCIPhase > > *result = 0 ;
  
  arg1 = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::shared_ptr< libsumo::TraCIPhase > > const & is null", 0);
    return 0;
  } 
  {
    try {
      result = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *)new std::vector< std::shared_ptr< libsumo::TraCIPhase > >((std::vector< std::shared_ptr< libsumo::TraCIPhase > > const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIPhaseVector_Clear___(void * jarg1) {
  std::vector< std::shared_ptr< libsumo::TraCIPhase > > *arg1 = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *) 0 ;
  
  arg1 = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *)jarg1; 
  {
    try {
      (arg1)->clear();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIPhaseVector_Add___(void * jarg1, void * jarg2) {
  std::vector< std::shared_ptr< libsumo::TraCIPhase > > *arg1 = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *) 0 ;
  std::shared_ptr< libsumo::TraCIPhase > *arg2 = 0 ;
  std::shared_ptr< libsumo::TraCIPhase > tempnull2 ;
  
  arg1 = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *)jarg1; 
  arg2 = jarg2 ? (std::shared_ptr< libsumo::TraCIPhase > *)jarg2 : &tempnull2; 
  {
    try {
      (arg1)->push_back((std::shared_ptr< libsumo::TraCIPhase > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIPhaseVector_size___(void * jarg1) {
  unsigned int jresult ;
  std::vector< std::shared_ptr< libsumo::TraCIPhase > > *arg1 = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *) 0 ;
  std::vector< std::shared_ptr< libsumo::TraCIPhase > >::size_type result;
  
  arg1 = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *)jarg1; 
  {
    try {
      result = ((std::vector< std::shared_ptr< libsumo::TraCIPhase > > const *)arg1)->size();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (unsigned int)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIPhaseVector_empty___(void * jarg1) {
  unsigned int jresult ;
  std::vector< std::shared_ptr< libsumo::TraCIPhase > > *arg1 = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *) 0 ;
  bool result;
  
  arg1 = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *)jarg1; 
  {
    try {
      result = (bool)((std::vector< std::shared_ptr< libsumo::TraCIPhase > > const *)arg1)->empty();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIPhaseVector_capacity___(void * jarg1) {
  unsigned int jresult ;
  std::vector< std::shared_ptr< libsumo::TraCIPhase > > *arg1 = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *) 0 ;
  std::vector< std::shared_ptr< libsumo::TraCIPhase > >::size_type result;
  
  arg1 = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *)jarg1; 
  {
    try {
      result = ((std::vector< std::shared_ptr< libsumo::TraCIPhase > > const *)arg1)->capacity();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (unsigned int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIPhaseVector_reserve___(void * jarg1, unsigned int jarg2) {
  std::vector< std::shared_ptr< libsumo::TraCIPhase > > *arg1 = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *) 0 ;
  std::vector< std::shared_ptr< libsumo::TraCIPhase > >::size_type arg2 ;
  
  arg1 = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *)jarg1; 
  arg2 = (std::vector< std::shared_ptr< libsumo::TraCIPhase > >::size_type)jarg2; 
  {
    try {
      (arg1)->reserve(SWIG_STD_MOVE(arg2));
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIPhaseVector__SWIG_2___(int jarg1) {
  void * jresult ;
  int arg1 ;
  std::vector< std::shared_ptr< libsumo::TraCIPhase > > *result = 0 ;
  
  arg1 = (int)jarg1; 
  {
    try {
      try {
        result = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *)new_std_vector_Sl_std_shared_ptr_Sl_libsumo_TraCIPhase_Sg__Sg___SWIG_2(arg1);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIPhaseVector_getitemcopy___(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< std::shared_ptr< libsumo::TraCIPhase > > *arg1 = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *) 0 ;
  int arg2 ;
  std::shared_ptr< libsumo::TraCIPhase > result;
  
  arg1 = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = std_vector_Sl_std_shared_ptr_Sl_libsumo_TraCIPhase_Sg__Sg__getitemcopy(arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result ? new std::shared_ptr< libsumo::TraCIPhase >(result) : 0; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIPhaseVector_getitem___(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< std::shared_ptr< libsumo::TraCIPhase > > *arg1 = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *) 0 ;
  int arg2 ;
  std::vector< std::shared_ptr< libsumo::TraCIPhase > >::value_type *result = 0 ;
  
  arg1 = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (std::vector< std::shared_ptr< libsumo::TraCIPhase > >::value_type *) &std_vector_Sl_std_shared_ptr_Sl_libsumo_TraCIPhase_Sg__Sg__getitem(arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = *result ? new std::vector< std::shared_ptr< libsumo::TraCIPhase > >::value_type(*result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIPhaseVector_setitem___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< std::shared_ptr< libsumo::TraCIPhase > > *arg1 = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *) 0 ;
  int arg2 ;
  std::shared_ptr< libsumo::TraCIPhase > *arg3 = 0 ;
  std::shared_ptr< libsumo::TraCIPhase > tempnull3 ;
  
  arg1 = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = jarg3 ? (std::shared_ptr< libsumo::TraCIPhase > *)jarg3 : &tempnull3; 
  {
    try {
      try {
        std_vector_Sl_std_shared_ptr_Sl_libsumo_TraCIPhase_Sg__Sg__setitem(arg1,arg2,(std::shared_ptr< libsumo::TraCIPhase > const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIPhaseVector_AddRange___(void * jarg1, void * jarg2) {
  std::vector< std::shared_ptr< libsumo::TraCIPhase > > *arg1 = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *) 0 ;
  std::vector< std::shared_ptr< libsumo::TraCIPhase > > *arg2 = 0 ;
  
  arg1 = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *)jarg1; 
  arg2 = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::shared_ptr< libsumo::TraCIPhase > > const & is null", 0);
    return ;
  } 
  {
    try {
      std_vector_Sl_std_shared_ptr_Sl_libsumo_TraCIPhase_Sg__Sg__AddRange(arg1,(std::vector< std::shared_ptr< libsumo::TraCIPhase > > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIPhaseVector_GetRange___(void * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  std::vector< std::shared_ptr< libsumo::TraCIPhase > > *arg1 = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *) 0 ;
  int arg2 ;
  int arg3 ;
  std::vector< std::shared_ptr< libsumo::TraCIPhase > > *result = 0 ;
  
  arg1 = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        result = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *)std_vector_Sl_std_shared_ptr_Sl_libsumo_TraCIPhase_Sg__Sg__GetRange(arg1,arg2,arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      } catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIPhaseVector_Insert___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< std::shared_ptr< libsumo::TraCIPhase > > *arg1 = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *) 0 ;
  int arg2 ;
  std::shared_ptr< libsumo::TraCIPhase > *arg3 = 0 ;
  std::shared_ptr< libsumo::TraCIPhase > tempnull3 ;
  
  arg1 = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = jarg3 ? (std::shared_ptr< libsumo::TraCIPhase > *)jarg3 : &tempnull3; 
  {
    try {
      try {
        std_vector_Sl_std_shared_ptr_Sl_libsumo_TraCIPhase_Sg__Sg__Insert(arg1,arg2,(std::shared_ptr< libsumo::TraCIPhase > const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIPhaseVector_InsertRange___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< std::shared_ptr< libsumo::TraCIPhase > > *arg1 = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *) 0 ;
  int arg2 ;
  std::vector< std::shared_ptr< libsumo::TraCIPhase > > *arg3 = 0 ;
  
  arg1 = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::shared_ptr< libsumo::TraCIPhase > > const & is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_std_shared_ptr_Sl_libsumo_TraCIPhase_Sg__Sg__InsertRange(arg1,arg2,(std::vector< std::shared_ptr< libsumo::TraCIPhase > > const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIPhaseVector_RemoveAt___(void * jarg1, int jarg2) {
  std::vector< std::shared_ptr< libsumo::TraCIPhase > > *arg1 = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *) 0 ;
  int arg2 ;
  
  arg1 = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        std_vector_Sl_std_shared_ptr_Sl_libsumo_TraCIPhase_Sg__Sg__RemoveAt(arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIPhaseVector_RemoveRange___(void * jarg1, int jarg2, int jarg3) {
  std::vector< std::shared_ptr< libsumo::TraCIPhase > > *arg1 = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        std_vector_Sl_std_shared_ptr_Sl_libsumo_TraCIPhase_Sg__Sg__RemoveRange(arg1,arg2,arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      } catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIPhaseVector_Repeat___(void * jarg1, int jarg2) {
  void * jresult ;
  std::shared_ptr< libsumo::TraCIPhase > *arg1 = 0 ;
  int arg2 ;
  std::shared_ptr< libsumo::TraCIPhase > tempnull1 ;
  std::vector< std::shared_ptr< libsumo::TraCIPhase > > *result = 0 ;
  
  arg1 = jarg1 ? (std::shared_ptr< libsumo::TraCIPhase > *)jarg1 : &tempnull1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *)std_vector_Sl_std_shared_ptr_Sl_libsumo_TraCIPhase_Sg__Sg__Repeat((std::shared_ptr< libsumo::TraCIPhase > const &)*arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIPhaseVector_Reverse__SWIG_0___(void * jarg1) {
  std::vector< std::shared_ptr< libsumo::TraCIPhase > > *arg1 = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *) 0 ;
  
  arg1 = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *)jarg1; 
  {
    try {
      std_vector_Sl_std_shared_ptr_Sl_libsumo_TraCIPhase_Sg__Sg__Reverse__SWIG_0(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIPhaseVector_Reverse__SWIG_1___(void * jarg1, int jarg2, int jarg3) {
  std::vector< std::shared_ptr< libsumo::TraCIPhase > > *arg1 = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        std_vector_Sl_std_shared_ptr_Sl_libsumo_TraCIPhase_Sg__Sg__Reverse__SWIG_1(arg1,arg2,arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      } catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIPhaseVector_SetRange___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< std::shared_ptr< libsumo::TraCIPhase > > *arg1 = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *) 0 ;
  int arg2 ;
  std::vector< std::shared_ptr< libsumo::TraCIPhase > > *arg3 = 0 ;
  
  arg1 = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::shared_ptr< libsumo::TraCIPhase > > const & is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_std_shared_ptr_Sl_libsumo_TraCIPhase_Sg__Sg__SetRange(arg1,arg2,(std::vector< std::shared_ptr< libsumo::TraCIPhase > > const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_TraCIPhaseVector___(void * jarg1) {
  std::vector< std::shared_ptr< libsumo::TraCIPhase > > *arg1 = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *) 0 ;
  
  arg1 = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCILogic__SWIG_0___() {
  void * jresult ;
  libsumo::TraCILogic *result = 0 ;
  
  {
    try {
      result = (libsumo::TraCILogic *)new libsumo::TraCILogic();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCILogic >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCILogic__SWIG_1___(const char * jarg1, int jarg2, int jarg3, void * jarg4) {
  void * jresult ;
  std::string *arg1 = 0 ;
  int arg2 ;
  int arg3 ;
  std::vector< std::shared_ptr< libsumo::TraCIPhase > > *arg4 = 0 ;
  libsumo::TraCILogic *result = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::shared_ptr< libsumo::TraCIPhase > > const & is null", 0);
    return 0;
  } 
  {
    try {
      result = (libsumo::TraCILogic *)new libsumo::TraCILogic((std::string const &)*arg1,arg2,arg3,(std::vector< std::shared_ptr< libsumo::TraCIPhase > > const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCILogic >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCILogic__SWIG_2___(const char * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  std::string *arg1 = 0 ;
  int arg2 ;
  int arg3 ;
  libsumo::TraCILogic *result = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      result = (libsumo::TraCILogic *)new libsumo::TraCILogic((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCILogic >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_TraCILogic___(void * jarg1) {
  libsumo::TraCILogic *arg1 = (libsumo::TraCILogic *) 0 ;
  std::shared_ptr< libsumo::TraCILogic > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCILogic > *)jarg1;
  arg1 = (libsumo::TraCILogic *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      (void)arg1; delete smartarg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILogic_getString___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCILogic *arg1 = (libsumo::TraCILogic *) 0 ;
  std::shared_ptr< libsumo::TraCILogic const > *smartarg1 = 0 ;
  std::string result;
  
  
  smartarg1 = (std::shared_ptr< const libsumo::TraCILogic > *)jarg1;
  arg1 = (libsumo::TraCILogic *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      result = ((libsumo::TraCILogic const *)arg1)->getString();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILogic_programID_set___(void * jarg1, const char * jarg2) {
  libsumo::TraCILogic *arg1 = (libsumo::TraCILogic *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< libsumo::TraCILogic > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCILogic > *)jarg1;
  arg1 = (libsumo::TraCILogic *)(smartarg1 ? smartarg1->get() : 0); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (arg1) (arg1)->programID = *arg2;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILogic_programID_get___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCILogic *arg1 = (libsumo::TraCILogic *) 0 ;
  std::shared_ptr< libsumo::TraCILogic > *smartarg1 = 0 ;
  std::string *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCILogic > *)jarg1;
  arg1 = (libsumo::TraCILogic *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::string *) & ((arg1)->programID);
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILogic_type_set___(void * jarg1, int jarg2) {
  libsumo::TraCILogic *arg1 = (libsumo::TraCILogic *) 0 ;
  int arg2 ;
  std::shared_ptr< libsumo::TraCILogic > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCILogic > *)jarg1;
  arg1 = (libsumo::TraCILogic *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->type = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILogic_type_get___(void * jarg1) {
  int jresult ;
  libsumo::TraCILogic *arg1 = (libsumo::TraCILogic *) 0 ;
  std::shared_ptr< libsumo::TraCILogic > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCILogic > *)jarg1;
  arg1 = (libsumo::TraCILogic *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int) ((arg1)->type);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILogic_currentPhaseIndex_set___(void * jarg1, int jarg2) {
  libsumo::TraCILogic *arg1 = (libsumo::TraCILogic *) 0 ;
  int arg2 ;
  std::shared_ptr< libsumo::TraCILogic > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCILogic > *)jarg1;
  arg1 = (libsumo::TraCILogic *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->currentPhaseIndex = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILogic_currentPhaseIndex_get___(void * jarg1) {
  int jresult ;
  libsumo::TraCILogic *arg1 = (libsumo::TraCILogic *) 0 ;
  std::shared_ptr< libsumo::TraCILogic > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCILogic > *)jarg1;
  arg1 = (libsumo::TraCILogic *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int) ((arg1)->currentPhaseIndex);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILogic_phases_set___(void * jarg1, void * jarg2) {
  libsumo::TraCILogic *arg1 = (libsumo::TraCILogic *) 0 ;
  std::vector< std::shared_ptr< libsumo::TraCIPhase > > *arg2 = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *) 0 ;
  std::shared_ptr< libsumo::TraCILogic > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCILogic > *)jarg1;
  arg1 = (libsumo::TraCILogic *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *)jarg2; 
  if (arg1) (arg1)->phases = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILogic_phases_get___(void * jarg1) {
  void * jresult ;
  libsumo::TraCILogic *arg1 = (libsumo::TraCILogic *) 0 ;
  std::shared_ptr< libsumo::TraCILogic > *smartarg1 = 0 ;
  std::vector< std::shared_ptr< libsumo::TraCIPhase > > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCILogic > *)jarg1;
  arg1 = (libsumo::TraCILogic *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::vector< std::shared_ptr< libsumo::TraCIPhase > > *)& ((arg1)->phases);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILogic_subParameter_set___(void * jarg1, void * jarg2) {
  libsumo::TraCILogic *arg1 = (libsumo::TraCILogic *) 0 ;
  std::map< std::string,std::string,std::less< std::string > > *arg2 = (std::map< std::string,std::string,std::less< std::string > > *) 0 ;
  std::shared_ptr< libsumo::TraCILogic > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCILogic > *)jarg1;
  arg1 = (libsumo::TraCILogic *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (std::map< std::string,std::string,std::less< std::string > > *)jarg2; 
  if (arg1) (arg1)->subParameter = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILogic_subParameter_get___(void * jarg1) {
  void * jresult ;
  libsumo::TraCILogic *arg1 = (libsumo::TraCILogic *) 0 ;
  std::shared_ptr< libsumo::TraCILogic > *smartarg1 = 0 ;
  std::map< std::string,std::string,std::less< std::string > > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCILogic > *)jarg1;
  arg1 = (libsumo::TraCILogic *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::map< std::string,std::string,std::less< std::string > > *)& ((arg1)->subParameter);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILogicVectorWrapped_getString___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCILogicVectorWrapped *arg1 = (libsumo::TraCILogicVectorWrapped *) 0 ;
  std::shared_ptr< libsumo::TraCILogicVectorWrapped const > *smartarg1 = 0 ;
  std::string result;
  
  
  smartarg1 = (std::shared_ptr< const libsumo::TraCILogicVectorWrapped > *)jarg1;
  arg1 = (libsumo::TraCILogicVectorWrapped *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      result = ((libsumo::TraCILogicVectorWrapped const *)arg1)->getString();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILogicVectorWrapped_value_set___(void * jarg1, void * jarg2) {
  libsumo::TraCILogicVectorWrapped *arg1 = (libsumo::TraCILogicVectorWrapped *) 0 ;
  std::vector< libsumo::TraCILogic > *arg2 = (std::vector< libsumo::TraCILogic > *) 0 ;
  std::shared_ptr< libsumo::TraCILogicVectorWrapped > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCILogicVectorWrapped > *)jarg1;
  arg1 = (libsumo::TraCILogicVectorWrapped *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (std::vector< libsumo::TraCILogic > *)jarg2; 
  if (arg1) (arg1)->value = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILogicVectorWrapped_value_get___(void * jarg1) {
  void * jresult ;
  libsumo::TraCILogicVectorWrapped *arg1 = (libsumo::TraCILogicVectorWrapped *) 0 ;
  std::shared_ptr< libsumo::TraCILogicVectorWrapped > *smartarg1 = 0 ;
  std::vector< libsumo::TraCILogic > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCILogicVectorWrapped > *)jarg1;
  arg1 = (libsumo::TraCILogicVectorWrapped *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::vector< libsumo::TraCILogic > *)& ((arg1)->value);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCILogicVectorWrapped___() {
  void * jresult ;
  libsumo::TraCILogicVectorWrapped *result = 0 ;
  
  {
    try {
      result = (libsumo::TraCILogicVectorWrapped *)new libsumo::TraCILogicVectorWrapped();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCILogicVectorWrapped >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_TraCILogicVectorWrapped___(void * jarg1) {
  libsumo::TraCILogicVectorWrapped *arg1 = (libsumo::TraCILogicVectorWrapped *) 0 ;
  std::shared_ptr< libsumo::TraCILogicVectorWrapped > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCILogicVectorWrapped > *)jarg1;
  arg1 = (libsumo::TraCILogicVectorWrapped *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      (void)arg1; delete smartarg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCILink__SWIG_0___() {
  void * jresult ;
  libsumo::TraCILink *result = 0 ;
  
  {
    try {
      result = (libsumo::TraCILink *)new libsumo::TraCILink();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCILink >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCILink__SWIG_1___(const char * jarg1, const char * jarg2, const char * jarg3) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  libsumo::TraCILink *result = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  {
    try {
      result = (libsumo::TraCILink *)new libsumo::TraCILink((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCILink >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_TraCILink___(void * jarg1) {
  libsumo::TraCILink *arg1 = (libsumo::TraCILink *) 0 ;
  std::shared_ptr< libsumo::TraCILink > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCILink > *)jarg1;
  arg1 = (libsumo::TraCILink *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      (void)arg1; delete smartarg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILink_getString___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCILink *arg1 = (libsumo::TraCILink *) 0 ;
  std::shared_ptr< libsumo::TraCILink const > *smartarg1 = 0 ;
  std::string result;
  
  
  smartarg1 = (std::shared_ptr< const libsumo::TraCILink > *)jarg1;
  arg1 = (libsumo::TraCILink *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      result = ((libsumo::TraCILink const *)arg1)->getString();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILink_fromLane_set___(void * jarg1, const char * jarg2) {
  libsumo::TraCILink *arg1 = (libsumo::TraCILink *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< libsumo::TraCILink > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCILink > *)jarg1;
  arg1 = (libsumo::TraCILink *)(smartarg1 ? smartarg1->get() : 0); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (arg1) (arg1)->fromLane = *arg2;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILink_fromLane_get___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCILink *arg1 = (libsumo::TraCILink *) 0 ;
  std::shared_ptr< libsumo::TraCILink > *smartarg1 = 0 ;
  std::string *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCILink > *)jarg1;
  arg1 = (libsumo::TraCILink *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::string *) & ((arg1)->fromLane);
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILink_viaLane_set___(void * jarg1, const char * jarg2) {
  libsumo::TraCILink *arg1 = (libsumo::TraCILink *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< libsumo::TraCILink > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCILink > *)jarg1;
  arg1 = (libsumo::TraCILink *)(smartarg1 ? smartarg1->get() : 0); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (arg1) (arg1)->viaLane = *arg2;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILink_viaLane_get___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCILink *arg1 = (libsumo::TraCILink *) 0 ;
  std::shared_ptr< libsumo::TraCILink > *smartarg1 = 0 ;
  std::string *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCILink > *)jarg1;
  arg1 = (libsumo::TraCILink *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::string *) & ((arg1)->viaLane);
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILink_toLane_set___(void * jarg1, const char * jarg2) {
  libsumo::TraCILink *arg1 = (libsumo::TraCILink *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< libsumo::TraCILink > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCILink > *)jarg1;
  arg1 = (libsumo::TraCILink *)(smartarg1 ? smartarg1->get() : 0); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (arg1) (arg1)->toLane = *arg2;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILink_toLane_get___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCILink *arg1 = (libsumo::TraCILink *) 0 ;
  std::shared_ptr< libsumo::TraCILink > *smartarg1 = 0 ;
  std::string *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCILink > *)jarg1;
  arg1 = (libsumo::TraCILink *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::string *) & ((arg1)->toLane);
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILinkVectorVectorWrapped_getString___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCILinkVectorVectorWrapped *arg1 = (libsumo::TraCILinkVectorVectorWrapped *) 0 ;
  std::shared_ptr< libsumo::TraCILinkVectorVectorWrapped const > *smartarg1 = 0 ;
  std::string result;
  
  
  smartarg1 = (std::shared_ptr< const libsumo::TraCILinkVectorVectorWrapped > *)jarg1;
  arg1 = (libsumo::TraCILinkVectorVectorWrapped *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      result = ((libsumo::TraCILinkVectorVectorWrapped const *)arg1)->getString();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILinkVectorVectorWrapped_value_set___(void * jarg1, void * jarg2) {
  libsumo::TraCILinkVectorVectorWrapped *arg1 = (libsumo::TraCILinkVectorVectorWrapped *) 0 ;
  std::vector< std::vector< libsumo::TraCILink > > *arg2 = (std::vector< std::vector< libsumo::TraCILink > > *) 0 ;
  std::shared_ptr< libsumo::TraCILinkVectorVectorWrapped > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCILinkVectorVectorWrapped > *)jarg1;
  arg1 = (libsumo::TraCILinkVectorVectorWrapped *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (std::vector< std::vector< libsumo::TraCILink > > *)jarg2; 
  if (arg1) (arg1)->value = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILinkVectorVectorWrapped_value_get___(void * jarg1) {
  void * jresult ;
  libsumo::TraCILinkVectorVectorWrapped *arg1 = (libsumo::TraCILinkVectorVectorWrapped *) 0 ;
  std::shared_ptr< libsumo::TraCILinkVectorVectorWrapped > *smartarg1 = 0 ;
  std::vector< std::vector< libsumo::TraCILink > > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCILinkVectorVectorWrapped > *)jarg1;
  arg1 = (libsumo::TraCILinkVectorVectorWrapped *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::vector< std::vector< libsumo::TraCILink > > *)& ((arg1)->value);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCILinkVectorVectorWrapped___() {
  void * jresult ;
  libsumo::TraCILinkVectorVectorWrapped *result = 0 ;
  
  {
    try {
      result = (libsumo::TraCILinkVectorVectorWrapped *)new libsumo::TraCILinkVectorVectorWrapped();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCILinkVectorVectorWrapped >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_TraCILinkVectorVectorWrapped___(void * jarg1) {
  libsumo::TraCILinkVectorVectorWrapped *arg1 = (libsumo::TraCILinkVectorVectorWrapped *) 0 ;
  std::shared_ptr< libsumo::TraCILinkVectorVectorWrapped > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCILinkVectorVectorWrapped > *)jarg1;
  arg1 = (libsumo::TraCILinkVectorVectorWrapped *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      (void)arg1; delete smartarg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIConnection__SWIG_0___() {
  void * jresult ;
  libsumo::TraCIConnection *result = 0 ;
  
  {
    try {
      result = (libsumo::TraCIConnection *)new libsumo::TraCIConnection();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCIConnection >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIConnection__SWIG_1___(const char * jarg1, unsigned int jarg2, unsigned int jarg3, unsigned int jarg4, const char * jarg5, const char * jarg6, const char * jarg7, double jarg8) {
  void * jresult ;
  std::string *arg1 = 0 ;
  bool arg2 ;
  bool arg3 ;
  bool arg4 ;
  std::string arg5 ;
  std::string arg6 ;
  std::string arg7 ;
  double arg8 ;
  libsumo::TraCIConnection *result = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = jarg2 ? true : false; 
  arg3 = jarg3 ? true : false; 
  arg4 = jarg4 ? true : false; 
  if (!jarg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  (&arg5)->assign(jarg5); 
  if (!jarg6) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  (&arg6)->assign(jarg6); 
  if (!jarg7) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  (&arg7)->assign(jarg7); 
  arg8 = (double)jarg8; 
  {
    try {
      result = (libsumo::TraCIConnection *)new libsumo::TraCIConnection((std::string const &)*arg1,arg2,arg3,arg4,SWIG_STD_MOVE(arg5),SWIG_STD_MOVE(arg6),SWIG_STD_MOVE(arg7),arg8);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCIConnection >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_TraCIConnection___(void * jarg1) {
  libsumo::TraCIConnection *arg1 = (libsumo::TraCIConnection *) 0 ;
  std::shared_ptr< libsumo::TraCIConnection > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIConnection > *)jarg1;
  arg1 = (libsumo::TraCIConnection *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      (void)arg1; delete smartarg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIConnection_getString___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCIConnection *arg1 = (libsumo::TraCIConnection *) 0 ;
  std::shared_ptr< libsumo::TraCIConnection const > *smartarg1 = 0 ;
  std::string result;
  
  
  smartarg1 = (std::shared_ptr< const libsumo::TraCIConnection > *)jarg1;
  arg1 = (libsumo::TraCIConnection *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      result = ((libsumo::TraCIConnection const *)arg1)->getString();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIConnection_approachedLane_set___(void * jarg1, const char * jarg2) {
  libsumo::TraCIConnection *arg1 = (libsumo::TraCIConnection *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< libsumo::TraCIConnection > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIConnection > *)jarg1;
  arg1 = (libsumo::TraCIConnection *)(smartarg1 ? smartarg1->get() : 0); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (arg1) (arg1)->approachedLane = *arg2;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIConnection_approachedLane_get___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCIConnection *arg1 = (libsumo::TraCIConnection *) 0 ;
  std::shared_ptr< libsumo::TraCIConnection > *smartarg1 = 0 ;
  std::string *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIConnection > *)jarg1;
  arg1 = (libsumo::TraCIConnection *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::string *) & ((arg1)->approachedLane);
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIConnection_hasPrio_set___(void * jarg1, unsigned int jarg2) {
  libsumo::TraCIConnection *arg1 = (libsumo::TraCIConnection *) 0 ;
  bool arg2 ;
  std::shared_ptr< libsumo::TraCIConnection > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIConnection > *)jarg1;
  arg1 = (libsumo::TraCIConnection *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->hasPrio = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIConnection_hasPrio_get___(void * jarg1) {
  unsigned int jresult ;
  libsumo::TraCIConnection *arg1 = (libsumo::TraCIConnection *) 0 ;
  std::shared_ptr< libsumo::TraCIConnection > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIConnection > *)jarg1;
  arg1 = (libsumo::TraCIConnection *)(smartarg1 ? smartarg1->get() : 0); 
  result = (bool) ((arg1)->hasPrio);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIConnection_isOpen_set___(void * jarg1, unsigned int jarg2) {
  libsumo::TraCIConnection *arg1 = (libsumo::TraCIConnection *) 0 ;
  bool arg2 ;
  std::shared_ptr< libsumo::TraCIConnection > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIConnection > *)jarg1;
  arg1 = (libsumo::TraCIConnection *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->isOpen = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIConnection_isOpen_get___(void * jarg1) {
  unsigned int jresult ;
  libsumo::TraCIConnection *arg1 = (libsumo::TraCIConnection *) 0 ;
  std::shared_ptr< libsumo::TraCIConnection > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIConnection > *)jarg1;
  arg1 = (libsumo::TraCIConnection *)(smartarg1 ? smartarg1->get() : 0); 
  result = (bool) ((arg1)->isOpen);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIConnection_hasFoe_set___(void * jarg1, unsigned int jarg2) {
  libsumo::TraCIConnection *arg1 = (libsumo::TraCIConnection *) 0 ;
  bool arg2 ;
  std::shared_ptr< libsumo::TraCIConnection > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIConnection > *)jarg1;
  arg1 = (libsumo::TraCIConnection *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->hasFoe = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIConnection_hasFoe_get___(void * jarg1) {
  unsigned int jresult ;
  libsumo::TraCIConnection *arg1 = (libsumo::TraCIConnection *) 0 ;
  std::shared_ptr< libsumo::TraCIConnection > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIConnection > *)jarg1;
  arg1 = (libsumo::TraCIConnection *)(smartarg1 ? smartarg1->get() : 0); 
  result = (bool) ((arg1)->hasFoe);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIConnection_approachedInternal_set___(void * jarg1, const char * jarg2) {
  libsumo::TraCIConnection *arg1 = (libsumo::TraCIConnection *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< libsumo::TraCIConnection > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIConnection > *)jarg1;
  arg1 = (libsumo::TraCIConnection *)(smartarg1 ? smartarg1->get() : 0); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (arg1) (arg1)->approachedInternal = *arg2;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIConnection_approachedInternal_get___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCIConnection *arg1 = (libsumo::TraCIConnection *) 0 ;
  std::shared_ptr< libsumo::TraCIConnection > *smartarg1 = 0 ;
  std::string *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIConnection > *)jarg1;
  arg1 = (libsumo::TraCIConnection *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::string *) & ((arg1)->approachedInternal);
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIConnection_state_set___(void * jarg1, const char * jarg2) {
  libsumo::TraCIConnection *arg1 = (libsumo::TraCIConnection *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< libsumo::TraCIConnection > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIConnection > *)jarg1;
  arg1 = (libsumo::TraCIConnection *)(smartarg1 ? smartarg1->get() : 0); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (arg1) (arg1)->state = *arg2;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIConnection_state_get___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCIConnection *arg1 = (libsumo::TraCIConnection *) 0 ;
  std::shared_ptr< libsumo::TraCIConnection > *smartarg1 = 0 ;
  std::string *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIConnection > *)jarg1;
  arg1 = (libsumo::TraCIConnection *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::string *) & ((arg1)->state);
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIConnection_direction_set___(void * jarg1, const char * jarg2) {
  libsumo::TraCIConnection *arg1 = (libsumo::TraCIConnection *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< libsumo::TraCIConnection > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIConnection > *)jarg1;
  arg1 = (libsumo::TraCIConnection *)(smartarg1 ? smartarg1->get() : 0); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (arg1) (arg1)->direction = *arg2;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIConnection_direction_get___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCIConnection *arg1 = (libsumo::TraCIConnection *) 0 ;
  std::shared_ptr< libsumo::TraCIConnection > *smartarg1 = 0 ;
  std::string *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIConnection > *)jarg1;
  arg1 = (libsumo::TraCIConnection *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::string *) & ((arg1)->direction);
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIConnection_length_set___(void * jarg1, double jarg2) {
  libsumo::TraCIConnection *arg1 = (libsumo::TraCIConnection *) 0 ;
  double arg2 ;
  std::shared_ptr< libsumo::TraCIConnection > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIConnection > *)jarg1;
  arg1 = (libsumo::TraCIConnection *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->length = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIConnection_length_get___(void * jarg1) {
  double jresult ;
  libsumo::TraCIConnection *arg1 = (libsumo::TraCIConnection *) 0 ;
  std::shared_ptr< libsumo::TraCIConnection > *smartarg1 = 0 ;
  double result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIConnection > *)jarg1;
  arg1 = (libsumo::TraCIConnection *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double) ((arg1)->length);
  jresult = result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIConnectionVectorWrapped_getString___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCIConnectionVectorWrapped *arg1 = (libsumo::TraCIConnectionVectorWrapped *) 0 ;
  std::shared_ptr< libsumo::TraCIConnectionVectorWrapped const > *smartarg1 = 0 ;
  std::string result;
  
  
  smartarg1 = (std::shared_ptr< const libsumo::TraCIConnectionVectorWrapped > *)jarg1;
  arg1 = (libsumo::TraCIConnectionVectorWrapped *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      result = ((libsumo::TraCIConnectionVectorWrapped const *)arg1)->getString();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIConnectionVectorWrapped_value_set___(void * jarg1, void * jarg2) {
  libsumo::TraCIConnectionVectorWrapped *arg1 = (libsumo::TraCIConnectionVectorWrapped *) 0 ;
  std::vector< libsumo::TraCIConnection > *arg2 = (std::vector< libsumo::TraCIConnection > *) 0 ;
  std::shared_ptr< libsumo::TraCIConnectionVectorWrapped > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIConnectionVectorWrapped > *)jarg1;
  arg1 = (libsumo::TraCIConnectionVectorWrapped *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (std::vector< libsumo::TraCIConnection > *)jarg2; 
  if (arg1) (arg1)->value = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIConnectionVectorWrapped_value_get___(void * jarg1) {
  void * jresult ;
  libsumo::TraCIConnectionVectorWrapped *arg1 = (libsumo::TraCIConnectionVectorWrapped *) 0 ;
  std::shared_ptr< libsumo::TraCIConnectionVectorWrapped > *smartarg1 = 0 ;
  std::vector< libsumo::TraCIConnection > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIConnectionVectorWrapped > *)jarg1;
  arg1 = (libsumo::TraCIConnectionVectorWrapped *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::vector< libsumo::TraCIConnection > *)& ((arg1)->value);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIConnectionVectorWrapped___() {
  void * jresult ;
  libsumo::TraCIConnectionVectorWrapped *result = 0 ;
  
  {
    try {
      result = (libsumo::TraCIConnectionVectorWrapped *)new libsumo::TraCIConnectionVectorWrapped();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCIConnectionVectorWrapped >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_TraCIConnectionVectorWrapped___(void * jarg1) {
  libsumo::TraCIConnectionVectorWrapped *arg1 = (libsumo::TraCIConnectionVectorWrapped *) 0 ;
  std::shared_ptr< libsumo::TraCIConnectionVectorWrapped > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIConnectionVectorWrapped > *)jarg1;
  arg1 = (libsumo::TraCIConnectionVectorWrapped *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      (void)arg1; delete smartarg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIVehicleData_getString___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCIVehicleData *arg1 = (libsumo::TraCIVehicleData *) 0 ;
  std::shared_ptr< libsumo::TraCIVehicleData const > *smartarg1 = 0 ;
  std::string result;
  
  
  smartarg1 = (std::shared_ptr< const libsumo::TraCIVehicleData > *)jarg1;
  arg1 = (libsumo::TraCIVehicleData *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      result = ((libsumo::TraCIVehicleData const *)arg1)->getString();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIVehicleData_id_set___(void * jarg1, const char * jarg2) {
  libsumo::TraCIVehicleData *arg1 = (libsumo::TraCIVehicleData *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< libsumo::TraCIVehicleData > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIVehicleData > *)jarg1;
  arg1 = (libsumo::TraCIVehicleData *)(smartarg1 ? smartarg1->get() : 0); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (arg1) (arg1)->id = *arg2;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIVehicleData_id_get___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCIVehicleData *arg1 = (libsumo::TraCIVehicleData *) 0 ;
  std::shared_ptr< libsumo::TraCIVehicleData > *smartarg1 = 0 ;
  std::string *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIVehicleData > *)jarg1;
  arg1 = (libsumo::TraCIVehicleData *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::string *) & ((arg1)->id);
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIVehicleData_length_set___(void * jarg1, double jarg2) {
  libsumo::TraCIVehicleData *arg1 = (libsumo::TraCIVehicleData *) 0 ;
  double arg2 ;
  std::shared_ptr< libsumo::TraCIVehicleData > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIVehicleData > *)jarg1;
  arg1 = (libsumo::TraCIVehicleData *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->length = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIVehicleData_length_get___(void * jarg1) {
  double jresult ;
  libsumo::TraCIVehicleData *arg1 = (libsumo::TraCIVehicleData *) 0 ;
  std::shared_ptr< libsumo::TraCIVehicleData > *smartarg1 = 0 ;
  double result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIVehicleData > *)jarg1;
  arg1 = (libsumo::TraCIVehicleData *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double) ((arg1)->length);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIVehicleData_entryTime_set___(void * jarg1, double jarg2) {
  libsumo::TraCIVehicleData *arg1 = (libsumo::TraCIVehicleData *) 0 ;
  double arg2 ;
  std::shared_ptr< libsumo::TraCIVehicleData > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIVehicleData > *)jarg1;
  arg1 = (libsumo::TraCIVehicleData *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->entryTime = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIVehicleData_entryTime_get___(void * jarg1) {
  double jresult ;
  libsumo::TraCIVehicleData *arg1 = (libsumo::TraCIVehicleData *) 0 ;
  std::shared_ptr< libsumo::TraCIVehicleData > *smartarg1 = 0 ;
  double result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIVehicleData > *)jarg1;
  arg1 = (libsumo::TraCIVehicleData *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double) ((arg1)->entryTime);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIVehicleData_leaveTime_set___(void * jarg1, double jarg2) {
  libsumo::TraCIVehicleData *arg1 = (libsumo::TraCIVehicleData *) 0 ;
  double arg2 ;
  std::shared_ptr< libsumo::TraCIVehicleData > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIVehicleData > *)jarg1;
  arg1 = (libsumo::TraCIVehicleData *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->leaveTime = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIVehicleData_leaveTime_get___(void * jarg1) {
  double jresult ;
  libsumo::TraCIVehicleData *arg1 = (libsumo::TraCIVehicleData *) 0 ;
  std::shared_ptr< libsumo::TraCIVehicleData > *smartarg1 = 0 ;
  double result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIVehicleData > *)jarg1;
  arg1 = (libsumo::TraCIVehicleData *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double) ((arg1)->leaveTime);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIVehicleData_typeID_set___(void * jarg1, const char * jarg2) {
  libsumo::TraCIVehicleData *arg1 = (libsumo::TraCIVehicleData *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< libsumo::TraCIVehicleData > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIVehicleData > *)jarg1;
  arg1 = (libsumo::TraCIVehicleData *)(smartarg1 ? smartarg1->get() : 0); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (arg1) (arg1)->typeID = *arg2;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIVehicleData_typeID_get___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCIVehicleData *arg1 = (libsumo::TraCIVehicleData *) 0 ;
  std::shared_ptr< libsumo::TraCIVehicleData > *smartarg1 = 0 ;
  std::string *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIVehicleData > *)jarg1;
  arg1 = (libsumo::TraCIVehicleData *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::string *) & ((arg1)->typeID);
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIVehicleData___() {
  void * jresult ;
  libsumo::TraCIVehicleData *result = 0 ;
  
  {
    try {
      result = (libsumo::TraCIVehicleData *)new libsumo::TraCIVehicleData();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCIVehicleData >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_TraCIVehicleData___(void * jarg1) {
  libsumo::TraCIVehicleData *arg1 = (libsumo::TraCIVehicleData *) 0 ;
  std::shared_ptr< libsumo::TraCIVehicleData > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIVehicleData > *)jarg1;
  arg1 = (libsumo::TraCIVehicleData *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      (void)arg1; delete smartarg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIVehicleDataVectorWrapped_getString___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCIVehicleDataVectorWrapped *arg1 = (libsumo::TraCIVehicleDataVectorWrapped *) 0 ;
  std::shared_ptr< libsumo::TraCIVehicleDataVectorWrapped const > *smartarg1 = 0 ;
  std::string result;
  
  
  smartarg1 = (std::shared_ptr< const libsumo::TraCIVehicleDataVectorWrapped > *)jarg1;
  arg1 = (libsumo::TraCIVehicleDataVectorWrapped *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      result = ((libsumo::TraCIVehicleDataVectorWrapped const *)arg1)->getString();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIVehicleDataVectorWrapped_value_set___(void * jarg1, void * jarg2) {
  libsumo::TraCIVehicleDataVectorWrapped *arg1 = (libsumo::TraCIVehicleDataVectorWrapped *) 0 ;
  std::vector< libsumo::TraCIVehicleData > *arg2 = (std::vector< libsumo::TraCIVehicleData > *) 0 ;
  std::shared_ptr< libsumo::TraCIVehicleDataVectorWrapped > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIVehicleDataVectorWrapped > *)jarg1;
  arg1 = (libsumo::TraCIVehicleDataVectorWrapped *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (std::vector< libsumo::TraCIVehicleData > *)jarg2; 
  if (arg1) (arg1)->value = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIVehicleDataVectorWrapped_value_get___(void * jarg1) {
  void * jresult ;
  libsumo::TraCIVehicleDataVectorWrapped *arg1 = (libsumo::TraCIVehicleDataVectorWrapped *) 0 ;
  std::shared_ptr< libsumo::TraCIVehicleDataVectorWrapped > *smartarg1 = 0 ;
  std::vector< libsumo::TraCIVehicleData > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIVehicleDataVectorWrapped > *)jarg1;
  arg1 = (libsumo::TraCIVehicleDataVectorWrapped *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::vector< libsumo::TraCIVehicleData > *)& ((arg1)->value);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIVehicleDataVectorWrapped___() {
  void * jresult ;
  libsumo::TraCIVehicleDataVectorWrapped *result = 0 ;
  
  {
    try {
      result = (libsumo::TraCIVehicleDataVectorWrapped *)new libsumo::TraCIVehicleDataVectorWrapped();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCIVehicleDataVectorWrapped >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_TraCIVehicleDataVectorWrapped___(void * jarg1) {
  libsumo::TraCIVehicleDataVectorWrapped *arg1 = (libsumo::TraCIVehicleDataVectorWrapped *) 0 ;
  std::shared_ptr< libsumo::TraCIVehicleDataVectorWrapped > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIVehicleDataVectorWrapped > *)jarg1;
  arg1 = (libsumo::TraCIVehicleDataVectorWrapped *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      (void)arg1; delete smartarg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextTLSData_getString___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCINextTLSData *arg1 = (libsumo::TraCINextTLSData *) 0 ;
  std::shared_ptr< libsumo::TraCINextTLSData const > *smartarg1 = 0 ;
  std::string result;
  
  
  smartarg1 = (std::shared_ptr< const libsumo::TraCINextTLSData > *)jarg1;
  arg1 = (libsumo::TraCINextTLSData *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      result = ((libsumo::TraCINextTLSData const *)arg1)->getString();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextTLSData_id_set___(void * jarg1, const char * jarg2) {
  libsumo::TraCINextTLSData *arg1 = (libsumo::TraCINextTLSData *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< libsumo::TraCINextTLSData > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCINextTLSData > *)jarg1;
  arg1 = (libsumo::TraCINextTLSData *)(smartarg1 ? smartarg1->get() : 0); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (arg1) (arg1)->id = *arg2;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextTLSData_id_get___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCINextTLSData *arg1 = (libsumo::TraCINextTLSData *) 0 ;
  std::shared_ptr< libsumo::TraCINextTLSData > *smartarg1 = 0 ;
  std::string *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCINextTLSData > *)jarg1;
  arg1 = (libsumo::TraCINextTLSData *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::string *) & ((arg1)->id);
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextTLSData_tlIndex_set___(void * jarg1, int jarg2) {
  libsumo::TraCINextTLSData *arg1 = (libsumo::TraCINextTLSData *) 0 ;
  int arg2 ;
  std::shared_ptr< libsumo::TraCINextTLSData > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCINextTLSData > *)jarg1;
  arg1 = (libsumo::TraCINextTLSData *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->tlIndex = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextTLSData_tlIndex_get___(void * jarg1) {
  int jresult ;
  libsumo::TraCINextTLSData *arg1 = (libsumo::TraCINextTLSData *) 0 ;
  std::shared_ptr< libsumo::TraCINextTLSData > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCINextTLSData > *)jarg1;
  arg1 = (libsumo::TraCINextTLSData *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int) ((arg1)->tlIndex);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextTLSData_dist_set___(void * jarg1, double jarg2) {
  libsumo::TraCINextTLSData *arg1 = (libsumo::TraCINextTLSData *) 0 ;
  double arg2 ;
  std::shared_ptr< libsumo::TraCINextTLSData > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCINextTLSData > *)jarg1;
  arg1 = (libsumo::TraCINextTLSData *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->dist = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextTLSData_dist_get___(void * jarg1) {
  double jresult ;
  libsumo::TraCINextTLSData *arg1 = (libsumo::TraCINextTLSData *) 0 ;
  std::shared_ptr< libsumo::TraCINextTLSData > *smartarg1 = 0 ;
  double result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCINextTLSData > *)jarg1;
  arg1 = (libsumo::TraCINextTLSData *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double) ((arg1)->dist);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextTLSData_state_set___(void * jarg1, char jarg2) {
  libsumo::TraCINextTLSData *arg1 = (libsumo::TraCINextTLSData *) 0 ;
  char arg2 ;
  std::shared_ptr< libsumo::TraCINextTLSData > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCINextTLSData > *)jarg1;
  arg1 = (libsumo::TraCINextTLSData *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (char)jarg2; 
  if (arg1) (arg1)->state = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextTLSData_state_get___(void * jarg1) {
  char jresult ;
  libsumo::TraCINextTLSData *arg1 = (libsumo::TraCINextTLSData *) 0 ;
  std::shared_ptr< libsumo::TraCINextTLSData > *smartarg1 = 0 ;
  char result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCINextTLSData > *)jarg1;
  arg1 = (libsumo::TraCINextTLSData *)(smartarg1 ? smartarg1->get() : 0); 
  result = (char) ((arg1)->state);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCINextTLSData___() {
  void * jresult ;
  libsumo::TraCINextTLSData *result = 0 ;
  
  {
    try {
      result = (libsumo::TraCINextTLSData *)new libsumo::TraCINextTLSData();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCINextTLSData >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_TraCINextTLSData___(void * jarg1) {
  libsumo::TraCINextTLSData *arg1 = (libsumo::TraCINextTLSData *) 0 ;
  std::shared_ptr< libsumo::TraCINextTLSData > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCINextTLSData > *)jarg1;
  arg1 = (libsumo::TraCINextTLSData *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      (void)arg1; delete smartarg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextTLSDataVectorWrapped_getString___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCINextTLSDataVectorWrapped *arg1 = (libsumo::TraCINextTLSDataVectorWrapped *) 0 ;
  std::shared_ptr< libsumo::TraCINextTLSDataVectorWrapped const > *smartarg1 = 0 ;
  std::string result;
  
  
  smartarg1 = (std::shared_ptr< const libsumo::TraCINextTLSDataVectorWrapped > *)jarg1;
  arg1 = (libsumo::TraCINextTLSDataVectorWrapped *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      result = ((libsumo::TraCINextTLSDataVectorWrapped const *)arg1)->getString();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextTLSDataVectorWrapped_value_set___(void * jarg1, void * jarg2) {
  libsumo::TraCINextTLSDataVectorWrapped *arg1 = (libsumo::TraCINextTLSDataVectorWrapped *) 0 ;
  std::vector< libsumo::TraCINextTLSData > *arg2 = (std::vector< libsumo::TraCINextTLSData > *) 0 ;
  std::shared_ptr< libsumo::TraCINextTLSDataVectorWrapped > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCINextTLSDataVectorWrapped > *)jarg1;
  arg1 = (libsumo::TraCINextTLSDataVectorWrapped *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (std::vector< libsumo::TraCINextTLSData > *)jarg2; 
  if (arg1) (arg1)->value = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextTLSDataVectorWrapped_value_get___(void * jarg1) {
  void * jresult ;
  libsumo::TraCINextTLSDataVectorWrapped *arg1 = (libsumo::TraCINextTLSDataVectorWrapped *) 0 ;
  std::shared_ptr< libsumo::TraCINextTLSDataVectorWrapped > *smartarg1 = 0 ;
  std::vector< libsumo::TraCINextTLSData > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCINextTLSDataVectorWrapped > *)jarg1;
  arg1 = (libsumo::TraCINextTLSDataVectorWrapped *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::vector< libsumo::TraCINextTLSData > *)& ((arg1)->value);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCINextTLSDataVectorWrapped___() {
  void * jresult ;
  libsumo::TraCINextTLSDataVectorWrapped *result = 0 ;
  
  {
    try {
      result = (libsumo::TraCINextTLSDataVectorWrapped *)new libsumo::TraCINextTLSDataVectorWrapped();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCINextTLSDataVectorWrapped >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_TraCINextTLSDataVectorWrapped___(void * jarg1) {
  libsumo::TraCINextTLSDataVectorWrapped *arg1 = (libsumo::TraCINextTLSDataVectorWrapped *) 0 ;
  std::shared_ptr< libsumo::TraCINextTLSDataVectorWrapped > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCINextTLSDataVectorWrapped > *)jarg1;
  arg1 = (libsumo::TraCINextTLSDataVectorWrapped *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      (void)arg1; delete smartarg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCINextStopData__SWIG_0___(const char * jarg1, double jarg2, double jarg3, const char * jarg4, int jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10, const char * jarg11, const char * jarg12, const char * jarg13, const char * jarg14, const char * jarg15, double jarg16) {
  void * jresult ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  std::string *arg4 = 0 ;
  int arg5 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  double arg9 ;
  double arg10 ;
  std::string *arg11 = 0 ;
  std::string *arg12 = 0 ;
  std::string *arg13 = 0 ;
  std::string *arg14 = 0 ;
  std::string *arg15 = 0 ;
  double arg16 ;
  libsumo::TraCINextStopData *result = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  if (!jarg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg4_str(jarg4);
  arg4 = &arg4_str; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  arg8 = (double)jarg8; 
  arg9 = (double)jarg9; 
  arg10 = (double)jarg10; 
  if (!jarg11) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg11_str(jarg11);
  arg11 = &arg11_str; 
  if (!jarg12) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg12_str(jarg12);
  arg12 = &arg12_str; 
  if (!jarg13) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg13_str(jarg13);
  arg13 = &arg13_str; 
  if (!jarg14) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg14_str(jarg14);
  arg14 = &arg14_str; 
  if (!jarg15) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg15_str(jarg15);
  arg15 = &arg15_str; 
  arg16 = (double)jarg16; 
  {
    try {
      result = (libsumo::TraCINextStopData *)new libsumo::TraCINextStopData((std::string const &)*arg1,arg2,arg3,(std::string const &)*arg4,arg5,arg6,arg7,arg8,arg9,arg10,(std::string const &)*arg11,(std::string const &)*arg12,(std::string const &)*arg13,(std::string const &)*arg14,(std::string const &)*arg15,arg16);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCINextStopData >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCINextStopData__SWIG_1___(const char * jarg1, double jarg2, double jarg3, const char * jarg4, int jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10, const char * jarg11, const char * jarg12, const char * jarg13, const char * jarg14, const char * jarg15) {
  void * jresult ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  std::string *arg4 = 0 ;
  int arg5 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  double arg9 ;
  double arg10 ;
  std::string *arg11 = 0 ;
  std::string *arg12 = 0 ;
  std::string *arg13 = 0 ;
  std::string *arg14 = 0 ;
  std::string *arg15 = 0 ;
  libsumo::TraCINextStopData *result = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  if (!jarg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg4_str(jarg4);
  arg4 = &arg4_str; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  arg8 = (double)jarg8; 
  arg9 = (double)jarg9; 
  arg10 = (double)jarg10; 
  if (!jarg11) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg11_str(jarg11);
  arg11 = &arg11_str; 
  if (!jarg12) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg12_str(jarg12);
  arg12 = &arg12_str; 
  if (!jarg13) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg13_str(jarg13);
  arg13 = &arg13_str; 
  if (!jarg14) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg14_str(jarg14);
  arg14 = &arg14_str; 
  if (!jarg15) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg15_str(jarg15);
  arg15 = &arg15_str; 
  {
    try {
      result = (libsumo::TraCINextStopData *)new libsumo::TraCINextStopData((std::string const &)*arg1,arg2,arg3,(std::string const &)*arg4,arg5,arg6,arg7,arg8,arg9,arg10,(std::string const &)*arg11,(std::string const &)*arg12,(std::string const &)*arg13,(std::string const &)*arg14,(std::string const &)*arg15);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCINextStopData >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCINextStopData__SWIG_2___(const char * jarg1, double jarg2, double jarg3, const char * jarg4, int jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10, const char * jarg11, const char * jarg12, const char * jarg13, const char * jarg14) {
  void * jresult ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  std::string *arg4 = 0 ;
  int arg5 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  double arg9 ;
  double arg10 ;
  std::string *arg11 = 0 ;
  std::string *arg12 = 0 ;
  std::string *arg13 = 0 ;
  std::string *arg14 = 0 ;
  libsumo::TraCINextStopData *result = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  if (!jarg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg4_str(jarg4);
  arg4 = &arg4_str; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  arg8 = (double)jarg8; 
  arg9 = (double)jarg9; 
  arg10 = (double)jarg10; 
  if (!jarg11) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg11_str(jarg11);
  arg11 = &arg11_str; 
  if (!jarg12) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg12_str(jarg12);
  arg12 = &arg12_str; 
  if (!jarg13) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg13_str(jarg13);
  arg13 = &arg13_str; 
  if (!jarg14) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg14_str(jarg14);
  arg14 = &arg14_str; 
  {
    try {
      result = (libsumo::TraCINextStopData *)new libsumo::TraCINextStopData((std::string const &)*arg1,arg2,arg3,(std::string const &)*arg4,arg5,arg6,arg7,arg8,arg9,arg10,(std::string const &)*arg11,(std::string const &)*arg12,(std::string const &)*arg13,(std::string const &)*arg14);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCINextStopData >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCINextStopData__SWIG_3___(const char * jarg1, double jarg2, double jarg3, const char * jarg4, int jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10, const char * jarg11, const char * jarg12, const char * jarg13) {
  void * jresult ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  std::string *arg4 = 0 ;
  int arg5 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  double arg9 ;
  double arg10 ;
  std::string *arg11 = 0 ;
  std::string *arg12 = 0 ;
  std::string *arg13 = 0 ;
  libsumo::TraCINextStopData *result = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  if (!jarg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg4_str(jarg4);
  arg4 = &arg4_str; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  arg8 = (double)jarg8; 
  arg9 = (double)jarg9; 
  arg10 = (double)jarg10; 
  if (!jarg11) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg11_str(jarg11);
  arg11 = &arg11_str; 
  if (!jarg12) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg12_str(jarg12);
  arg12 = &arg12_str; 
  if (!jarg13) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg13_str(jarg13);
  arg13 = &arg13_str; 
  {
    try {
      result = (libsumo::TraCINextStopData *)new libsumo::TraCINextStopData((std::string const &)*arg1,arg2,arg3,(std::string const &)*arg4,arg5,arg6,arg7,arg8,arg9,arg10,(std::string const &)*arg11,(std::string const &)*arg12,(std::string const &)*arg13);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCINextStopData >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCINextStopData__SWIG_4___(const char * jarg1, double jarg2, double jarg3, const char * jarg4, int jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10, const char * jarg11, const char * jarg12) {
  void * jresult ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  std::string *arg4 = 0 ;
  int arg5 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  double arg9 ;
  double arg10 ;
  std::string *arg11 = 0 ;
  std::string *arg12 = 0 ;
  libsumo::TraCINextStopData *result = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  if (!jarg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg4_str(jarg4);
  arg4 = &arg4_str; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  arg8 = (double)jarg8; 
  arg9 = (double)jarg9; 
  arg10 = (double)jarg10; 
  if (!jarg11) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg11_str(jarg11);
  arg11 = &arg11_str; 
  if (!jarg12) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg12_str(jarg12);
  arg12 = &arg12_str; 
  {
    try {
      result = (libsumo::TraCINextStopData *)new libsumo::TraCINextStopData((std::string const &)*arg1,arg2,arg3,(std::string const &)*arg4,arg5,arg6,arg7,arg8,arg9,arg10,(std::string const &)*arg11,(std::string const &)*arg12);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCINextStopData >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCINextStopData__SWIG_5___(const char * jarg1, double jarg2, double jarg3, const char * jarg4, int jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10, const char * jarg11) {
  void * jresult ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  std::string *arg4 = 0 ;
  int arg5 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  double arg9 ;
  double arg10 ;
  std::string *arg11 = 0 ;
  libsumo::TraCINextStopData *result = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  if (!jarg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg4_str(jarg4);
  arg4 = &arg4_str; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  arg8 = (double)jarg8; 
  arg9 = (double)jarg9; 
  arg10 = (double)jarg10; 
  if (!jarg11) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg11_str(jarg11);
  arg11 = &arg11_str; 
  {
    try {
      result = (libsumo::TraCINextStopData *)new libsumo::TraCINextStopData((std::string const &)*arg1,arg2,arg3,(std::string const &)*arg4,arg5,arg6,arg7,arg8,arg9,arg10,(std::string const &)*arg11);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCINextStopData >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCINextStopData__SWIG_6___(const char * jarg1, double jarg2, double jarg3, const char * jarg4, int jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10) {
  void * jresult ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  std::string *arg4 = 0 ;
  int arg5 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  double arg9 ;
  double arg10 ;
  libsumo::TraCINextStopData *result = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  if (!jarg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg4_str(jarg4);
  arg4 = &arg4_str; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  arg8 = (double)jarg8; 
  arg9 = (double)jarg9; 
  arg10 = (double)jarg10; 
  {
    try {
      result = (libsumo::TraCINextStopData *)new libsumo::TraCINextStopData((std::string const &)*arg1,arg2,arg3,(std::string const &)*arg4,arg5,arg6,arg7,arg8,arg9,arg10);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCINextStopData >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCINextStopData__SWIG_7___(const char * jarg1, double jarg2, double jarg3, const char * jarg4, int jarg5, double jarg6, double jarg7, double jarg8, double jarg9) {
  void * jresult ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  std::string *arg4 = 0 ;
  int arg5 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  double arg9 ;
  libsumo::TraCINextStopData *result = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  if (!jarg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg4_str(jarg4);
  arg4 = &arg4_str; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  arg8 = (double)jarg8; 
  arg9 = (double)jarg9; 
  {
    try {
      result = (libsumo::TraCINextStopData *)new libsumo::TraCINextStopData((std::string const &)*arg1,arg2,arg3,(std::string const &)*arg4,arg5,arg6,arg7,arg8,arg9);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCINextStopData >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCINextStopData__SWIG_8___(const char * jarg1, double jarg2, double jarg3, const char * jarg4, int jarg5, double jarg6, double jarg7, double jarg8) {
  void * jresult ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  std::string *arg4 = 0 ;
  int arg5 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  libsumo::TraCINextStopData *result = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  if (!jarg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg4_str(jarg4);
  arg4 = &arg4_str; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  arg8 = (double)jarg8; 
  {
    try {
      result = (libsumo::TraCINextStopData *)new libsumo::TraCINextStopData((std::string const &)*arg1,arg2,arg3,(std::string const &)*arg4,arg5,arg6,arg7,arg8);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCINextStopData >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCINextStopData__SWIG_9___(const char * jarg1, double jarg2, double jarg3, const char * jarg4, int jarg5, double jarg6, double jarg7) {
  void * jresult ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  std::string *arg4 = 0 ;
  int arg5 ;
  double arg6 ;
  double arg7 ;
  libsumo::TraCINextStopData *result = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  if (!jarg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg4_str(jarg4);
  arg4 = &arg4_str; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  {
    try {
      result = (libsumo::TraCINextStopData *)new libsumo::TraCINextStopData((std::string const &)*arg1,arg2,arg3,(std::string const &)*arg4,arg5,arg6,arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCINextStopData >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCINextStopData__SWIG_10___(const char * jarg1, double jarg2, double jarg3, const char * jarg4, int jarg5, double jarg6) {
  void * jresult ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  std::string *arg4 = 0 ;
  int arg5 ;
  double arg6 ;
  libsumo::TraCINextStopData *result = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  if (!jarg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg4_str(jarg4);
  arg4 = &arg4_str; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      result = (libsumo::TraCINextStopData *)new libsumo::TraCINextStopData((std::string const &)*arg1,arg2,arg3,(std::string const &)*arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCINextStopData >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCINextStopData__SWIG_11___(const char * jarg1, double jarg2, double jarg3, const char * jarg4, int jarg5) {
  void * jresult ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  std::string *arg4 = 0 ;
  int arg5 ;
  libsumo::TraCINextStopData *result = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  if (!jarg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg4_str(jarg4);
  arg4 = &arg4_str; 
  arg5 = (int)jarg5; 
  {
    try {
      result = (libsumo::TraCINextStopData *)new libsumo::TraCINextStopData((std::string const &)*arg1,arg2,arg3,(std::string const &)*arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCINextStopData >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCINextStopData__SWIG_12___(const char * jarg1, double jarg2, double jarg3, const char * jarg4) {
  void * jresult ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  std::string *arg4 = 0 ;
  libsumo::TraCINextStopData *result = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  if (!jarg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg4_str(jarg4);
  arg4 = &arg4_str; 
  {
    try {
      result = (libsumo::TraCINextStopData *)new libsumo::TraCINextStopData((std::string const &)*arg1,arg2,arg3,(std::string const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCINextStopData >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCINextStopData__SWIG_13___(const char * jarg1, double jarg2, double jarg3) {
  void * jresult ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  libsumo::TraCINextStopData *result = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      result = (libsumo::TraCINextStopData *)new libsumo::TraCINextStopData((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCINextStopData >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCINextStopData__SWIG_14___(const char * jarg1, double jarg2) {
  void * jresult ;
  std::string *arg1 = 0 ;
  double arg2 ;
  libsumo::TraCINextStopData *result = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      result = (libsumo::TraCINextStopData *)new libsumo::TraCINextStopData((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCINextStopData >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCINextStopData__SWIG_15___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::TraCINextStopData *result = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (libsumo::TraCINextStopData *)new libsumo::TraCINextStopData((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCINextStopData >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCINextStopData__SWIG_16___() {
  void * jresult ;
  libsumo::TraCINextStopData *result = 0 ;
  
  {
    try {
      result = (libsumo::TraCINextStopData *)new libsumo::TraCINextStopData();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCINextStopData >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextStopData_getString___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  std::shared_ptr< libsumo::TraCINextStopData const > *smartarg1 = 0 ;
  std::string result;
  
  
  smartarg1 = (std::shared_ptr< const libsumo::TraCINextStopData > *)jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      result = ((libsumo::TraCINextStopData const *)arg1)->getString();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextStopData_lane_set___(void * jarg1, const char * jarg2) {
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCINextStopData > *)jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (arg1) (arg1)->lane = *arg2;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextStopData_lane_get___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  std::string *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCINextStopData > *)jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::string *) & ((arg1)->lane);
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextStopData_startPos_set___(void * jarg1, double jarg2) {
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  double arg2 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCINextStopData > *)jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->startPos = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextStopData_startPos_get___(void * jarg1) {
  double jresult ;
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  double result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCINextStopData > *)jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double) ((arg1)->startPos);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextStopData_endPos_set___(void * jarg1, double jarg2) {
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  double arg2 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCINextStopData > *)jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->endPos = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextStopData_endPos_get___(void * jarg1) {
  double jresult ;
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  double result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCINextStopData > *)jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double) ((arg1)->endPos);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextStopData_stoppingPlaceID_set___(void * jarg1, const char * jarg2) {
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCINextStopData > *)jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (arg1) (arg1)->stoppingPlaceID = *arg2;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextStopData_stoppingPlaceID_get___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  std::string *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCINextStopData > *)jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::string *) & ((arg1)->stoppingPlaceID);
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextStopData_stopFlags_set___(void * jarg1, int jarg2) {
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  int arg2 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCINextStopData > *)jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->stopFlags = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextStopData_stopFlags_get___(void * jarg1) {
  int jresult ;
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCINextStopData > *)jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int) ((arg1)->stopFlags);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextStopData_duration_set___(void * jarg1, double jarg2) {
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  double arg2 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCINextStopData > *)jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->duration = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextStopData_duration_get___(void * jarg1) {
  double jresult ;
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  double result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCINextStopData > *)jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double) ((arg1)->duration);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextStopData_until_set___(void * jarg1, double jarg2) {
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  double arg2 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCINextStopData > *)jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->until = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextStopData_until_get___(void * jarg1) {
  double jresult ;
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  double result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCINextStopData > *)jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double) ((arg1)->until);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextStopData_intendedArrival_set___(void * jarg1, double jarg2) {
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  double arg2 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCINextStopData > *)jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->intendedArrival = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextStopData_intendedArrival_get___(void * jarg1) {
  double jresult ;
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  double result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCINextStopData > *)jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double) ((arg1)->intendedArrival);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextStopData_arrival_set___(void * jarg1, double jarg2) {
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  double arg2 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCINextStopData > *)jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->arrival = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextStopData_arrival_get___(void * jarg1) {
  double jresult ;
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  double result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCINextStopData > *)jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double) ((arg1)->arrival);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextStopData_depart_set___(void * jarg1, double jarg2) {
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  double arg2 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCINextStopData > *)jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->depart = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextStopData_depart_get___(void * jarg1) {
  double jresult ;
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  double result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCINextStopData > *)jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double) ((arg1)->depart);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextStopData_split_set___(void * jarg1, const char * jarg2) {
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCINextStopData > *)jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (arg1) (arg1)->split = *arg2;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextStopData_split_get___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  std::string *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCINextStopData > *)jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::string *) & ((arg1)->split);
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextStopData_join_set___(void * jarg1, const char * jarg2) {
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCINextStopData > *)jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (arg1) (arg1)->join = *arg2;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextStopData_join_get___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  std::string *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCINextStopData > *)jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::string *) & ((arg1)->join);
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextStopData_actType_set___(void * jarg1, const char * jarg2) {
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCINextStopData > *)jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (arg1) (arg1)->actType = *arg2;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextStopData_actType_get___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  std::string *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCINextStopData > *)jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::string *) & ((arg1)->actType);
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextStopData_tripId_set___(void * jarg1, const char * jarg2) {
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCINextStopData > *)jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (arg1) (arg1)->tripId = *arg2;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextStopData_tripId_get___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  std::string *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCINextStopData > *)jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::string *) & ((arg1)->tripId);
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextStopData_line_set___(void * jarg1, const char * jarg2) {
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCINextStopData > *)jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (arg1) (arg1)->line = *arg2;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextStopData_line_get___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  std::string *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCINextStopData > *)jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::string *) & ((arg1)->line);
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextStopData_speed_set___(void * jarg1, double jarg2) {
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  double arg2 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCINextStopData > *)jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->speed = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextStopData_speed_get___(void * jarg1) {
  double jresult ;
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  double result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCINextStopData > *)jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double) ((arg1)->speed);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_TraCINextStopData___(void * jarg1) {
  libsumo::TraCINextStopData *arg1 = (libsumo::TraCINextStopData *) 0 ;
  std::shared_ptr< libsumo::TraCINextStopData > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCINextStopData > *)jarg1;
  arg1 = (libsumo::TraCINextStopData *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      (void)arg1; delete smartarg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextStopDataVectorWrapped_getString___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCINextStopDataVectorWrapped *arg1 = (libsumo::TraCINextStopDataVectorWrapped *) 0 ;
  std::shared_ptr< libsumo::TraCINextStopDataVectorWrapped const > *smartarg1 = 0 ;
  std::string result;
  
  
  smartarg1 = (std::shared_ptr< const libsumo::TraCINextStopDataVectorWrapped > *)jarg1;
  arg1 = (libsumo::TraCINextStopDataVectorWrapped *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      result = ((libsumo::TraCINextStopDataVectorWrapped const *)arg1)->getString();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextStopDataVectorWrapped_value_set___(void * jarg1, void * jarg2) {
  libsumo::TraCINextStopDataVectorWrapped *arg1 = (libsumo::TraCINextStopDataVectorWrapped *) 0 ;
  std::vector< libsumo::TraCINextStopData > *arg2 = (std::vector< libsumo::TraCINextStopData > *) 0 ;
  std::shared_ptr< libsumo::TraCINextStopDataVectorWrapped > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCINextStopDataVectorWrapped > *)jarg1;
  arg1 = (libsumo::TraCINextStopDataVectorWrapped *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (std::vector< libsumo::TraCINextStopData > *)jarg2; 
  if (arg1) (arg1)->value = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextStopDataVectorWrapped_value_get___(void * jarg1) {
  void * jresult ;
  libsumo::TraCINextStopDataVectorWrapped *arg1 = (libsumo::TraCINextStopDataVectorWrapped *) 0 ;
  std::shared_ptr< libsumo::TraCINextStopDataVectorWrapped > *smartarg1 = 0 ;
  std::vector< libsumo::TraCINextStopData > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCINextStopDataVectorWrapped > *)jarg1;
  arg1 = (libsumo::TraCINextStopDataVectorWrapped *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::vector< libsumo::TraCINextStopData > *)& ((arg1)->value);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCINextStopDataVectorWrapped___() {
  void * jresult ;
  libsumo::TraCINextStopDataVectorWrapped *result = 0 ;
  
  {
    try {
      result = (libsumo::TraCINextStopDataVectorWrapped *)new libsumo::TraCINextStopDataVectorWrapped();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCINextStopDataVectorWrapped >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_TraCINextStopDataVectorWrapped___(void * jarg1) {
  libsumo::TraCINextStopDataVectorWrapped *arg1 = (libsumo::TraCINextStopDataVectorWrapped *) 0 ;
  std::shared_ptr< libsumo::TraCINextStopDataVectorWrapped > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCINextStopDataVectorWrapped > *)jarg1;
  arg1 = (libsumo::TraCINextStopDataVectorWrapped *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      (void)arg1; delete smartarg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIBestLanesData_getString___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCIBestLanesData *arg1 = (libsumo::TraCIBestLanesData *) 0 ;
  std::shared_ptr< libsumo::TraCIBestLanesData const > *smartarg1 = 0 ;
  std::string result;
  
  
  smartarg1 = (std::shared_ptr< const libsumo::TraCIBestLanesData > *)jarg1;
  arg1 = (libsumo::TraCIBestLanesData *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      result = ((libsumo::TraCIBestLanesData const *)arg1)->getString();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIBestLanesData_laneID_set___(void * jarg1, const char * jarg2) {
  libsumo::TraCIBestLanesData *arg1 = (libsumo::TraCIBestLanesData *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< libsumo::TraCIBestLanesData > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIBestLanesData > *)jarg1;
  arg1 = (libsumo::TraCIBestLanesData *)(smartarg1 ? smartarg1->get() : 0); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (arg1) (arg1)->laneID = *arg2;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIBestLanesData_laneID_get___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCIBestLanesData *arg1 = (libsumo::TraCIBestLanesData *) 0 ;
  std::shared_ptr< libsumo::TraCIBestLanesData > *smartarg1 = 0 ;
  std::string *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIBestLanesData > *)jarg1;
  arg1 = (libsumo::TraCIBestLanesData *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::string *) & ((arg1)->laneID);
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIBestLanesData_length_set___(void * jarg1, double jarg2) {
  libsumo::TraCIBestLanesData *arg1 = (libsumo::TraCIBestLanesData *) 0 ;
  double arg2 ;
  std::shared_ptr< libsumo::TraCIBestLanesData > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIBestLanesData > *)jarg1;
  arg1 = (libsumo::TraCIBestLanesData *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->length = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIBestLanesData_length_get___(void * jarg1) {
  double jresult ;
  libsumo::TraCIBestLanesData *arg1 = (libsumo::TraCIBestLanesData *) 0 ;
  std::shared_ptr< libsumo::TraCIBestLanesData > *smartarg1 = 0 ;
  double result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIBestLanesData > *)jarg1;
  arg1 = (libsumo::TraCIBestLanesData *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double) ((arg1)->length);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIBestLanesData_occupation_set___(void * jarg1, double jarg2) {
  libsumo::TraCIBestLanesData *arg1 = (libsumo::TraCIBestLanesData *) 0 ;
  double arg2 ;
  std::shared_ptr< libsumo::TraCIBestLanesData > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIBestLanesData > *)jarg1;
  arg1 = (libsumo::TraCIBestLanesData *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->occupation = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIBestLanesData_occupation_get___(void * jarg1) {
  double jresult ;
  libsumo::TraCIBestLanesData *arg1 = (libsumo::TraCIBestLanesData *) 0 ;
  std::shared_ptr< libsumo::TraCIBestLanesData > *smartarg1 = 0 ;
  double result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIBestLanesData > *)jarg1;
  arg1 = (libsumo::TraCIBestLanesData *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double) ((arg1)->occupation);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIBestLanesData_bestLaneOffset_set___(void * jarg1, int jarg2) {
  libsumo::TraCIBestLanesData *arg1 = (libsumo::TraCIBestLanesData *) 0 ;
  int arg2 ;
  std::shared_ptr< libsumo::TraCIBestLanesData > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIBestLanesData > *)jarg1;
  arg1 = (libsumo::TraCIBestLanesData *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->bestLaneOffset = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIBestLanesData_bestLaneOffset_get___(void * jarg1) {
  int jresult ;
  libsumo::TraCIBestLanesData *arg1 = (libsumo::TraCIBestLanesData *) 0 ;
  std::shared_ptr< libsumo::TraCIBestLanesData > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIBestLanesData > *)jarg1;
  arg1 = (libsumo::TraCIBestLanesData *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int) ((arg1)->bestLaneOffset);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIBestLanesData_allowsContinuation_set___(void * jarg1, unsigned int jarg2) {
  libsumo::TraCIBestLanesData *arg1 = (libsumo::TraCIBestLanesData *) 0 ;
  bool arg2 ;
  std::shared_ptr< libsumo::TraCIBestLanesData > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIBestLanesData > *)jarg1;
  arg1 = (libsumo::TraCIBestLanesData *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->allowsContinuation = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIBestLanesData_allowsContinuation_get___(void * jarg1) {
  unsigned int jresult ;
  libsumo::TraCIBestLanesData *arg1 = (libsumo::TraCIBestLanesData *) 0 ;
  std::shared_ptr< libsumo::TraCIBestLanesData > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIBestLanesData > *)jarg1;
  arg1 = (libsumo::TraCIBestLanesData *)(smartarg1 ? smartarg1->get() : 0); 
  result = (bool) ((arg1)->allowsContinuation);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIBestLanesData_continuationLanes_set___(void * jarg1, void * jarg2) {
  libsumo::TraCIBestLanesData *arg1 = (libsumo::TraCIBestLanesData *) 0 ;
  std::vector< std::string > *arg2 = (std::vector< std::string > *) 0 ;
  std::shared_ptr< libsumo::TraCIBestLanesData > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIBestLanesData > *)jarg1;
  arg1 = (libsumo::TraCIBestLanesData *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (std::vector< std::string > *)jarg2; 
  if (arg1) (arg1)->continuationLanes = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIBestLanesData_continuationLanes_get___(void * jarg1) {
  void * jresult ;
  libsumo::TraCIBestLanesData *arg1 = (libsumo::TraCIBestLanesData *) 0 ;
  std::shared_ptr< libsumo::TraCIBestLanesData > *smartarg1 = 0 ;
  std::vector< std::string > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIBestLanesData > *)jarg1;
  arg1 = (libsumo::TraCIBestLanesData *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::vector< std::string > *)& ((arg1)->continuationLanes);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIBestLanesData___() {
  void * jresult ;
  libsumo::TraCIBestLanesData *result = 0 ;
  
  {
    try {
      result = (libsumo::TraCIBestLanesData *)new libsumo::TraCIBestLanesData();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCIBestLanesData >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_TraCIBestLanesData___(void * jarg1) {
  libsumo::TraCIBestLanesData *arg1 = (libsumo::TraCIBestLanesData *) 0 ;
  std::shared_ptr< libsumo::TraCIBestLanesData > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIBestLanesData > *)jarg1;
  arg1 = (libsumo::TraCIBestLanesData *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      (void)arg1; delete smartarg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIBestLanesDataVectorWrapped_getString___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCIBestLanesDataVectorWrapped *arg1 = (libsumo::TraCIBestLanesDataVectorWrapped *) 0 ;
  std::shared_ptr< libsumo::TraCIBestLanesDataVectorWrapped const > *smartarg1 = 0 ;
  std::string result;
  
  
  smartarg1 = (std::shared_ptr< const libsumo::TraCIBestLanesDataVectorWrapped > *)jarg1;
  arg1 = (libsumo::TraCIBestLanesDataVectorWrapped *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      result = ((libsumo::TraCIBestLanesDataVectorWrapped const *)arg1)->getString();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIBestLanesDataVectorWrapped_value_set___(void * jarg1, void * jarg2) {
  libsumo::TraCIBestLanesDataVectorWrapped *arg1 = (libsumo::TraCIBestLanesDataVectorWrapped *) 0 ;
  std::vector< libsumo::TraCIBestLanesData > *arg2 = (std::vector< libsumo::TraCIBestLanesData > *) 0 ;
  std::shared_ptr< libsumo::TraCIBestLanesDataVectorWrapped > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIBestLanesDataVectorWrapped > *)jarg1;
  arg1 = (libsumo::TraCIBestLanesDataVectorWrapped *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (std::vector< libsumo::TraCIBestLanesData > *)jarg2; 
  if (arg1) (arg1)->value = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIBestLanesDataVectorWrapped_value_get___(void * jarg1) {
  void * jresult ;
  libsumo::TraCIBestLanesDataVectorWrapped *arg1 = (libsumo::TraCIBestLanesDataVectorWrapped *) 0 ;
  std::shared_ptr< libsumo::TraCIBestLanesDataVectorWrapped > *smartarg1 = 0 ;
  std::vector< libsumo::TraCIBestLanesData > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIBestLanesDataVectorWrapped > *)jarg1;
  arg1 = (libsumo::TraCIBestLanesDataVectorWrapped *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::vector< libsumo::TraCIBestLanesData > *)& ((arg1)->value);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIBestLanesDataVectorWrapped___() {
  void * jresult ;
  libsumo::TraCIBestLanesDataVectorWrapped *result = 0 ;
  
  {
    try {
      result = (libsumo::TraCIBestLanesDataVectorWrapped *)new libsumo::TraCIBestLanesDataVectorWrapped();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCIBestLanesDataVectorWrapped >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_TraCIBestLanesDataVectorWrapped___(void * jarg1) {
  libsumo::TraCIBestLanesDataVectorWrapped *arg1 = (libsumo::TraCIBestLanesDataVectorWrapped *) 0 ;
  std::shared_ptr< libsumo::TraCIBestLanesDataVectorWrapped > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIBestLanesDataVectorWrapped > *)jarg1;
  arg1 = (libsumo::TraCIBestLanesDataVectorWrapped *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      (void)arg1; delete smartarg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIStage__SWIG_0___(int jarg1, const char * jarg2, const char * jarg3, const char * jarg4, void * jarg5, double jarg6, double jarg7, double jarg8, const char * jarg9, double jarg10, double jarg11, double jarg12, const char * jarg13) {
  void * jresult ;
  int arg1 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::vector< std::string > *arg5 = 0 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  std::string *arg9 = 0 ;
  double arg10 ;
  double arg11 ;
  double arg12 ;
  std::string *arg13 = 0 ;
  libsumo::TraCIStage *result = 0 ;
  
  arg1 = (int)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  if (!jarg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg4_str(jarg4);
  arg4 = &arg4_str; 
  arg5 = (std::vector< std::string > *)jarg5;
  if (!arg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::string > const & is null", 0);
    return 0;
  } 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  arg8 = (double)jarg8; 
  if (!jarg9) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg9_str(jarg9);
  arg9 = &arg9_str; 
  arg10 = (double)jarg10; 
  arg11 = (double)jarg11; 
  arg12 = (double)jarg12; 
  if (!jarg13) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg13_str(jarg13);
  arg13 = &arg13_str; 
  {
    try {
      result = (libsumo::TraCIStage *)new libsumo::TraCIStage(arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::vector< std::string > const &)*arg5,arg6,arg7,arg8,(std::string const &)*arg9,arg10,arg11,arg12,(std::string const &)*arg13);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCIStage >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIStage__SWIG_1___(int jarg1, const char * jarg2, const char * jarg3, const char * jarg4, void * jarg5, double jarg6, double jarg7, double jarg8, const char * jarg9, double jarg10, double jarg11, double jarg12) {
  void * jresult ;
  int arg1 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::vector< std::string > *arg5 = 0 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  std::string *arg9 = 0 ;
  double arg10 ;
  double arg11 ;
  double arg12 ;
  libsumo::TraCIStage *result = 0 ;
  
  arg1 = (int)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  if (!jarg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg4_str(jarg4);
  arg4 = &arg4_str; 
  arg5 = (std::vector< std::string > *)jarg5;
  if (!arg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::string > const & is null", 0);
    return 0;
  } 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  arg8 = (double)jarg8; 
  if (!jarg9) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg9_str(jarg9);
  arg9 = &arg9_str; 
  arg10 = (double)jarg10; 
  arg11 = (double)jarg11; 
  arg12 = (double)jarg12; 
  {
    try {
      result = (libsumo::TraCIStage *)new libsumo::TraCIStage(arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::vector< std::string > const &)*arg5,arg6,arg7,arg8,(std::string const &)*arg9,arg10,arg11,arg12);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCIStage >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIStage__SWIG_2___(int jarg1, const char * jarg2, const char * jarg3, const char * jarg4, void * jarg5, double jarg6, double jarg7, double jarg8, const char * jarg9, double jarg10, double jarg11) {
  void * jresult ;
  int arg1 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::vector< std::string > *arg5 = 0 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  std::string *arg9 = 0 ;
  double arg10 ;
  double arg11 ;
  libsumo::TraCIStage *result = 0 ;
  
  arg1 = (int)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  if (!jarg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg4_str(jarg4);
  arg4 = &arg4_str; 
  arg5 = (std::vector< std::string > *)jarg5;
  if (!arg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::string > const & is null", 0);
    return 0;
  } 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  arg8 = (double)jarg8; 
  if (!jarg9) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg9_str(jarg9);
  arg9 = &arg9_str; 
  arg10 = (double)jarg10; 
  arg11 = (double)jarg11; 
  {
    try {
      result = (libsumo::TraCIStage *)new libsumo::TraCIStage(arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::vector< std::string > const &)*arg5,arg6,arg7,arg8,(std::string const &)*arg9,arg10,arg11);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCIStage >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIStage__SWIG_3___(int jarg1, const char * jarg2, const char * jarg3, const char * jarg4, void * jarg5, double jarg6, double jarg7, double jarg8, const char * jarg9, double jarg10) {
  void * jresult ;
  int arg1 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::vector< std::string > *arg5 = 0 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  std::string *arg9 = 0 ;
  double arg10 ;
  libsumo::TraCIStage *result = 0 ;
  
  arg1 = (int)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  if (!jarg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg4_str(jarg4);
  arg4 = &arg4_str; 
  arg5 = (std::vector< std::string > *)jarg5;
  if (!arg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::string > const & is null", 0);
    return 0;
  } 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  arg8 = (double)jarg8; 
  if (!jarg9) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg9_str(jarg9);
  arg9 = &arg9_str; 
  arg10 = (double)jarg10; 
  {
    try {
      result = (libsumo::TraCIStage *)new libsumo::TraCIStage(arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::vector< std::string > const &)*arg5,arg6,arg7,arg8,(std::string const &)*arg9,arg10);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCIStage >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIStage__SWIG_4___(int jarg1, const char * jarg2, const char * jarg3, const char * jarg4, void * jarg5, double jarg6, double jarg7, double jarg8, const char * jarg9) {
  void * jresult ;
  int arg1 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::vector< std::string > *arg5 = 0 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  std::string *arg9 = 0 ;
  libsumo::TraCIStage *result = 0 ;
  
  arg1 = (int)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  if (!jarg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg4_str(jarg4);
  arg4 = &arg4_str; 
  arg5 = (std::vector< std::string > *)jarg5;
  if (!arg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::string > const & is null", 0);
    return 0;
  } 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  arg8 = (double)jarg8; 
  if (!jarg9) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg9_str(jarg9);
  arg9 = &arg9_str; 
  {
    try {
      result = (libsumo::TraCIStage *)new libsumo::TraCIStage(arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::vector< std::string > const &)*arg5,arg6,arg7,arg8,(std::string const &)*arg9);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCIStage >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIStage__SWIG_5___(int jarg1, const char * jarg2, const char * jarg3, const char * jarg4, void * jarg5, double jarg6, double jarg7, double jarg8) {
  void * jresult ;
  int arg1 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::vector< std::string > *arg5 = 0 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  libsumo::TraCIStage *result = 0 ;
  
  arg1 = (int)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  if (!jarg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg4_str(jarg4);
  arg4 = &arg4_str; 
  arg5 = (std::vector< std::string > *)jarg5;
  if (!arg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::string > const & is null", 0);
    return 0;
  } 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  arg8 = (double)jarg8; 
  {
    try {
      result = (libsumo::TraCIStage *)new libsumo::TraCIStage(arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::vector< std::string > const &)*arg5,arg6,arg7,arg8);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCIStage >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIStage__SWIG_6___(int jarg1, const char * jarg2, const char * jarg3, const char * jarg4, void * jarg5, double jarg6, double jarg7) {
  void * jresult ;
  int arg1 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::vector< std::string > *arg5 = 0 ;
  double arg6 ;
  double arg7 ;
  libsumo::TraCIStage *result = 0 ;
  
  arg1 = (int)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  if (!jarg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg4_str(jarg4);
  arg4 = &arg4_str; 
  arg5 = (std::vector< std::string > *)jarg5;
  if (!arg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::string > const & is null", 0);
    return 0;
  } 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  {
    try {
      result = (libsumo::TraCIStage *)new libsumo::TraCIStage(arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::vector< std::string > const &)*arg5,arg6,arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCIStage >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIStage__SWIG_7___(int jarg1, const char * jarg2, const char * jarg3, const char * jarg4, void * jarg5, double jarg6) {
  void * jresult ;
  int arg1 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::vector< std::string > *arg5 = 0 ;
  double arg6 ;
  libsumo::TraCIStage *result = 0 ;
  
  arg1 = (int)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  if (!jarg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg4_str(jarg4);
  arg4 = &arg4_str; 
  arg5 = (std::vector< std::string > *)jarg5;
  if (!arg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::string > const & is null", 0);
    return 0;
  } 
  arg6 = (double)jarg6; 
  {
    try {
      result = (libsumo::TraCIStage *)new libsumo::TraCIStage(arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::vector< std::string > const &)*arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCIStage >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIStage__SWIG_8___(int jarg1, const char * jarg2, const char * jarg3, const char * jarg4, void * jarg5) {
  void * jresult ;
  int arg1 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::vector< std::string > *arg5 = 0 ;
  libsumo::TraCIStage *result = 0 ;
  
  arg1 = (int)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  if (!jarg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg4_str(jarg4);
  arg4 = &arg4_str; 
  arg5 = (std::vector< std::string > *)jarg5;
  if (!arg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::string > const & is null", 0);
    return 0;
  } 
  {
    try {
      result = (libsumo::TraCIStage *)new libsumo::TraCIStage(arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::vector< std::string > const &)*arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCIStage >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIStage__SWIG_9___(int jarg1, const char * jarg2, const char * jarg3, const char * jarg4) {
  void * jresult ;
  int arg1 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  libsumo::TraCIStage *result = 0 ;
  
  arg1 = (int)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  if (!jarg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg4_str(jarg4);
  arg4 = &arg4_str; 
  {
    try {
      result = (libsumo::TraCIStage *)new libsumo::TraCIStage(arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCIStage >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIStage__SWIG_10___(int jarg1, const char * jarg2, const char * jarg3) {
  void * jresult ;
  int arg1 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  libsumo::TraCIStage *result = 0 ;
  
  arg1 = (int)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  {
    try {
      result = (libsumo::TraCIStage *)new libsumo::TraCIStage(arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCIStage >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIStage__SWIG_11___(int jarg1, const char * jarg2) {
  void * jresult ;
  int arg1 ;
  std::string *arg2 = 0 ;
  libsumo::TraCIStage *result = 0 ;
  
  arg1 = (int)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = (libsumo::TraCIStage *)new libsumo::TraCIStage(arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCIStage >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIStage__SWIG_12___(int jarg1) {
  void * jresult ;
  int arg1 ;
  libsumo::TraCIStage *result = 0 ;
  
  arg1 = (int)jarg1; 
  {
    try {
      result = (libsumo::TraCIStage *)new libsumo::TraCIStage(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCIStage >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIStage__SWIG_13___() {
  void * jresult ;
  libsumo::TraCIStage *result = 0 ;
  
  {
    try {
      result = (libsumo::TraCIStage *)new libsumo::TraCIStage();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCIStage >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIStage_type_set___(void * jarg1, int jarg2) {
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  int arg2 ;
  std::shared_ptr< libsumo::TraCIStage > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIStage > *)jarg1;
  arg1 = (libsumo::TraCIStage *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->type = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIStage_type_get___(void * jarg1) {
  int jresult ;
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  std::shared_ptr< libsumo::TraCIStage > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIStage > *)jarg1;
  arg1 = (libsumo::TraCIStage *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int) ((arg1)->type);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIStage_vType_set___(void * jarg1, const char * jarg2) {
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< libsumo::TraCIStage > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIStage > *)jarg1;
  arg1 = (libsumo::TraCIStage *)(smartarg1 ? smartarg1->get() : 0); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (arg1) (arg1)->vType = *arg2;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIStage_vType_get___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  std::shared_ptr< libsumo::TraCIStage > *smartarg1 = 0 ;
  std::string *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIStage > *)jarg1;
  arg1 = (libsumo::TraCIStage *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::string *) & ((arg1)->vType);
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIStage_line_set___(void * jarg1, const char * jarg2) {
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< libsumo::TraCIStage > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIStage > *)jarg1;
  arg1 = (libsumo::TraCIStage *)(smartarg1 ? smartarg1->get() : 0); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (arg1) (arg1)->line = *arg2;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIStage_line_get___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  std::shared_ptr< libsumo::TraCIStage > *smartarg1 = 0 ;
  std::string *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIStage > *)jarg1;
  arg1 = (libsumo::TraCIStage *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::string *) & ((arg1)->line);
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIStage_destStop_set___(void * jarg1, const char * jarg2) {
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< libsumo::TraCIStage > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIStage > *)jarg1;
  arg1 = (libsumo::TraCIStage *)(smartarg1 ? smartarg1->get() : 0); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (arg1) (arg1)->destStop = *arg2;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIStage_destStop_get___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  std::shared_ptr< libsumo::TraCIStage > *smartarg1 = 0 ;
  std::string *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIStage > *)jarg1;
  arg1 = (libsumo::TraCIStage *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::string *) & ((arg1)->destStop);
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIStage_edges_set___(void * jarg1, void * jarg2) {
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  std::vector< std::string > *arg2 = (std::vector< std::string > *) 0 ;
  std::shared_ptr< libsumo::TraCIStage > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIStage > *)jarg1;
  arg1 = (libsumo::TraCIStage *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (std::vector< std::string > *)jarg2; 
  if (arg1) (arg1)->edges = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIStage_edges_get___(void * jarg1) {
  void * jresult ;
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  std::shared_ptr< libsumo::TraCIStage > *smartarg1 = 0 ;
  std::vector< std::string > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIStage > *)jarg1;
  arg1 = (libsumo::TraCIStage *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::vector< std::string > *)& ((arg1)->edges);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIStage_travelTime_set___(void * jarg1, double jarg2) {
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  double arg2 ;
  std::shared_ptr< libsumo::TraCIStage > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIStage > *)jarg1;
  arg1 = (libsumo::TraCIStage *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->travelTime = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIStage_travelTime_get___(void * jarg1) {
  double jresult ;
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  std::shared_ptr< libsumo::TraCIStage > *smartarg1 = 0 ;
  double result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIStage > *)jarg1;
  arg1 = (libsumo::TraCIStage *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double) ((arg1)->travelTime);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIStage_cost_set___(void * jarg1, double jarg2) {
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  double arg2 ;
  std::shared_ptr< libsumo::TraCIStage > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIStage > *)jarg1;
  arg1 = (libsumo::TraCIStage *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->cost = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIStage_cost_get___(void * jarg1) {
  double jresult ;
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  std::shared_ptr< libsumo::TraCIStage > *smartarg1 = 0 ;
  double result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIStage > *)jarg1;
  arg1 = (libsumo::TraCIStage *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double) ((arg1)->cost);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIStage_length_set___(void * jarg1, double jarg2) {
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  double arg2 ;
  std::shared_ptr< libsumo::TraCIStage > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIStage > *)jarg1;
  arg1 = (libsumo::TraCIStage *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->length = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIStage_length_get___(void * jarg1) {
  double jresult ;
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  std::shared_ptr< libsumo::TraCIStage > *smartarg1 = 0 ;
  double result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIStage > *)jarg1;
  arg1 = (libsumo::TraCIStage *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double) ((arg1)->length);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIStage_intended_set___(void * jarg1, const char * jarg2) {
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< libsumo::TraCIStage > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIStage > *)jarg1;
  arg1 = (libsumo::TraCIStage *)(smartarg1 ? smartarg1->get() : 0); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (arg1) (arg1)->intended = *arg2;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIStage_intended_get___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  std::shared_ptr< libsumo::TraCIStage > *smartarg1 = 0 ;
  std::string *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIStage > *)jarg1;
  arg1 = (libsumo::TraCIStage *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::string *) & ((arg1)->intended);
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIStage_depart_set___(void * jarg1, double jarg2) {
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  double arg2 ;
  std::shared_ptr< libsumo::TraCIStage > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIStage > *)jarg1;
  arg1 = (libsumo::TraCIStage *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->depart = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIStage_depart_get___(void * jarg1) {
  double jresult ;
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  std::shared_ptr< libsumo::TraCIStage > *smartarg1 = 0 ;
  double result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIStage > *)jarg1;
  arg1 = (libsumo::TraCIStage *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double) ((arg1)->depart);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIStage_departPos_set___(void * jarg1, double jarg2) {
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  double arg2 ;
  std::shared_ptr< libsumo::TraCIStage > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIStage > *)jarg1;
  arg1 = (libsumo::TraCIStage *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->departPos = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIStage_departPos_get___(void * jarg1) {
  double jresult ;
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  std::shared_ptr< libsumo::TraCIStage > *smartarg1 = 0 ;
  double result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIStage > *)jarg1;
  arg1 = (libsumo::TraCIStage *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double) ((arg1)->departPos);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIStage_arrivalPos_set___(void * jarg1, double jarg2) {
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  double arg2 ;
  std::shared_ptr< libsumo::TraCIStage > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIStage > *)jarg1;
  arg1 = (libsumo::TraCIStage *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->arrivalPos = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIStage_arrivalPos_get___(void * jarg1) {
  double jresult ;
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  std::shared_ptr< libsumo::TraCIStage > *smartarg1 = 0 ;
  double result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIStage > *)jarg1;
  arg1 = (libsumo::TraCIStage *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double) ((arg1)->arrivalPos);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIStage_description_set___(void * jarg1, const char * jarg2) {
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< libsumo::TraCIStage > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIStage > *)jarg1;
  arg1 = (libsumo::TraCIStage *)(smartarg1 ? smartarg1->get() : 0); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (arg1) (arg1)->description = *arg2;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIStage_description_get___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  std::shared_ptr< libsumo::TraCIStage > *smartarg1 = 0 ;
  std::string *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIStage > *)jarg1;
  arg1 = (libsumo::TraCIStage *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::string *) & ((arg1)->description);
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_TraCIStage___(void * jarg1) {
  libsumo::TraCIStage *arg1 = (libsumo::TraCIStage *) 0 ;
  std::shared_ptr< libsumo::TraCIStage > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIStage > *)jarg1;
  arg1 = (libsumo::TraCIStage *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      (void)arg1; delete smartarg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIReservation__SWIG_0___() {
  void * jresult ;
  libsumo::TraCIReservation *result = 0 ;
  
  {
    try {
      result = (libsumo::TraCIReservation *)new libsumo::TraCIReservation();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCIReservation >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIReservation__SWIG_1___(const char * jarg1, void * jarg2, const char * jarg3, const char * jarg4, const char * jarg5, double jarg6, double jarg7, double jarg8, double jarg9, int jarg10) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::vector< std::string > *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  double arg9 ;
  int arg10 ;
  libsumo::TraCIReservation *result = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< std::string > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::string > const & is null", 0);
    return 0;
  } 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  if (!jarg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg4_str(jarg4);
  arg4 = &arg4_str; 
  if (!jarg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg5_str(jarg5);
  arg5 = &arg5_str; 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  arg8 = (double)jarg8; 
  arg9 = (double)jarg9; 
  arg10 = (int)jarg10; 
  {
    try {
      result = (libsumo::TraCIReservation *)new libsumo::TraCIReservation((std::string const &)*arg1,(std::vector< std::string > const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::string const &)*arg5,arg6,arg7,arg8,arg9,arg10);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCIReservation >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIReservation_id_set___(void * jarg1, const char * jarg2) {
  libsumo::TraCIReservation *arg1 = (libsumo::TraCIReservation *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< libsumo::TraCIReservation > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIReservation > *)jarg1;
  arg1 = (libsumo::TraCIReservation *)(smartarg1 ? smartarg1->get() : 0); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (arg1) (arg1)->id = *arg2;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIReservation_id_get___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCIReservation *arg1 = (libsumo::TraCIReservation *) 0 ;
  std::shared_ptr< libsumo::TraCIReservation > *smartarg1 = 0 ;
  std::string *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIReservation > *)jarg1;
  arg1 = (libsumo::TraCIReservation *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::string *) & ((arg1)->id);
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIReservation_persons_set___(void * jarg1, void * jarg2) {
  libsumo::TraCIReservation *arg1 = (libsumo::TraCIReservation *) 0 ;
  std::vector< std::string > *arg2 = (std::vector< std::string > *) 0 ;
  std::shared_ptr< libsumo::TraCIReservation > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIReservation > *)jarg1;
  arg1 = (libsumo::TraCIReservation *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (std::vector< std::string > *)jarg2; 
  if (arg1) (arg1)->persons = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIReservation_persons_get___(void * jarg1) {
  void * jresult ;
  libsumo::TraCIReservation *arg1 = (libsumo::TraCIReservation *) 0 ;
  std::shared_ptr< libsumo::TraCIReservation > *smartarg1 = 0 ;
  std::vector< std::string > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIReservation > *)jarg1;
  arg1 = (libsumo::TraCIReservation *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::vector< std::string > *)& ((arg1)->persons);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIReservation_group_set___(void * jarg1, const char * jarg2) {
  libsumo::TraCIReservation *arg1 = (libsumo::TraCIReservation *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< libsumo::TraCIReservation > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIReservation > *)jarg1;
  arg1 = (libsumo::TraCIReservation *)(smartarg1 ? smartarg1->get() : 0); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (arg1) (arg1)->group = *arg2;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIReservation_group_get___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCIReservation *arg1 = (libsumo::TraCIReservation *) 0 ;
  std::shared_ptr< libsumo::TraCIReservation > *smartarg1 = 0 ;
  std::string *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIReservation > *)jarg1;
  arg1 = (libsumo::TraCIReservation *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::string *) & ((arg1)->group);
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIReservation_fromEdge_set___(void * jarg1, const char * jarg2) {
  libsumo::TraCIReservation *arg1 = (libsumo::TraCIReservation *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< libsumo::TraCIReservation > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIReservation > *)jarg1;
  arg1 = (libsumo::TraCIReservation *)(smartarg1 ? smartarg1->get() : 0); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (arg1) (arg1)->fromEdge = *arg2;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIReservation_fromEdge_get___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCIReservation *arg1 = (libsumo::TraCIReservation *) 0 ;
  std::shared_ptr< libsumo::TraCIReservation > *smartarg1 = 0 ;
  std::string *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIReservation > *)jarg1;
  arg1 = (libsumo::TraCIReservation *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::string *) & ((arg1)->fromEdge);
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIReservation_toEdge_set___(void * jarg1, const char * jarg2) {
  libsumo::TraCIReservation *arg1 = (libsumo::TraCIReservation *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< libsumo::TraCIReservation > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIReservation > *)jarg1;
  arg1 = (libsumo::TraCIReservation *)(smartarg1 ? smartarg1->get() : 0); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (arg1) (arg1)->toEdge = *arg2;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIReservation_toEdge_get___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCIReservation *arg1 = (libsumo::TraCIReservation *) 0 ;
  std::shared_ptr< libsumo::TraCIReservation > *smartarg1 = 0 ;
  std::string *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIReservation > *)jarg1;
  arg1 = (libsumo::TraCIReservation *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::string *) & ((arg1)->toEdge);
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIReservation_departPos_set___(void * jarg1, double jarg2) {
  libsumo::TraCIReservation *arg1 = (libsumo::TraCIReservation *) 0 ;
  double arg2 ;
  std::shared_ptr< libsumo::TraCIReservation > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIReservation > *)jarg1;
  arg1 = (libsumo::TraCIReservation *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->departPos = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIReservation_departPos_get___(void * jarg1) {
  double jresult ;
  libsumo::TraCIReservation *arg1 = (libsumo::TraCIReservation *) 0 ;
  std::shared_ptr< libsumo::TraCIReservation > *smartarg1 = 0 ;
  double result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIReservation > *)jarg1;
  arg1 = (libsumo::TraCIReservation *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double) ((arg1)->departPos);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIReservation_arrivalPos_set___(void * jarg1, double jarg2) {
  libsumo::TraCIReservation *arg1 = (libsumo::TraCIReservation *) 0 ;
  double arg2 ;
  std::shared_ptr< libsumo::TraCIReservation > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIReservation > *)jarg1;
  arg1 = (libsumo::TraCIReservation *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->arrivalPos = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIReservation_arrivalPos_get___(void * jarg1) {
  double jresult ;
  libsumo::TraCIReservation *arg1 = (libsumo::TraCIReservation *) 0 ;
  std::shared_ptr< libsumo::TraCIReservation > *smartarg1 = 0 ;
  double result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIReservation > *)jarg1;
  arg1 = (libsumo::TraCIReservation *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double) ((arg1)->arrivalPos);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIReservation_depart_set___(void * jarg1, double jarg2) {
  libsumo::TraCIReservation *arg1 = (libsumo::TraCIReservation *) 0 ;
  double arg2 ;
  std::shared_ptr< libsumo::TraCIReservation > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIReservation > *)jarg1;
  arg1 = (libsumo::TraCIReservation *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->depart = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIReservation_depart_get___(void * jarg1) {
  double jresult ;
  libsumo::TraCIReservation *arg1 = (libsumo::TraCIReservation *) 0 ;
  std::shared_ptr< libsumo::TraCIReservation > *smartarg1 = 0 ;
  double result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIReservation > *)jarg1;
  arg1 = (libsumo::TraCIReservation *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double) ((arg1)->depart);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIReservation_reservationTime_set___(void * jarg1, double jarg2) {
  libsumo::TraCIReservation *arg1 = (libsumo::TraCIReservation *) 0 ;
  double arg2 ;
  std::shared_ptr< libsumo::TraCIReservation > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIReservation > *)jarg1;
  arg1 = (libsumo::TraCIReservation *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->reservationTime = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIReservation_reservationTime_get___(void * jarg1) {
  double jresult ;
  libsumo::TraCIReservation *arg1 = (libsumo::TraCIReservation *) 0 ;
  std::shared_ptr< libsumo::TraCIReservation > *smartarg1 = 0 ;
  double result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIReservation > *)jarg1;
  arg1 = (libsumo::TraCIReservation *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double) ((arg1)->reservationTime);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIReservation_state_set___(void * jarg1, int jarg2) {
  libsumo::TraCIReservation *arg1 = (libsumo::TraCIReservation *) 0 ;
  int arg2 ;
  std::shared_ptr< libsumo::TraCIReservation > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIReservation > *)jarg1;
  arg1 = (libsumo::TraCIReservation *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->state = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIReservation_state_get___(void * jarg1) {
  int jresult ;
  libsumo::TraCIReservation *arg1 = (libsumo::TraCIReservation *) 0 ;
  std::shared_ptr< libsumo::TraCIReservation > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIReservation > *)jarg1;
  arg1 = (libsumo::TraCIReservation *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int) ((arg1)->state);
  jresult = result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIReservation_getString___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCIReservation *arg1 = (libsumo::TraCIReservation *) 0 ;
  std::shared_ptr< libsumo::TraCIReservation const > *smartarg1 = 0 ;
  std::string result;
  
  
  smartarg1 = (std::shared_ptr< const libsumo::TraCIReservation > *)jarg1;
  arg1 = (libsumo::TraCIReservation *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      result = ((libsumo::TraCIReservation const *)arg1)->getString();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_TraCIReservation___(void * jarg1) {
  libsumo::TraCIReservation *arg1 = (libsumo::TraCIReservation *) 0 ;
  std::shared_ptr< libsumo::TraCIReservation > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIReservation > *)jarg1;
  arg1 = (libsumo::TraCIReservation *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      (void)arg1; delete smartarg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIReservationVectorWrapped_getString___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCIReservationVectorWrapped *arg1 = (libsumo::TraCIReservationVectorWrapped *) 0 ;
  std::shared_ptr< libsumo::TraCIReservationVectorWrapped const > *smartarg1 = 0 ;
  std::string result;
  
  
  smartarg1 = (std::shared_ptr< const libsumo::TraCIReservationVectorWrapped > *)jarg1;
  arg1 = (libsumo::TraCIReservationVectorWrapped *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      result = ((libsumo::TraCIReservationVectorWrapped const *)arg1)->getString();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIReservationVectorWrapped_value_set___(void * jarg1, void * jarg2) {
  libsumo::TraCIReservationVectorWrapped *arg1 = (libsumo::TraCIReservationVectorWrapped *) 0 ;
  std::vector< libsumo::TraCIReservation > *arg2 = (std::vector< libsumo::TraCIReservation > *) 0 ;
  std::shared_ptr< libsumo::TraCIReservationVectorWrapped > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIReservationVectorWrapped > *)jarg1;
  arg1 = (libsumo::TraCIReservationVectorWrapped *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (std::vector< libsumo::TraCIReservation > *)jarg2; 
  if (arg1) (arg1)->value = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIReservationVectorWrapped_value_get___(void * jarg1) {
  void * jresult ;
  libsumo::TraCIReservationVectorWrapped *arg1 = (libsumo::TraCIReservationVectorWrapped *) 0 ;
  std::shared_ptr< libsumo::TraCIReservationVectorWrapped > *smartarg1 = 0 ;
  std::vector< libsumo::TraCIReservation > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIReservationVectorWrapped > *)jarg1;
  arg1 = (libsumo::TraCIReservationVectorWrapped *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::vector< libsumo::TraCIReservation > *)& ((arg1)->value);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIReservationVectorWrapped___() {
  void * jresult ;
  libsumo::TraCIReservationVectorWrapped *result = 0 ;
  
  {
    try {
      result = (libsumo::TraCIReservationVectorWrapped *)new libsumo::TraCIReservationVectorWrapped();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCIReservationVectorWrapped >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_TraCIReservationVectorWrapped___(void * jarg1) {
  libsumo::TraCIReservationVectorWrapped *arg1 = (libsumo::TraCIReservationVectorWrapped *) 0 ;
  std::shared_ptr< libsumo::TraCIReservationVectorWrapped > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIReservationVectorWrapped > *)jarg1;
  arg1 = (libsumo::TraCIReservationVectorWrapped *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      (void)arg1; delete smartarg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCICollision_collider_set___(void * jarg1, const char * jarg2) {
  libsumo::TraCICollision *arg1 = (libsumo::TraCICollision *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< libsumo::TraCICollision > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCICollision > *)jarg1;
  arg1 = (libsumo::TraCICollision *)(smartarg1 ? smartarg1->get() : 0); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (arg1) (arg1)->collider = *arg2;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCICollision_collider_get___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCICollision *arg1 = (libsumo::TraCICollision *) 0 ;
  std::shared_ptr< libsumo::TraCICollision > *smartarg1 = 0 ;
  std::string *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCICollision > *)jarg1;
  arg1 = (libsumo::TraCICollision *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::string *) & ((arg1)->collider);
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCICollision_victim_set___(void * jarg1, const char * jarg2) {
  libsumo::TraCICollision *arg1 = (libsumo::TraCICollision *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< libsumo::TraCICollision > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCICollision > *)jarg1;
  arg1 = (libsumo::TraCICollision *)(smartarg1 ? smartarg1->get() : 0); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (arg1) (arg1)->victim = *arg2;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCICollision_victim_get___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCICollision *arg1 = (libsumo::TraCICollision *) 0 ;
  std::shared_ptr< libsumo::TraCICollision > *smartarg1 = 0 ;
  std::string *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCICollision > *)jarg1;
  arg1 = (libsumo::TraCICollision *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::string *) & ((arg1)->victim);
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCICollision_colliderType_set___(void * jarg1, const char * jarg2) {
  libsumo::TraCICollision *arg1 = (libsumo::TraCICollision *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< libsumo::TraCICollision > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCICollision > *)jarg1;
  arg1 = (libsumo::TraCICollision *)(smartarg1 ? smartarg1->get() : 0); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (arg1) (arg1)->colliderType = *arg2;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCICollision_colliderType_get___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCICollision *arg1 = (libsumo::TraCICollision *) 0 ;
  std::shared_ptr< libsumo::TraCICollision > *smartarg1 = 0 ;
  std::string *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCICollision > *)jarg1;
  arg1 = (libsumo::TraCICollision *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::string *) & ((arg1)->colliderType);
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCICollision_victimType_set___(void * jarg1, const char * jarg2) {
  libsumo::TraCICollision *arg1 = (libsumo::TraCICollision *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< libsumo::TraCICollision > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCICollision > *)jarg1;
  arg1 = (libsumo::TraCICollision *)(smartarg1 ? smartarg1->get() : 0); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (arg1) (arg1)->victimType = *arg2;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCICollision_victimType_get___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCICollision *arg1 = (libsumo::TraCICollision *) 0 ;
  std::shared_ptr< libsumo::TraCICollision > *smartarg1 = 0 ;
  std::string *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCICollision > *)jarg1;
  arg1 = (libsumo::TraCICollision *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::string *) & ((arg1)->victimType);
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCICollision_colliderSpeed_set___(void * jarg1, double jarg2) {
  libsumo::TraCICollision *arg1 = (libsumo::TraCICollision *) 0 ;
  double arg2 ;
  std::shared_ptr< libsumo::TraCICollision > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCICollision > *)jarg1;
  arg1 = (libsumo::TraCICollision *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->colliderSpeed = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCICollision_colliderSpeed_get___(void * jarg1) {
  double jresult ;
  libsumo::TraCICollision *arg1 = (libsumo::TraCICollision *) 0 ;
  std::shared_ptr< libsumo::TraCICollision > *smartarg1 = 0 ;
  double result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCICollision > *)jarg1;
  arg1 = (libsumo::TraCICollision *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double) ((arg1)->colliderSpeed);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCICollision_victimSpeed_set___(void * jarg1, double jarg2) {
  libsumo::TraCICollision *arg1 = (libsumo::TraCICollision *) 0 ;
  double arg2 ;
  std::shared_ptr< libsumo::TraCICollision > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCICollision > *)jarg1;
  arg1 = (libsumo::TraCICollision *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->victimSpeed = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCICollision_victimSpeed_get___(void * jarg1) {
  double jresult ;
  libsumo::TraCICollision *arg1 = (libsumo::TraCICollision *) 0 ;
  std::shared_ptr< libsumo::TraCICollision > *smartarg1 = 0 ;
  double result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCICollision > *)jarg1;
  arg1 = (libsumo::TraCICollision *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double) ((arg1)->victimSpeed);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCICollision_type_set___(void * jarg1, const char * jarg2) {
  libsumo::TraCICollision *arg1 = (libsumo::TraCICollision *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< libsumo::TraCICollision > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCICollision > *)jarg1;
  arg1 = (libsumo::TraCICollision *)(smartarg1 ? smartarg1->get() : 0); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (arg1) (arg1)->type = *arg2;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCICollision_type_get___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCICollision *arg1 = (libsumo::TraCICollision *) 0 ;
  std::shared_ptr< libsumo::TraCICollision > *smartarg1 = 0 ;
  std::string *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCICollision > *)jarg1;
  arg1 = (libsumo::TraCICollision *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::string *) & ((arg1)->type);
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCICollision_lane_set___(void * jarg1, const char * jarg2) {
  libsumo::TraCICollision *arg1 = (libsumo::TraCICollision *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< libsumo::TraCICollision > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCICollision > *)jarg1;
  arg1 = (libsumo::TraCICollision *)(smartarg1 ? smartarg1->get() : 0); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (arg1) (arg1)->lane = *arg2;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCICollision_lane_get___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCICollision *arg1 = (libsumo::TraCICollision *) 0 ;
  std::shared_ptr< libsumo::TraCICollision > *smartarg1 = 0 ;
  std::string *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCICollision > *)jarg1;
  arg1 = (libsumo::TraCICollision *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::string *) & ((arg1)->lane);
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCICollision_pos_set___(void * jarg1, double jarg2) {
  libsumo::TraCICollision *arg1 = (libsumo::TraCICollision *) 0 ;
  double arg2 ;
  std::shared_ptr< libsumo::TraCICollision > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCICollision > *)jarg1;
  arg1 = (libsumo::TraCICollision *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->pos = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCICollision_pos_get___(void * jarg1) {
  double jresult ;
  libsumo::TraCICollision *arg1 = (libsumo::TraCICollision *) 0 ;
  std::shared_ptr< libsumo::TraCICollision > *smartarg1 = 0 ;
  double result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCICollision > *)jarg1;
  arg1 = (libsumo::TraCICollision *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double) ((arg1)->pos);
  jresult = result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCICollision_getString___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCICollision *arg1 = (libsumo::TraCICollision *) 0 ;
  std::shared_ptr< libsumo::TraCICollision const > *smartarg1 = 0 ;
  std::string result;
  
  
  smartarg1 = (std::shared_ptr< const libsumo::TraCICollision > *)jarg1;
  arg1 = (libsumo::TraCICollision *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      result = ((libsumo::TraCICollision const *)arg1)->getString();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCICollision___() {
  void * jresult ;
  libsumo::TraCICollision *result = 0 ;
  
  {
    try {
      result = (libsumo::TraCICollision *)new libsumo::TraCICollision();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCICollision >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_TraCICollision___(void * jarg1) {
  libsumo::TraCICollision *arg1 = (libsumo::TraCICollision *) 0 ;
  std::shared_ptr< libsumo::TraCICollision > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCICollision > *)jarg1;
  arg1 = (libsumo::TraCICollision *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      (void)arg1; delete smartarg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCICollisionVectorWrapped_getString___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCICollisionVectorWrapped *arg1 = (libsumo::TraCICollisionVectorWrapped *) 0 ;
  std::shared_ptr< libsumo::TraCICollisionVectorWrapped const > *smartarg1 = 0 ;
  std::string result;
  
  
  smartarg1 = (std::shared_ptr< const libsumo::TraCICollisionVectorWrapped > *)jarg1;
  arg1 = (libsumo::TraCICollisionVectorWrapped *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      result = ((libsumo::TraCICollisionVectorWrapped const *)arg1)->getString();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCICollisionVectorWrapped_value_set___(void * jarg1, void * jarg2) {
  libsumo::TraCICollisionVectorWrapped *arg1 = (libsumo::TraCICollisionVectorWrapped *) 0 ;
  std::vector< libsumo::TraCICollision > *arg2 = (std::vector< libsumo::TraCICollision > *) 0 ;
  std::shared_ptr< libsumo::TraCICollisionVectorWrapped > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCICollisionVectorWrapped > *)jarg1;
  arg1 = (libsumo::TraCICollisionVectorWrapped *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (std::vector< libsumo::TraCICollision > *)jarg2; 
  if (arg1) (arg1)->value = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCICollisionVectorWrapped_value_get___(void * jarg1) {
  void * jresult ;
  libsumo::TraCICollisionVectorWrapped *arg1 = (libsumo::TraCICollisionVectorWrapped *) 0 ;
  std::shared_ptr< libsumo::TraCICollisionVectorWrapped > *smartarg1 = 0 ;
  std::vector< libsumo::TraCICollision > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCICollisionVectorWrapped > *)jarg1;
  arg1 = (libsumo::TraCICollisionVectorWrapped *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::vector< libsumo::TraCICollision > *)& ((arg1)->value);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCICollisionVectorWrapped___() {
  void * jresult ;
  libsumo::TraCICollisionVectorWrapped *result = 0 ;
  
  {
    try {
      result = (libsumo::TraCICollisionVectorWrapped *)new libsumo::TraCICollisionVectorWrapped();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCICollisionVectorWrapped >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_TraCICollisionVectorWrapped___(void * jarg1) {
  libsumo::TraCICollisionVectorWrapped *arg1 = (libsumo::TraCICollisionVectorWrapped *) 0 ;
  std::shared_ptr< libsumo::TraCICollisionVectorWrapped > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCICollisionVectorWrapped > *)jarg1;
  arg1 = (libsumo::TraCICollisionVectorWrapped *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      (void)arg1; delete smartarg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCISignalConstraint_signalId_set___(void * jarg1, const char * jarg2) {
  libsumo::TraCISignalConstraint *arg1 = (libsumo::TraCISignalConstraint *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< libsumo::TraCISignalConstraint > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCISignalConstraint > *)jarg1;
  arg1 = (libsumo::TraCISignalConstraint *)(smartarg1 ? smartarg1->get() : 0); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (arg1) (arg1)->signalId = *arg2;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCISignalConstraint_signalId_get___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCISignalConstraint *arg1 = (libsumo::TraCISignalConstraint *) 0 ;
  std::shared_ptr< libsumo::TraCISignalConstraint > *smartarg1 = 0 ;
  std::string *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCISignalConstraint > *)jarg1;
  arg1 = (libsumo::TraCISignalConstraint *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::string *) & ((arg1)->signalId);
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCISignalConstraint_tripId_set___(void * jarg1, const char * jarg2) {
  libsumo::TraCISignalConstraint *arg1 = (libsumo::TraCISignalConstraint *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< libsumo::TraCISignalConstraint > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCISignalConstraint > *)jarg1;
  arg1 = (libsumo::TraCISignalConstraint *)(smartarg1 ? smartarg1->get() : 0); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (arg1) (arg1)->tripId = *arg2;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCISignalConstraint_tripId_get___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCISignalConstraint *arg1 = (libsumo::TraCISignalConstraint *) 0 ;
  std::shared_ptr< libsumo::TraCISignalConstraint > *smartarg1 = 0 ;
  std::string *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCISignalConstraint > *)jarg1;
  arg1 = (libsumo::TraCISignalConstraint *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::string *) & ((arg1)->tripId);
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCISignalConstraint_foeId_set___(void * jarg1, const char * jarg2) {
  libsumo::TraCISignalConstraint *arg1 = (libsumo::TraCISignalConstraint *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< libsumo::TraCISignalConstraint > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCISignalConstraint > *)jarg1;
  arg1 = (libsumo::TraCISignalConstraint *)(smartarg1 ? smartarg1->get() : 0); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (arg1) (arg1)->foeId = *arg2;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCISignalConstraint_foeId_get___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCISignalConstraint *arg1 = (libsumo::TraCISignalConstraint *) 0 ;
  std::shared_ptr< libsumo::TraCISignalConstraint > *smartarg1 = 0 ;
  std::string *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCISignalConstraint > *)jarg1;
  arg1 = (libsumo::TraCISignalConstraint *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::string *) & ((arg1)->foeId);
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCISignalConstraint_foeSignal_set___(void * jarg1, const char * jarg2) {
  libsumo::TraCISignalConstraint *arg1 = (libsumo::TraCISignalConstraint *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< libsumo::TraCISignalConstraint > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCISignalConstraint > *)jarg1;
  arg1 = (libsumo::TraCISignalConstraint *)(smartarg1 ? smartarg1->get() : 0); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (arg1) (arg1)->foeSignal = *arg2;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCISignalConstraint_foeSignal_get___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCISignalConstraint *arg1 = (libsumo::TraCISignalConstraint *) 0 ;
  std::shared_ptr< libsumo::TraCISignalConstraint > *smartarg1 = 0 ;
  std::string *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCISignalConstraint > *)jarg1;
  arg1 = (libsumo::TraCISignalConstraint *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::string *) & ((arg1)->foeSignal);
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCISignalConstraint_limit_set___(void * jarg1, int jarg2) {
  libsumo::TraCISignalConstraint *arg1 = (libsumo::TraCISignalConstraint *) 0 ;
  int arg2 ;
  std::shared_ptr< libsumo::TraCISignalConstraint > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCISignalConstraint > *)jarg1;
  arg1 = (libsumo::TraCISignalConstraint *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->limit = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCISignalConstraint_limit_get___(void * jarg1) {
  int jresult ;
  libsumo::TraCISignalConstraint *arg1 = (libsumo::TraCISignalConstraint *) 0 ;
  std::shared_ptr< libsumo::TraCISignalConstraint > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCISignalConstraint > *)jarg1;
  arg1 = (libsumo::TraCISignalConstraint *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int) ((arg1)->limit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCISignalConstraint_type_set___(void * jarg1, int jarg2) {
  libsumo::TraCISignalConstraint *arg1 = (libsumo::TraCISignalConstraint *) 0 ;
  int arg2 ;
  std::shared_ptr< libsumo::TraCISignalConstraint > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCISignalConstraint > *)jarg1;
  arg1 = (libsumo::TraCISignalConstraint *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->type = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCISignalConstraint_type_get___(void * jarg1) {
  int jresult ;
  libsumo::TraCISignalConstraint *arg1 = (libsumo::TraCISignalConstraint *) 0 ;
  std::shared_ptr< libsumo::TraCISignalConstraint > *smartarg1 = 0 ;
  int result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCISignalConstraint > *)jarg1;
  arg1 = (libsumo::TraCISignalConstraint *)(smartarg1 ? smartarg1->get() : 0); 
  result = (int) ((arg1)->type);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCISignalConstraint_mustWait_set___(void * jarg1, unsigned int jarg2) {
  libsumo::TraCISignalConstraint *arg1 = (libsumo::TraCISignalConstraint *) 0 ;
  bool arg2 ;
  std::shared_ptr< libsumo::TraCISignalConstraint > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCISignalConstraint > *)jarg1;
  arg1 = (libsumo::TraCISignalConstraint *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->mustWait = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCISignalConstraint_mustWait_get___(void * jarg1) {
  unsigned int jresult ;
  libsumo::TraCISignalConstraint *arg1 = (libsumo::TraCISignalConstraint *) 0 ;
  std::shared_ptr< libsumo::TraCISignalConstraint > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCISignalConstraint > *)jarg1;
  arg1 = (libsumo::TraCISignalConstraint *)(smartarg1 ? smartarg1->get() : 0); 
  result = (bool) ((arg1)->mustWait);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCISignalConstraint_active_set___(void * jarg1, unsigned int jarg2) {
  libsumo::TraCISignalConstraint *arg1 = (libsumo::TraCISignalConstraint *) 0 ;
  bool arg2 ;
  std::shared_ptr< libsumo::TraCISignalConstraint > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCISignalConstraint > *)jarg1;
  arg1 = (libsumo::TraCISignalConstraint *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->active = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCISignalConstraint_active_get___(void * jarg1) {
  unsigned int jresult ;
  libsumo::TraCISignalConstraint *arg1 = (libsumo::TraCISignalConstraint *) 0 ;
  std::shared_ptr< libsumo::TraCISignalConstraint > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCISignalConstraint > *)jarg1;
  arg1 = (libsumo::TraCISignalConstraint *)(smartarg1 ? smartarg1->get() : 0); 
  result = (bool) ((arg1)->active);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCISignalConstraint_param_set___(void * jarg1, void * jarg2) {
  libsumo::TraCISignalConstraint *arg1 = (libsumo::TraCISignalConstraint *) 0 ;
  std::map< std::string,std::string,std::less< std::string > > *arg2 = (std::map< std::string,std::string,std::less< std::string > > *) 0 ;
  std::shared_ptr< libsumo::TraCISignalConstraint > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCISignalConstraint > *)jarg1;
  arg1 = (libsumo::TraCISignalConstraint *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (std::map< std::string,std::string,std::less< std::string > > *)jarg2; 
  if (arg1) (arg1)->param = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCISignalConstraint_param_get___(void * jarg1) {
  void * jresult ;
  libsumo::TraCISignalConstraint *arg1 = (libsumo::TraCISignalConstraint *) 0 ;
  std::shared_ptr< libsumo::TraCISignalConstraint > *smartarg1 = 0 ;
  std::map< std::string,std::string,std::less< std::string > > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCISignalConstraint > *)jarg1;
  arg1 = (libsumo::TraCISignalConstraint *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::map< std::string,std::string,std::less< std::string > > *)& ((arg1)->param);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCISignalConstraint_getString___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCISignalConstraint *arg1 = (libsumo::TraCISignalConstraint *) 0 ;
  std::shared_ptr< libsumo::TraCISignalConstraint const > *smartarg1 = 0 ;
  std::string result;
  
  
  smartarg1 = (std::shared_ptr< const libsumo::TraCISignalConstraint > *)jarg1;
  arg1 = (libsumo::TraCISignalConstraint *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      result = ((libsumo::TraCISignalConstraint const *)arg1)->getString();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCISignalConstraint___() {
  void * jresult ;
  libsumo::TraCISignalConstraint *result = 0 ;
  
  {
    try {
      result = (libsumo::TraCISignalConstraint *)new libsumo::TraCISignalConstraint();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCISignalConstraint >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_TraCISignalConstraint___(void * jarg1) {
  libsumo::TraCISignalConstraint *arg1 = (libsumo::TraCISignalConstraint *) 0 ;
  std::shared_ptr< libsumo::TraCISignalConstraint > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCISignalConstraint > *)jarg1;
  arg1 = (libsumo::TraCISignalConstraint *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      (void)arg1; delete smartarg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCISignalConstraintVectorWrapped_getString___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCISignalConstraintVectorWrapped *arg1 = (libsumo::TraCISignalConstraintVectorWrapped *) 0 ;
  std::shared_ptr< libsumo::TraCISignalConstraintVectorWrapped const > *smartarg1 = 0 ;
  std::string result;
  
  
  smartarg1 = (std::shared_ptr< const libsumo::TraCISignalConstraintVectorWrapped > *)jarg1;
  arg1 = (libsumo::TraCISignalConstraintVectorWrapped *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      result = ((libsumo::TraCISignalConstraintVectorWrapped const *)arg1)->getString();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCISignalConstraintVectorWrapped_value_set___(void * jarg1, void * jarg2) {
  libsumo::TraCISignalConstraintVectorWrapped *arg1 = (libsumo::TraCISignalConstraintVectorWrapped *) 0 ;
  std::vector< libsumo::TraCISignalConstraint > *arg2 = (std::vector< libsumo::TraCISignalConstraint > *) 0 ;
  std::shared_ptr< libsumo::TraCISignalConstraintVectorWrapped > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCISignalConstraintVectorWrapped > *)jarg1;
  arg1 = (libsumo::TraCISignalConstraintVectorWrapped *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (std::vector< libsumo::TraCISignalConstraint > *)jarg2; 
  if (arg1) (arg1)->value = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCISignalConstraintVectorWrapped_value_get___(void * jarg1) {
  void * jresult ;
  libsumo::TraCISignalConstraintVectorWrapped *arg1 = (libsumo::TraCISignalConstraintVectorWrapped *) 0 ;
  std::shared_ptr< libsumo::TraCISignalConstraintVectorWrapped > *smartarg1 = 0 ;
  std::vector< libsumo::TraCISignalConstraint > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCISignalConstraintVectorWrapped > *)jarg1;
  arg1 = (libsumo::TraCISignalConstraintVectorWrapped *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::vector< libsumo::TraCISignalConstraint > *)& ((arg1)->value);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCISignalConstraintVectorWrapped___() {
  void * jresult ;
  libsumo::TraCISignalConstraintVectorWrapped *result = 0 ;
  
  {
    try {
      result = (libsumo::TraCISignalConstraintVectorWrapped *)new libsumo::TraCISignalConstraintVectorWrapped();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCISignalConstraintVectorWrapped >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_TraCISignalConstraintVectorWrapped___(void * jarg1) {
  libsumo::TraCISignalConstraintVectorWrapped *arg1 = (libsumo::TraCISignalConstraintVectorWrapped *) 0 ;
  std::shared_ptr< libsumo::TraCISignalConstraintVectorWrapped > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCISignalConstraintVectorWrapped > *)jarg1;
  arg1 = (libsumo::TraCISignalConstraintVectorWrapped *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      (void)arg1; delete smartarg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIJunctionFoe_foeId_set___(void * jarg1, const char * jarg2) {
  libsumo::TraCIJunctionFoe *arg1 = (libsumo::TraCIJunctionFoe *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< libsumo::TraCIJunctionFoe > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIJunctionFoe > *)jarg1;
  arg1 = (libsumo::TraCIJunctionFoe *)(smartarg1 ? smartarg1->get() : 0); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (arg1) (arg1)->foeId = *arg2;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIJunctionFoe_foeId_get___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCIJunctionFoe *arg1 = (libsumo::TraCIJunctionFoe *) 0 ;
  std::shared_ptr< libsumo::TraCIJunctionFoe > *smartarg1 = 0 ;
  std::string *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIJunctionFoe > *)jarg1;
  arg1 = (libsumo::TraCIJunctionFoe *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::string *) & ((arg1)->foeId);
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIJunctionFoe_egoDist_set___(void * jarg1, double jarg2) {
  libsumo::TraCIJunctionFoe *arg1 = (libsumo::TraCIJunctionFoe *) 0 ;
  double arg2 ;
  std::shared_ptr< libsumo::TraCIJunctionFoe > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIJunctionFoe > *)jarg1;
  arg1 = (libsumo::TraCIJunctionFoe *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->egoDist = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIJunctionFoe_egoDist_get___(void * jarg1) {
  double jresult ;
  libsumo::TraCIJunctionFoe *arg1 = (libsumo::TraCIJunctionFoe *) 0 ;
  std::shared_ptr< libsumo::TraCIJunctionFoe > *smartarg1 = 0 ;
  double result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIJunctionFoe > *)jarg1;
  arg1 = (libsumo::TraCIJunctionFoe *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double) ((arg1)->egoDist);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIJunctionFoe_foeDist_set___(void * jarg1, double jarg2) {
  libsumo::TraCIJunctionFoe *arg1 = (libsumo::TraCIJunctionFoe *) 0 ;
  double arg2 ;
  std::shared_ptr< libsumo::TraCIJunctionFoe > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIJunctionFoe > *)jarg1;
  arg1 = (libsumo::TraCIJunctionFoe *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->foeDist = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIJunctionFoe_foeDist_get___(void * jarg1) {
  double jresult ;
  libsumo::TraCIJunctionFoe *arg1 = (libsumo::TraCIJunctionFoe *) 0 ;
  std::shared_ptr< libsumo::TraCIJunctionFoe > *smartarg1 = 0 ;
  double result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIJunctionFoe > *)jarg1;
  arg1 = (libsumo::TraCIJunctionFoe *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double) ((arg1)->foeDist);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIJunctionFoe_egoExitDist_set___(void * jarg1, double jarg2) {
  libsumo::TraCIJunctionFoe *arg1 = (libsumo::TraCIJunctionFoe *) 0 ;
  double arg2 ;
  std::shared_ptr< libsumo::TraCIJunctionFoe > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIJunctionFoe > *)jarg1;
  arg1 = (libsumo::TraCIJunctionFoe *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->egoExitDist = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIJunctionFoe_egoExitDist_get___(void * jarg1) {
  double jresult ;
  libsumo::TraCIJunctionFoe *arg1 = (libsumo::TraCIJunctionFoe *) 0 ;
  std::shared_ptr< libsumo::TraCIJunctionFoe > *smartarg1 = 0 ;
  double result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIJunctionFoe > *)jarg1;
  arg1 = (libsumo::TraCIJunctionFoe *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double) ((arg1)->egoExitDist);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIJunctionFoe_foeExitDist_set___(void * jarg1, double jarg2) {
  libsumo::TraCIJunctionFoe *arg1 = (libsumo::TraCIJunctionFoe *) 0 ;
  double arg2 ;
  std::shared_ptr< libsumo::TraCIJunctionFoe > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIJunctionFoe > *)jarg1;
  arg1 = (libsumo::TraCIJunctionFoe *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->foeExitDist = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIJunctionFoe_foeExitDist_get___(void * jarg1) {
  double jresult ;
  libsumo::TraCIJunctionFoe *arg1 = (libsumo::TraCIJunctionFoe *) 0 ;
  std::shared_ptr< libsumo::TraCIJunctionFoe > *smartarg1 = 0 ;
  double result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIJunctionFoe > *)jarg1;
  arg1 = (libsumo::TraCIJunctionFoe *)(smartarg1 ? smartarg1->get() : 0); 
  result = (double) ((arg1)->foeExitDist);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIJunctionFoe_egoLane_set___(void * jarg1, const char * jarg2) {
  libsumo::TraCIJunctionFoe *arg1 = (libsumo::TraCIJunctionFoe *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< libsumo::TraCIJunctionFoe > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIJunctionFoe > *)jarg1;
  arg1 = (libsumo::TraCIJunctionFoe *)(smartarg1 ? smartarg1->get() : 0); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (arg1) (arg1)->egoLane = *arg2;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIJunctionFoe_egoLane_get___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCIJunctionFoe *arg1 = (libsumo::TraCIJunctionFoe *) 0 ;
  std::shared_ptr< libsumo::TraCIJunctionFoe > *smartarg1 = 0 ;
  std::string *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIJunctionFoe > *)jarg1;
  arg1 = (libsumo::TraCIJunctionFoe *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::string *) & ((arg1)->egoLane);
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIJunctionFoe_foeLane_set___(void * jarg1, const char * jarg2) {
  libsumo::TraCIJunctionFoe *arg1 = (libsumo::TraCIJunctionFoe *) 0 ;
  std::string *arg2 = 0 ;
  std::shared_ptr< libsumo::TraCIJunctionFoe > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIJunctionFoe > *)jarg1;
  arg1 = (libsumo::TraCIJunctionFoe *)(smartarg1 ? smartarg1->get() : 0); 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (arg1) (arg1)->foeLane = *arg2;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIJunctionFoe_foeLane_get___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCIJunctionFoe *arg1 = (libsumo::TraCIJunctionFoe *) 0 ;
  std::shared_ptr< libsumo::TraCIJunctionFoe > *smartarg1 = 0 ;
  std::string *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIJunctionFoe > *)jarg1;
  arg1 = (libsumo::TraCIJunctionFoe *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::string *) & ((arg1)->foeLane);
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIJunctionFoe_egoResponse_set___(void * jarg1, unsigned int jarg2) {
  libsumo::TraCIJunctionFoe *arg1 = (libsumo::TraCIJunctionFoe *) 0 ;
  bool arg2 ;
  std::shared_ptr< libsumo::TraCIJunctionFoe > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIJunctionFoe > *)jarg1;
  arg1 = (libsumo::TraCIJunctionFoe *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->egoResponse = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIJunctionFoe_egoResponse_get___(void * jarg1) {
  unsigned int jresult ;
  libsumo::TraCIJunctionFoe *arg1 = (libsumo::TraCIJunctionFoe *) 0 ;
  std::shared_ptr< libsumo::TraCIJunctionFoe > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIJunctionFoe > *)jarg1;
  arg1 = (libsumo::TraCIJunctionFoe *)(smartarg1 ? smartarg1->get() : 0); 
  result = (bool) ((arg1)->egoResponse);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIJunctionFoe_foeResponse_set___(void * jarg1, unsigned int jarg2) {
  libsumo::TraCIJunctionFoe *arg1 = (libsumo::TraCIJunctionFoe *) 0 ;
  bool arg2 ;
  std::shared_ptr< libsumo::TraCIJunctionFoe > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIJunctionFoe > *)jarg1;
  arg1 = (libsumo::TraCIJunctionFoe *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->foeResponse = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIJunctionFoe_foeResponse_get___(void * jarg1) {
  unsigned int jresult ;
  libsumo::TraCIJunctionFoe *arg1 = (libsumo::TraCIJunctionFoe *) 0 ;
  std::shared_ptr< libsumo::TraCIJunctionFoe > *smartarg1 = 0 ;
  bool result;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIJunctionFoe > *)jarg1;
  arg1 = (libsumo::TraCIJunctionFoe *)(smartarg1 ? smartarg1->get() : 0); 
  result = (bool) ((arg1)->foeResponse);
  jresult = result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIJunctionFoe_getString___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCIJunctionFoe *arg1 = (libsumo::TraCIJunctionFoe *) 0 ;
  std::shared_ptr< libsumo::TraCIJunctionFoe const > *smartarg1 = 0 ;
  std::string result;
  
  
  smartarg1 = (std::shared_ptr< const libsumo::TraCIJunctionFoe > *)jarg1;
  arg1 = (libsumo::TraCIJunctionFoe *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      result = ((libsumo::TraCIJunctionFoe const *)arg1)->getString();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIJunctionFoe___() {
  void * jresult ;
  libsumo::TraCIJunctionFoe *result = 0 ;
  
  {
    try {
      result = (libsumo::TraCIJunctionFoe *)new libsumo::TraCIJunctionFoe();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCIJunctionFoe >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_TraCIJunctionFoe___(void * jarg1) {
  libsumo::TraCIJunctionFoe *arg1 = (libsumo::TraCIJunctionFoe *) 0 ;
  std::shared_ptr< libsumo::TraCIJunctionFoe > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIJunctionFoe > *)jarg1;
  arg1 = (libsumo::TraCIJunctionFoe *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      (void)arg1; delete smartarg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIJunctionFoeVectorWrapped_getString___(void * jarg1) {
  const char * jresult ;
  libsumo::TraCIJunctionFoeVectorWrapped *arg1 = (libsumo::TraCIJunctionFoeVectorWrapped *) 0 ;
  std::shared_ptr< libsumo::TraCIJunctionFoeVectorWrapped const > *smartarg1 = 0 ;
  std::string result;
  
  
  smartarg1 = (std::shared_ptr< const libsumo::TraCIJunctionFoeVectorWrapped > *)jarg1;
  arg1 = (libsumo::TraCIJunctionFoeVectorWrapped *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      result = ((libsumo::TraCIJunctionFoeVectorWrapped const *)arg1)->getString();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIJunctionFoeVectorWrapped_value_set___(void * jarg1, void * jarg2) {
  libsumo::TraCIJunctionFoeVectorWrapped *arg1 = (libsumo::TraCIJunctionFoeVectorWrapped *) 0 ;
  std::vector< libsumo::TraCIJunctionFoe > *arg2 = (std::vector< libsumo::TraCIJunctionFoe > *) 0 ;
  std::shared_ptr< libsumo::TraCIJunctionFoeVectorWrapped > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIJunctionFoeVectorWrapped > *)jarg1;
  arg1 = (libsumo::TraCIJunctionFoeVectorWrapped *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (std::vector< libsumo::TraCIJunctionFoe > *)jarg2; 
  if (arg1) (arg1)->value = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIJunctionFoeVectorWrapped_value_get___(void * jarg1) {
  void * jresult ;
  libsumo::TraCIJunctionFoeVectorWrapped *arg1 = (libsumo::TraCIJunctionFoeVectorWrapped *) 0 ;
  std::shared_ptr< libsumo::TraCIJunctionFoeVectorWrapped > *smartarg1 = 0 ;
  std::vector< libsumo::TraCIJunctionFoe > *result = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIJunctionFoeVectorWrapped > *)jarg1;
  arg1 = (libsumo::TraCIJunctionFoeVectorWrapped *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::vector< libsumo::TraCIJunctionFoe > *)& ((arg1)->value);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIJunctionFoeVectorWrapped___() {
  void * jresult ;
  libsumo::TraCIJunctionFoeVectorWrapped *result = 0 ;
  
  {
    try {
      result = (libsumo::TraCIJunctionFoeVectorWrapped *)new libsumo::TraCIJunctionFoeVectorWrapped();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  
  jresult = result ? new std::shared_ptr<  libsumo::TraCIJunctionFoeVectorWrapped >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_TraCIJunctionFoeVectorWrapped___(void * jarg1) {
  libsumo::TraCIJunctionFoeVectorWrapped *arg1 = (libsumo::TraCIJunctionFoeVectorWrapped *) 0 ;
  std::shared_ptr< libsumo::TraCIJunctionFoeVectorWrapped > *smartarg1 = 0 ;
  
  
  smartarg1 = (std::shared_ptr<  libsumo::TraCIJunctionFoeVectorWrapped > *)jarg1;
  arg1 = (libsumo::TraCIJunctionFoeVectorWrapped *)(smartarg1 ? smartarg1->get() : 0); 
  {
    try {
      (void)arg1; delete smartarg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCILogicVector__SWIG_0___() {
  void * jresult ;
  std::vector< libsumo::TraCILogic > *result = 0 ;
  
  {
    try {
      result = (std::vector< libsumo::TraCILogic > *)new std::vector< libsumo::TraCILogic >();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCILogicVector__SWIG_1___(void * jarg1) {
  void * jresult ;
  std::vector< libsumo::TraCILogic > *arg1 = 0 ;
  std::vector< libsumo::TraCILogic > *result = 0 ;
  
  arg1 = (std::vector< libsumo::TraCILogic > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< libsumo::TraCILogic > const & is null", 0);
    return 0;
  } 
  {
    try {
      result = (std::vector< libsumo::TraCILogic > *)new std::vector< libsumo::TraCILogic >((std::vector< libsumo::TraCILogic > const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILogicVector_Clear___(void * jarg1) {
  std::vector< libsumo::TraCILogic > *arg1 = (std::vector< libsumo::TraCILogic > *) 0 ;
  
  arg1 = (std::vector< libsumo::TraCILogic > *)jarg1; 
  {
    try {
      (arg1)->clear();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILogicVector_Add___(void * jarg1, void * jarg2) {
  std::vector< libsumo::TraCILogic > *arg1 = (std::vector< libsumo::TraCILogic > *) 0 ;
  libsumo::TraCILogic *arg2 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCILogic > *)jarg1; 
  
  arg2 = (libsumo::TraCILogic *)(((std::shared_ptr< const libsumo::TraCILogic > *)jarg2) ? ((std::shared_ptr< const libsumo::TraCILogic > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCILogic const & reference is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->push_back((libsumo::TraCILogic const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILogicVector_size___(void * jarg1) {
  unsigned int jresult ;
  std::vector< libsumo::TraCILogic > *arg1 = (std::vector< libsumo::TraCILogic > *) 0 ;
  std::vector< libsumo::TraCILogic >::size_type result;
  
  arg1 = (std::vector< libsumo::TraCILogic > *)jarg1; 
  {
    try {
      result = ((std::vector< libsumo::TraCILogic > const *)arg1)->size();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (unsigned int)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILogicVector_empty___(void * jarg1) {
  unsigned int jresult ;
  std::vector< libsumo::TraCILogic > *arg1 = (std::vector< libsumo::TraCILogic > *) 0 ;
  bool result;
  
  arg1 = (std::vector< libsumo::TraCILogic > *)jarg1; 
  {
    try {
      result = (bool)((std::vector< libsumo::TraCILogic > const *)arg1)->empty();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILogicVector_capacity___(void * jarg1) {
  unsigned int jresult ;
  std::vector< libsumo::TraCILogic > *arg1 = (std::vector< libsumo::TraCILogic > *) 0 ;
  std::vector< libsumo::TraCILogic >::size_type result;
  
  arg1 = (std::vector< libsumo::TraCILogic > *)jarg1; 
  {
    try {
      result = ((std::vector< libsumo::TraCILogic > const *)arg1)->capacity();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (unsigned int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILogicVector_reserve___(void * jarg1, unsigned int jarg2) {
  std::vector< libsumo::TraCILogic > *arg1 = (std::vector< libsumo::TraCILogic > *) 0 ;
  std::vector< libsumo::TraCILogic >::size_type arg2 ;
  
  arg1 = (std::vector< libsumo::TraCILogic > *)jarg1; 
  arg2 = (std::vector< libsumo::TraCILogic >::size_type)jarg2; 
  {
    try {
      (arg1)->reserve(SWIG_STD_MOVE(arg2));
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCILogicVector__SWIG_2___(int jarg1) {
  void * jresult ;
  int arg1 ;
  std::vector< libsumo::TraCILogic > *result = 0 ;
  
  arg1 = (int)jarg1; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCILogic > *)new_std_vector_Sl_libsumo_TraCILogic_Sg___SWIG_2(arg1);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILogicVector_getitemcopy___(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< libsumo::TraCILogic > *arg1 = (std::vector< libsumo::TraCILogic > *) 0 ;
  int arg2 ;
  libsumo::TraCILogic result;
  
  arg1 = (std::vector< libsumo::TraCILogic > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = std_vector_Sl_libsumo_TraCILogic_Sg__getitemcopy(arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr<  libsumo::TraCILogic >(new libsumo::TraCILogic(result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILogicVector_getitem___(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< libsumo::TraCILogic > *arg1 = (std::vector< libsumo::TraCILogic > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCILogic >::value_type *result = 0 ;
  
  arg1 = (std::vector< libsumo::TraCILogic > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCILogic >::value_type *) &std_vector_Sl_libsumo_TraCILogic_Sg__getitem(arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr< const libsumo::TraCILogic >(result SWIG_NO_NULL_DELETER_0); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILogicVector_setitem___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< libsumo::TraCILogic > *arg1 = (std::vector< libsumo::TraCILogic > *) 0 ;
  int arg2 ;
  libsumo::TraCILogic *arg3 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCILogic > *)jarg1; 
  arg2 = (int)jarg2; 
  
  arg3 = (libsumo::TraCILogic *)(((std::shared_ptr< const libsumo::TraCILogic > *)jarg3) ? ((std::shared_ptr< const libsumo::TraCILogic > *)jarg3)->get() : 0);
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCILogic const & reference is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCILogic_Sg__setitem(arg1,arg2,(libsumo::TraCILogic const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILogicVector_AddRange___(void * jarg1, void * jarg2) {
  std::vector< libsumo::TraCILogic > *arg1 = (std::vector< libsumo::TraCILogic > *) 0 ;
  std::vector< libsumo::TraCILogic > *arg2 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCILogic > *)jarg1; 
  arg2 = (std::vector< libsumo::TraCILogic > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< libsumo::TraCILogic > const & is null", 0);
    return ;
  } 
  {
    try {
      std_vector_Sl_libsumo_TraCILogic_Sg__AddRange(arg1,(std::vector< libsumo::TraCILogic > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILogicVector_GetRange___(void * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  std::vector< libsumo::TraCILogic > *arg1 = (std::vector< libsumo::TraCILogic > *) 0 ;
  int arg2 ;
  int arg3 ;
  std::vector< libsumo::TraCILogic > *result = 0 ;
  
  arg1 = (std::vector< libsumo::TraCILogic > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCILogic > *)std_vector_Sl_libsumo_TraCILogic_Sg__GetRange(arg1,arg2,arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      } catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILogicVector_Insert___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< libsumo::TraCILogic > *arg1 = (std::vector< libsumo::TraCILogic > *) 0 ;
  int arg2 ;
  libsumo::TraCILogic *arg3 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCILogic > *)jarg1; 
  arg2 = (int)jarg2; 
  
  arg3 = (libsumo::TraCILogic *)(((std::shared_ptr< const libsumo::TraCILogic > *)jarg3) ? ((std::shared_ptr< const libsumo::TraCILogic > *)jarg3)->get() : 0);
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCILogic const & reference is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCILogic_Sg__Insert(arg1,arg2,(libsumo::TraCILogic const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILogicVector_InsertRange___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< libsumo::TraCILogic > *arg1 = (std::vector< libsumo::TraCILogic > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCILogic > *arg3 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCILogic > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< libsumo::TraCILogic > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< libsumo::TraCILogic > const & is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCILogic_Sg__InsertRange(arg1,arg2,(std::vector< libsumo::TraCILogic > const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILogicVector_RemoveAt___(void * jarg1, int jarg2) {
  std::vector< libsumo::TraCILogic > *arg1 = (std::vector< libsumo::TraCILogic > *) 0 ;
  int arg2 ;
  
  arg1 = (std::vector< libsumo::TraCILogic > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCILogic_Sg__RemoveAt(arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILogicVector_RemoveRange___(void * jarg1, int jarg2, int jarg3) {
  std::vector< libsumo::TraCILogic > *arg1 = (std::vector< libsumo::TraCILogic > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< libsumo::TraCILogic > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCILogic_Sg__RemoveRange(arg1,arg2,arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      } catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILogicVector_Repeat___(void * jarg1, int jarg2) {
  void * jresult ;
  libsumo::TraCILogic *arg1 = 0 ;
  int arg2 ;
  std::vector< libsumo::TraCILogic > *result = 0 ;
  
  
  arg1 = (libsumo::TraCILogic *)(((std::shared_ptr< const libsumo::TraCILogic > *)jarg1) ? ((std::shared_ptr< const libsumo::TraCILogic > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCILogic const & reference is null", 0);
    return 0;
  } 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCILogic > *)std_vector_Sl_libsumo_TraCILogic_Sg__Repeat((libsumo::TraCILogic const &)*arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILogicVector_Reverse__SWIG_0___(void * jarg1) {
  std::vector< libsumo::TraCILogic > *arg1 = (std::vector< libsumo::TraCILogic > *) 0 ;
  
  arg1 = (std::vector< libsumo::TraCILogic > *)jarg1; 
  {
    try {
      std_vector_Sl_libsumo_TraCILogic_Sg__Reverse__SWIG_0(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILogicVector_Reverse__SWIG_1___(void * jarg1, int jarg2, int jarg3) {
  std::vector< libsumo::TraCILogic > *arg1 = (std::vector< libsumo::TraCILogic > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< libsumo::TraCILogic > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCILogic_Sg__Reverse__SWIG_1(arg1,arg2,arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      } catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILogicVector_SetRange___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< libsumo::TraCILogic > *arg1 = (std::vector< libsumo::TraCILogic > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCILogic > *arg3 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCILogic > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< libsumo::TraCILogic > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< libsumo::TraCILogic > const & is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCILogic_Sg__SetRange(arg1,arg2,(std::vector< libsumo::TraCILogic > const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_TraCILogicVector___(void * jarg1) {
  std::vector< libsumo::TraCILogic > *arg1 = (std::vector< libsumo::TraCILogic > *) 0 ;
  
  arg1 = (std::vector< libsumo::TraCILogic > *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIStageVector__SWIG_0___() {
  void * jresult ;
  std::vector< libsumo::TraCIStage > *result = 0 ;
  
  {
    try {
      result = (std::vector< libsumo::TraCIStage > *)new std::vector< libsumo::TraCIStage >();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIStageVector__SWIG_1___(void * jarg1) {
  void * jresult ;
  std::vector< libsumo::TraCIStage > *arg1 = 0 ;
  std::vector< libsumo::TraCIStage > *result = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIStage > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< libsumo::TraCIStage > const & is null", 0);
    return 0;
  } 
  {
    try {
      result = (std::vector< libsumo::TraCIStage > *)new std::vector< libsumo::TraCIStage >((std::vector< libsumo::TraCIStage > const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIStageVector_Clear___(void * jarg1) {
  std::vector< libsumo::TraCIStage > *arg1 = (std::vector< libsumo::TraCIStage > *) 0 ;
  
  arg1 = (std::vector< libsumo::TraCIStage > *)jarg1; 
  {
    try {
      (arg1)->clear();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIStageVector_Add___(void * jarg1, void * jarg2) {
  std::vector< libsumo::TraCIStage > *arg1 = (std::vector< libsumo::TraCIStage > *) 0 ;
  libsumo::TraCIStage *arg2 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIStage > *)jarg1; 
  
  arg2 = (libsumo::TraCIStage *)(((std::shared_ptr< const libsumo::TraCIStage > *)jarg2) ? ((std::shared_ptr< const libsumo::TraCIStage > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIStage const & reference is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->push_back((libsumo::TraCIStage const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIStageVector_size___(void * jarg1) {
  unsigned int jresult ;
  std::vector< libsumo::TraCIStage > *arg1 = (std::vector< libsumo::TraCIStage > *) 0 ;
  std::vector< libsumo::TraCIStage >::size_type result;
  
  arg1 = (std::vector< libsumo::TraCIStage > *)jarg1; 
  {
    try {
      result = ((std::vector< libsumo::TraCIStage > const *)arg1)->size();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (unsigned int)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIStageVector_empty___(void * jarg1) {
  unsigned int jresult ;
  std::vector< libsumo::TraCIStage > *arg1 = (std::vector< libsumo::TraCIStage > *) 0 ;
  bool result;
  
  arg1 = (std::vector< libsumo::TraCIStage > *)jarg1; 
  {
    try {
      result = (bool)((std::vector< libsumo::TraCIStage > const *)arg1)->empty();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIStageVector_capacity___(void * jarg1) {
  unsigned int jresult ;
  std::vector< libsumo::TraCIStage > *arg1 = (std::vector< libsumo::TraCIStage > *) 0 ;
  std::vector< libsumo::TraCIStage >::size_type result;
  
  arg1 = (std::vector< libsumo::TraCIStage > *)jarg1; 
  {
    try {
      result = ((std::vector< libsumo::TraCIStage > const *)arg1)->capacity();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (unsigned int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIStageVector_reserve___(void * jarg1, unsigned int jarg2) {
  std::vector< libsumo::TraCIStage > *arg1 = (std::vector< libsumo::TraCIStage > *) 0 ;
  std::vector< libsumo::TraCIStage >::size_type arg2 ;
  
  arg1 = (std::vector< libsumo::TraCIStage > *)jarg1; 
  arg2 = (std::vector< libsumo::TraCIStage >::size_type)jarg2; 
  {
    try {
      (arg1)->reserve(SWIG_STD_MOVE(arg2));
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIStageVector__SWIG_2___(int jarg1) {
  void * jresult ;
  int arg1 ;
  std::vector< libsumo::TraCIStage > *result = 0 ;
  
  arg1 = (int)jarg1; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCIStage > *)new_std_vector_Sl_libsumo_TraCIStage_Sg___SWIG_2(arg1);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIStageVector_getitemcopy___(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< libsumo::TraCIStage > *arg1 = (std::vector< libsumo::TraCIStage > *) 0 ;
  int arg2 ;
  libsumo::TraCIStage result;
  
  arg1 = (std::vector< libsumo::TraCIStage > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = std_vector_Sl_libsumo_TraCIStage_Sg__getitemcopy(arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr<  libsumo::TraCIStage >(new libsumo::TraCIStage(result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIStageVector_getitem___(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< libsumo::TraCIStage > *arg1 = (std::vector< libsumo::TraCIStage > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCIStage >::value_type *result = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIStage > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCIStage >::value_type *) &std_vector_Sl_libsumo_TraCIStage_Sg__getitem(arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr< const libsumo::TraCIStage >(result SWIG_NO_NULL_DELETER_0); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIStageVector_setitem___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< libsumo::TraCIStage > *arg1 = (std::vector< libsumo::TraCIStage > *) 0 ;
  int arg2 ;
  libsumo::TraCIStage *arg3 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIStage > *)jarg1; 
  arg2 = (int)jarg2; 
  
  arg3 = (libsumo::TraCIStage *)(((std::shared_ptr< const libsumo::TraCIStage > *)jarg3) ? ((std::shared_ptr< const libsumo::TraCIStage > *)jarg3)->get() : 0);
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIStage const & reference is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCIStage_Sg__setitem(arg1,arg2,(libsumo::TraCIStage const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIStageVector_AddRange___(void * jarg1, void * jarg2) {
  std::vector< libsumo::TraCIStage > *arg1 = (std::vector< libsumo::TraCIStage > *) 0 ;
  std::vector< libsumo::TraCIStage > *arg2 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIStage > *)jarg1; 
  arg2 = (std::vector< libsumo::TraCIStage > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< libsumo::TraCIStage > const & is null", 0);
    return ;
  } 
  {
    try {
      std_vector_Sl_libsumo_TraCIStage_Sg__AddRange(arg1,(std::vector< libsumo::TraCIStage > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIStageVector_GetRange___(void * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  std::vector< libsumo::TraCIStage > *arg1 = (std::vector< libsumo::TraCIStage > *) 0 ;
  int arg2 ;
  int arg3 ;
  std::vector< libsumo::TraCIStage > *result = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIStage > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCIStage > *)std_vector_Sl_libsumo_TraCIStage_Sg__GetRange(arg1,arg2,arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      } catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIStageVector_Insert___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< libsumo::TraCIStage > *arg1 = (std::vector< libsumo::TraCIStage > *) 0 ;
  int arg2 ;
  libsumo::TraCIStage *arg3 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIStage > *)jarg1; 
  arg2 = (int)jarg2; 
  
  arg3 = (libsumo::TraCIStage *)(((std::shared_ptr< const libsumo::TraCIStage > *)jarg3) ? ((std::shared_ptr< const libsumo::TraCIStage > *)jarg3)->get() : 0);
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIStage const & reference is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCIStage_Sg__Insert(arg1,arg2,(libsumo::TraCIStage const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIStageVector_InsertRange___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< libsumo::TraCIStage > *arg1 = (std::vector< libsumo::TraCIStage > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCIStage > *arg3 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIStage > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< libsumo::TraCIStage > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< libsumo::TraCIStage > const & is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCIStage_Sg__InsertRange(arg1,arg2,(std::vector< libsumo::TraCIStage > const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIStageVector_RemoveAt___(void * jarg1, int jarg2) {
  std::vector< libsumo::TraCIStage > *arg1 = (std::vector< libsumo::TraCIStage > *) 0 ;
  int arg2 ;
  
  arg1 = (std::vector< libsumo::TraCIStage > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCIStage_Sg__RemoveAt(arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIStageVector_RemoveRange___(void * jarg1, int jarg2, int jarg3) {
  std::vector< libsumo::TraCIStage > *arg1 = (std::vector< libsumo::TraCIStage > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< libsumo::TraCIStage > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCIStage_Sg__RemoveRange(arg1,arg2,arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      } catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIStageVector_Repeat___(void * jarg1, int jarg2) {
  void * jresult ;
  libsumo::TraCIStage *arg1 = 0 ;
  int arg2 ;
  std::vector< libsumo::TraCIStage > *result = 0 ;
  
  
  arg1 = (libsumo::TraCIStage *)(((std::shared_ptr< const libsumo::TraCIStage > *)jarg1) ? ((std::shared_ptr< const libsumo::TraCIStage > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIStage const & reference is null", 0);
    return 0;
  } 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCIStage > *)std_vector_Sl_libsumo_TraCIStage_Sg__Repeat((libsumo::TraCIStage const &)*arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIStageVector_Reverse__SWIG_0___(void * jarg1) {
  std::vector< libsumo::TraCIStage > *arg1 = (std::vector< libsumo::TraCIStage > *) 0 ;
  
  arg1 = (std::vector< libsumo::TraCIStage > *)jarg1; 
  {
    try {
      std_vector_Sl_libsumo_TraCIStage_Sg__Reverse__SWIG_0(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIStageVector_Reverse__SWIG_1___(void * jarg1, int jarg2, int jarg3) {
  std::vector< libsumo::TraCIStage > *arg1 = (std::vector< libsumo::TraCIStage > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< libsumo::TraCIStage > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCIStage_Sg__Reverse__SWIG_1(arg1,arg2,arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      } catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIStageVector_SetRange___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< libsumo::TraCIStage > *arg1 = (std::vector< libsumo::TraCIStage > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCIStage > *arg3 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIStage > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< libsumo::TraCIStage > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< libsumo::TraCIStage > const & is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCIStage_Sg__SetRange(arg1,arg2,(std::vector< libsumo::TraCIStage > const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_TraCIStageVector___(void * jarg1) {
  std::vector< libsumo::TraCIStage > *arg1 = (std::vector< libsumo::TraCIStage > *) 0 ;
  
  arg1 = (std::vector< libsumo::TraCIStage > *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCINextStopDataVector__SWIG_0___() {
  void * jresult ;
  std::vector< libsumo::TraCINextStopData > *result = 0 ;
  
  {
    try {
      result = (std::vector< libsumo::TraCINextStopData > *)new std::vector< libsumo::TraCINextStopData >();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCINextStopDataVector__SWIG_1___(void * jarg1) {
  void * jresult ;
  std::vector< libsumo::TraCINextStopData > *arg1 = 0 ;
  std::vector< libsumo::TraCINextStopData > *result = 0 ;
  
  arg1 = (std::vector< libsumo::TraCINextStopData > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< libsumo::TraCINextStopData > const & is null", 0);
    return 0;
  } 
  {
    try {
      result = (std::vector< libsumo::TraCINextStopData > *)new std::vector< libsumo::TraCINextStopData >((std::vector< libsumo::TraCINextStopData > const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextStopDataVector_Clear___(void * jarg1) {
  std::vector< libsumo::TraCINextStopData > *arg1 = (std::vector< libsumo::TraCINextStopData > *) 0 ;
  
  arg1 = (std::vector< libsumo::TraCINextStopData > *)jarg1; 
  {
    try {
      (arg1)->clear();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextStopDataVector_Add___(void * jarg1, void * jarg2) {
  std::vector< libsumo::TraCINextStopData > *arg1 = (std::vector< libsumo::TraCINextStopData > *) 0 ;
  libsumo::TraCINextStopData *arg2 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCINextStopData > *)jarg1; 
  
  arg2 = (libsumo::TraCINextStopData *)(((std::shared_ptr< const libsumo::TraCINextStopData > *)jarg2) ? ((std::shared_ptr< const libsumo::TraCINextStopData > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCINextStopData const & reference is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->push_back((libsumo::TraCINextStopData const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextStopDataVector_size___(void * jarg1) {
  unsigned int jresult ;
  std::vector< libsumo::TraCINextStopData > *arg1 = (std::vector< libsumo::TraCINextStopData > *) 0 ;
  std::vector< libsumo::TraCINextStopData >::size_type result;
  
  arg1 = (std::vector< libsumo::TraCINextStopData > *)jarg1; 
  {
    try {
      result = ((std::vector< libsumo::TraCINextStopData > const *)arg1)->size();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (unsigned int)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextStopDataVector_empty___(void * jarg1) {
  unsigned int jresult ;
  std::vector< libsumo::TraCINextStopData > *arg1 = (std::vector< libsumo::TraCINextStopData > *) 0 ;
  bool result;
  
  arg1 = (std::vector< libsumo::TraCINextStopData > *)jarg1; 
  {
    try {
      result = (bool)((std::vector< libsumo::TraCINextStopData > const *)arg1)->empty();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextStopDataVector_capacity___(void * jarg1) {
  unsigned int jresult ;
  std::vector< libsumo::TraCINextStopData > *arg1 = (std::vector< libsumo::TraCINextStopData > *) 0 ;
  std::vector< libsumo::TraCINextStopData >::size_type result;
  
  arg1 = (std::vector< libsumo::TraCINextStopData > *)jarg1; 
  {
    try {
      result = ((std::vector< libsumo::TraCINextStopData > const *)arg1)->capacity();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (unsigned int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextStopDataVector_reserve___(void * jarg1, unsigned int jarg2) {
  std::vector< libsumo::TraCINextStopData > *arg1 = (std::vector< libsumo::TraCINextStopData > *) 0 ;
  std::vector< libsumo::TraCINextStopData >::size_type arg2 ;
  
  arg1 = (std::vector< libsumo::TraCINextStopData > *)jarg1; 
  arg2 = (std::vector< libsumo::TraCINextStopData >::size_type)jarg2; 
  {
    try {
      (arg1)->reserve(SWIG_STD_MOVE(arg2));
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCINextStopDataVector__SWIG_2___(int jarg1) {
  void * jresult ;
  int arg1 ;
  std::vector< libsumo::TraCINextStopData > *result = 0 ;
  
  arg1 = (int)jarg1; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCINextStopData > *)new_std_vector_Sl_libsumo_TraCINextStopData_Sg___SWIG_2(arg1);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextStopDataVector_getitemcopy___(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< libsumo::TraCINextStopData > *arg1 = (std::vector< libsumo::TraCINextStopData > *) 0 ;
  int arg2 ;
  libsumo::TraCINextStopData result;
  
  arg1 = (std::vector< libsumo::TraCINextStopData > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = std_vector_Sl_libsumo_TraCINextStopData_Sg__getitemcopy(arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr<  libsumo::TraCINextStopData >(new libsumo::TraCINextStopData(result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextStopDataVector_getitem___(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< libsumo::TraCINextStopData > *arg1 = (std::vector< libsumo::TraCINextStopData > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCINextStopData >::value_type *result = 0 ;
  
  arg1 = (std::vector< libsumo::TraCINextStopData > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCINextStopData >::value_type *) &std_vector_Sl_libsumo_TraCINextStopData_Sg__getitem(arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr< const libsumo::TraCINextStopData >(result SWIG_NO_NULL_DELETER_0); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextStopDataVector_setitem___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< libsumo::TraCINextStopData > *arg1 = (std::vector< libsumo::TraCINextStopData > *) 0 ;
  int arg2 ;
  libsumo::TraCINextStopData *arg3 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCINextStopData > *)jarg1; 
  arg2 = (int)jarg2; 
  
  arg3 = (libsumo::TraCINextStopData *)(((std::shared_ptr< const libsumo::TraCINextStopData > *)jarg3) ? ((std::shared_ptr< const libsumo::TraCINextStopData > *)jarg3)->get() : 0);
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCINextStopData const & reference is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCINextStopData_Sg__setitem(arg1,arg2,(libsumo::TraCINextStopData const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextStopDataVector_AddRange___(void * jarg1, void * jarg2) {
  std::vector< libsumo::TraCINextStopData > *arg1 = (std::vector< libsumo::TraCINextStopData > *) 0 ;
  std::vector< libsumo::TraCINextStopData > *arg2 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCINextStopData > *)jarg1; 
  arg2 = (std::vector< libsumo::TraCINextStopData > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< libsumo::TraCINextStopData > const & is null", 0);
    return ;
  } 
  {
    try {
      std_vector_Sl_libsumo_TraCINextStopData_Sg__AddRange(arg1,(std::vector< libsumo::TraCINextStopData > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextStopDataVector_GetRange___(void * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  std::vector< libsumo::TraCINextStopData > *arg1 = (std::vector< libsumo::TraCINextStopData > *) 0 ;
  int arg2 ;
  int arg3 ;
  std::vector< libsumo::TraCINextStopData > *result = 0 ;
  
  arg1 = (std::vector< libsumo::TraCINextStopData > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCINextStopData > *)std_vector_Sl_libsumo_TraCINextStopData_Sg__GetRange(arg1,arg2,arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      } catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextStopDataVector_Insert___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< libsumo::TraCINextStopData > *arg1 = (std::vector< libsumo::TraCINextStopData > *) 0 ;
  int arg2 ;
  libsumo::TraCINextStopData *arg3 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCINextStopData > *)jarg1; 
  arg2 = (int)jarg2; 
  
  arg3 = (libsumo::TraCINextStopData *)(((std::shared_ptr< const libsumo::TraCINextStopData > *)jarg3) ? ((std::shared_ptr< const libsumo::TraCINextStopData > *)jarg3)->get() : 0);
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCINextStopData const & reference is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCINextStopData_Sg__Insert(arg1,arg2,(libsumo::TraCINextStopData const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextStopDataVector_InsertRange___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< libsumo::TraCINextStopData > *arg1 = (std::vector< libsumo::TraCINextStopData > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCINextStopData > *arg3 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCINextStopData > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< libsumo::TraCINextStopData > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< libsumo::TraCINextStopData > const & is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCINextStopData_Sg__InsertRange(arg1,arg2,(std::vector< libsumo::TraCINextStopData > const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextStopDataVector_RemoveAt___(void * jarg1, int jarg2) {
  std::vector< libsumo::TraCINextStopData > *arg1 = (std::vector< libsumo::TraCINextStopData > *) 0 ;
  int arg2 ;
  
  arg1 = (std::vector< libsumo::TraCINextStopData > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCINextStopData_Sg__RemoveAt(arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextStopDataVector_RemoveRange___(void * jarg1, int jarg2, int jarg3) {
  std::vector< libsumo::TraCINextStopData > *arg1 = (std::vector< libsumo::TraCINextStopData > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< libsumo::TraCINextStopData > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCINextStopData_Sg__RemoveRange(arg1,arg2,arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      } catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextStopDataVector_Repeat___(void * jarg1, int jarg2) {
  void * jresult ;
  libsumo::TraCINextStopData *arg1 = 0 ;
  int arg2 ;
  std::vector< libsumo::TraCINextStopData > *result = 0 ;
  
  
  arg1 = (libsumo::TraCINextStopData *)(((std::shared_ptr< const libsumo::TraCINextStopData > *)jarg1) ? ((std::shared_ptr< const libsumo::TraCINextStopData > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCINextStopData const & reference is null", 0);
    return 0;
  } 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCINextStopData > *)std_vector_Sl_libsumo_TraCINextStopData_Sg__Repeat((libsumo::TraCINextStopData const &)*arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextStopDataVector_Reverse__SWIG_0___(void * jarg1) {
  std::vector< libsumo::TraCINextStopData > *arg1 = (std::vector< libsumo::TraCINextStopData > *) 0 ;
  
  arg1 = (std::vector< libsumo::TraCINextStopData > *)jarg1; 
  {
    try {
      std_vector_Sl_libsumo_TraCINextStopData_Sg__Reverse__SWIG_0(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextStopDataVector_Reverse__SWIG_1___(void * jarg1, int jarg2, int jarg3) {
  std::vector< libsumo::TraCINextStopData > *arg1 = (std::vector< libsumo::TraCINextStopData > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< libsumo::TraCINextStopData > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCINextStopData_Sg__Reverse__SWIG_1(arg1,arg2,arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      } catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextStopDataVector_SetRange___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< libsumo::TraCINextStopData > *arg1 = (std::vector< libsumo::TraCINextStopData > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCINextStopData > *arg3 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCINextStopData > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< libsumo::TraCINextStopData > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< libsumo::TraCINextStopData > const & is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCINextStopData_Sg__SetRange(arg1,arg2,(std::vector< libsumo::TraCINextStopData > const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_TraCINextStopDataVector___(void * jarg1) {
  std::vector< libsumo::TraCINextStopData > *arg1 = (std::vector< libsumo::TraCINextStopData > *) 0 ;
  
  arg1 = (std::vector< libsumo::TraCINextStopData > *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIReservationVector__SWIG_0___() {
  void * jresult ;
  std::vector< libsumo::TraCIReservation > *result = 0 ;
  
  {
    try {
      result = (std::vector< libsumo::TraCIReservation > *)new std::vector< libsumo::TraCIReservation >();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIReservationVector__SWIG_1___(void * jarg1) {
  void * jresult ;
  std::vector< libsumo::TraCIReservation > *arg1 = 0 ;
  std::vector< libsumo::TraCIReservation > *result = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIReservation > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< libsumo::TraCIReservation > const & is null", 0);
    return 0;
  } 
  {
    try {
      result = (std::vector< libsumo::TraCIReservation > *)new std::vector< libsumo::TraCIReservation >((std::vector< libsumo::TraCIReservation > const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIReservationVector_Clear___(void * jarg1) {
  std::vector< libsumo::TraCIReservation > *arg1 = (std::vector< libsumo::TraCIReservation > *) 0 ;
  
  arg1 = (std::vector< libsumo::TraCIReservation > *)jarg1; 
  {
    try {
      (arg1)->clear();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIReservationVector_Add___(void * jarg1, void * jarg2) {
  std::vector< libsumo::TraCIReservation > *arg1 = (std::vector< libsumo::TraCIReservation > *) 0 ;
  libsumo::TraCIReservation *arg2 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIReservation > *)jarg1; 
  
  arg2 = (libsumo::TraCIReservation *)(((std::shared_ptr< const libsumo::TraCIReservation > *)jarg2) ? ((std::shared_ptr< const libsumo::TraCIReservation > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIReservation const & reference is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->push_back((libsumo::TraCIReservation const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIReservationVector_size___(void * jarg1) {
  unsigned int jresult ;
  std::vector< libsumo::TraCIReservation > *arg1 = (std::vector< libsumo::TraCIReservation > *) 0 ;
  std::vector< libsumo::TraCIReservation >::size_type result;
  
  arg1 = (std::vector< libsumo::TraCIReservation > *)jarg1; 
  {
    try {
      result = ((std::vector< libsumo::TraCIReservation > const *)arg1)->size();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (unsigned int)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIReservationVector_empty___(void * jarg1) {
  unsigned int jresult ;
  std::vector< libsumo::TraCIReservation > *arg1 = (std::vector< libsumo::TraCIReservation > *) 0 ;
  bool result;
  
  arg1 = (std::vector< libsumo::TraCIReservation > *)jarg1; 
  {
    try {
      result = (bool)((std::vector< libsumo::TraCIReservation > const *)arg1)->empty();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIReservationVector_capacity___(void * jarg1) {
  unsigned int jresult ;
  std::vector< libsumo::TraCIReservation > *arg1 = (std::vector< libsumo::TraCIReservation > *) 0 ;
  std::vector< libsumo::TraCIReservation >::size_type result;
  
  arg1 = (std::vector< libsumo::TraCIReservation > *)jarg1; 
  {
    try {
      result = ((std::vector< libsumo::TraCIReservation > const *)arg1)->capacity();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (unsigned int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIReservationVector_reserve___(void * jarg1, unsigned int jarg2) {
  std::vector< libsumo::TraCIReservation > *arg1 = (std::vector< libsumo::TraCIReservation > *) 0 ;
  std::vector< libsumo::TraCIReservation >::size_type arg2 ;
  
  arg1 = (std::vector< libsumo::TraCIReservation > *)jarg1; 
  arg2 = (std::vector< libsumo::TraCIReservation >::size_type)jarg2; 
  {
    try {
      (arg1)->reserve(SWIG_STD_MOVE(arg2));
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIReservationVector__SWIG_2___(int jarg1) {
  void * jresult ;
  int arg1 ;
  std::vector< libsumo::TraCIReservation > *result = 0 ;
  
  arg1 = (int)jarg1; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCIReservation > *)new_std_vector_Sl_libsumo_TraCIReservation_Sg___SWIG_2(arg1);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIReservationVector_getitemcopy___(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< libsumo::TraCIReservation > *arg1 = (std::vector< libsumo::TraCIReservation > *) 0 ;
  int arg2 ;
  libsumo::TraCIReservation result;
  
  arg1 = (std::vector< libsumo::TraCIReservation > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = std_vector_Sl_libsumo_TraCIReservation_Sg__getitemcopy(arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr<  libsumo::TraCIReservation >(new libsumo::TraCIReservation(result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIReservationVector_getitem___(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< libsumo::TraCIReservation > *arg1 = (std::vector< libsumo::TraCIReservation > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCIReservation >::value_type *result = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIReservation > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCIReservation >::value_type *) &std_vector_Sl_libsumo_TraCIReservation_Sg__getitem(arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr< const libsumo::TraCIReservation >(result SWIG_NO_NULL_DELETER_0); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIReservationVector_setitem___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< libsumo::TraCIReservation > *arg1 = (std::vector< libsumo::TraCIReservation > *) 0 ;
  int arg2 ;
  libsumo::TraCIReservation *arg3 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIReservation > *)jarg1; 
  arg2 = (int)jarg2; 
  
  arg3 = (libsumo::TraCIReservation *)(((std::shared_ptr< const libsumo::TraCIReservation > *)jarg3) ? ((std::shared_ptr< const libsumo::TraCIReservation > *)jarg3)->get() : 0);
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIReservation const & reference is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCIReservation_Sg__setitem(arg1,arg2,(libsumo::TraCIReservation const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIReservationVector_AddRange___(void * jarg1, void * jarg2) {
  std::vector< libsumo::TraCIReservation > *arg1 = (std::vector< libsumo::TraCIReservation > *) 0 ;
  std::vector< libsumo::TraCIReservation > *arg2 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIReservation > *)jarg1; 
  arg2 = (std::vector< libsumo::TraCIReservation > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< libsumo::TraCIReservation > const & is null", 0);
    return ;
  } 
  {
    try {
      std_vector_Sl_libsumo_TraCIReservation_Sg__AddRange(arg1,(std::vector< libsumo::TraCIReservation > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIReservationVector_GetRange___(void * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  std::vector< libsumo::TraCIReservation > *arg1 = (std::vector< libsumo::TraCIReservation > *) 0 ;
  int arg2 ;
  int arg3 ;
  std::vector< libsumo::TraCIReservation > *result = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIReservation > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCIReservation > *)std_vector_Sl_libsumo_TraCIReservation_Sg__GetRange(arg1,arg2,arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      } catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIReservationVector_Insert___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< libsumo::TraCIReservation > *arg1 = (std::vector< libsumo::TraCIReservation > *) 0 ;
  int arg2 ;
  libsumo::TraCIReservation *arg3 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIReservation > *)jarg1; 
  arg2 = (int)jarg2; 
  
  arg3 = (libsumo::TraCIReservation *)(((std::shared_ptr< const libsumo::TraCIReservation > *)jarg3) ? ((std::shared_ptr< const libsumo::TraCIReservation > *)jarg3)->get() : 0);
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIReservation const & reference is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCIReservation_Sg__Insert(arg1,arg2,(libsumo::TraCIReservation const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIReservationVector_InsertRange___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< libsumo::TraCIReservation > *arg1 = (std::vector< libsumo::TraCIReservation > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCIReservation > *arg3 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIReservation > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< libsumo::TraCIReservation > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< libsumo::TraCIReservation > const & is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCIReservation_Sg__InsertRange(arg1,arg2,(std::vector< libsumo::TraCIReservation > const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIReservationVector_RemoveAt___(void * jarg1, int jarg2) {
  std::vector< libsumo::TraCIReservation > *arg1 = (std::vector< libsumo::TraCIReservation > *) 0 ;
  int arg2 ;
  
  arg1 = (std::vector< libsumo::TraCIReservation > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCIReservation_Sg__RemoveAt(arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIReservationVector_RemoveRange___(void * jarg1, int jarg2, int jarg3) {
  std::vector< libsumo::TraCIReservation > *arg1 = (std::vector< libsumo::TraCIReservation > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< libsumo::TraCIReservation > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCIReservation_Sg__RemoveRange(arg1,arg2,arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      } catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIReservationVector_Repeat___(void * jarg1, int jarg2) {
  void * jresult ;
  libsumo::TraCIReservation *arg1 = 0 ;
  int arg2 ;
  std::vector< libsumo::TraCIReservation > *result = 0 ;
  
  
  arg1 = (libsumo::TraCIReservation *)(((std::shared_ptr< const libsumo::TraCIReservation > *)jarg1) ? ((std::shared_ptr< const libsumo::TraCIReservation > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIReservation const & reference is null", 0);
    return 0;
  } 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCIReservation > *)std_vector_Sl_libsumo_TraCIReservation_Sg__Repeat((libsumo::TraCIReservation const &)*arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIReservationVector_Reverse__SWIG_0___(void * jarg1) {
  std::vector< libsumo::TraCIReservation > *arg1 = (std::vector< libsumo::TraCIReservation > *) 0 ;
  
  arg1 = (std::vector< libsumo::TraCIReservation > *)jarg1; 
  {
    try {
      std_vector_Sl_libsumo_TraCIReservation_Sg__Reverse__SWIG_0(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIReservationVector_Reverse__SWIG_1___(void * jarg1, int jarg2, int jarg3) {
  std::vector< libsumo::TraCIReservation > *arg1 = (std::vector< libsumo::TraCIReservation > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< libsumo::TraCIReservation > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCIReservation_Sg__Reverse__SWIG_1(arg1,arg2,arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      } catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIReservationVector_SetRange___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< libsumo::TraCIReservation > *arg1 = (std::vector< libsumo::TraCIReservation > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCIReservation > *arg3 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIReservation > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< libsumo::TraCIReservation > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< libsumo::TraCIReservation > const & is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCIReservation_Sg__SetRange(arg1,arg2,(std::vector< libsumo::TraCIReservation > const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_TraCIReservationVector___(void * jarg1) {
  std::vector< libsumo::TraCIReservation > *arg1 = (std::vector< libsumo::TraCIReservation > *) 0 ;
  
  arg1 = (std::vector< libsumo::TraCIReservation > *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCISignalConstraintVector__SWIG_0___() {
  void * jresult ;
  std::vector< libsumo::TraCISignalConstraint > *result = 0 ;
  
  {
    try {
      result = (std::vector< libsumo::TraCISignalConstraint > *)new std::vector< libsumo::TraCISignalConstraint >();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCISignalConstraintVector__SWIG_1___(void * jarg1) {
  void * jresult ;
  std::vector< libsumo::TraCISignalConstraint > *arg1 = 0 ;
  std::vector< libsumo::TraCISignalConstraint > *result = 0 ;
  
  arg1 = (std::vector< libsumo::TraCISignalConstraint > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< libsumo::TraCISignalConstraint > const & is null", 0);
    return 0;
  } 
  {
    try {
      result = (std::vector< libsumo::TraCISignalConstraint > *)new std::vector< libsumo::TraCISignalConstraint >((std::vector< libsumo::TraCISignalConstraint > const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCISignalConstraintVector_Clear___(void * jarg1) {
  std::vector< libsumo::TraCISignalConstraint > *arg1 = (std::vector< libsumo::TraCISignalConstraint > *) 0 ;
  
  arg1 = (std::vector< libsumo::TraCISignalConstraint > *)jarg1; 
  {
    try {
      (arg1)->clear();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCISignalConstraintVector_Add___(void * jarg1, void * jarg2) {
  std::vector< libsumo::TraCISignalConstraint > *arg1 = (std::vector< libsumo::TraCISignalConstraint > *) 0 ;
  libsumo::TraCISignalConstraint *arg2 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCISignalConstraint > *)jarg1; 
  
  arg2 = (libsumo::TraCISignalConstraint *)(((std::shared_ptr< const libsumo::TraCISignalConstraint > *)jarg2) ? ((std::shared_ptr< const libsumo::TraCISignalConstraint > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCISignalConstraint const & reference is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->push_back((libsumo::TraCISignalConstraint const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCISignalConstraintVector_size___(void * jarg1) {
  unsigned int jresult ;
  std::vector< libsumo::TraCISignalConstraint > *arg1 = (std::vector< libsumo::TraCISignalConstraint > *) 0 ;
  std::vector< libsumo::TraCISignalConstraint >::size_type result;
  
  arg1 = (std::vector< libsumo::TraCISignalConstraint > *)jarg1; 
  {
    try {
      result = ((std::vector< libsumo::TraCISignalConstraint > const *)arg1)->size();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (unsigned int)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCISignalConstraintVector_empty___(void * jarg1) {
  unsigned int jresult ;
  std::vector< libsumo::TraCISignalConstraint > *arg1 = (std::vector< libsumo::TraCISignalConstraint > *) 0 ;
  bool result;
  
  arg1 = (std::vector< libsumo::TraCISignalConstraint > *)jarg1; 
  {
    try {
      result = (bool)((std::vector< libsumo::TraCISignalConstraint > const *)arg1)->empty();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCISignalConstraintVector_capacity___(void * jarg1) {
  unsigned int jresult ;
  std::vector< libsumo::TraCISignalConstraint > *arg1 = (std::vector< libsumo::TraCISignalConstraint > *) 0 ;
  std::vector< libsumo::TraCISignalConstraint >::size_type result;
  
  arg1 = (std::vector< libsumo::TraCISignalConstraint > *)jarg1; 
  {
    try {
      result = ((std::vector< libsumo::TraCISignalConstraint > const *)arg1)->capacity();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (unsigned int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCISignalConstraintVector_reserve___(void * jarg1, unsigned int jarg2) {
  std::vector< libsumo::TraCISignalConstraint > *arg1 = (std::vector< libsumo::TraCISignalConstraint > *) 0 ;
  std::vector< libsumo::TraCISignalConstraint >::size_type arg2 ;
  
  arg1 = (std::vector< libsumo::TraCISignalConstraint > *)jarg1; 
  arg2 = (std::vector< libsumo::TraCISignalConstraint >::size_type)jarg2; 
  {
    try {
      (arg1)->reserve(SWIG_STD_MOVE(arg2));
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCISignalConstraintVector__SWIG_2___(int jarg1) {
  void * jresult ;
  int arg1 ;
  std::vector< libsumo::TraCISignalConstraint > *result = 0 ;
  
  arg1 = (int)jarg1; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCISignalConstraint > *)new_std_vector_Sl_libsumo_TraCISignalConstraint_Sg___SWIG_2(arg1);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCISignalConstraintVector_getitemcopy___(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< libsumo::TraCISignalConstraint > *arg1 = (std::vector< libsumo::TraCISignalConstraint > *) 0 ;
  int arg2 ;
  libsumo::TraCISignalConstraint result;
  
  arg1 = (std::vector< libsumo::TraCISignalConstraint > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = std_vector_Sl_libsumo_TraCISignalConstraint_Sg__getitemcopy(arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr<  libsumo::TraCISignalConstraint >(new libsumo::TraCISignalConstraint(result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCISignalConstraintVector_getitem___(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< libsumo::TraCISignalConstraint > *arg1 = (std::vector< libsumo::TraCISignalConstraint > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCISignalConstraint >::value_type *result = 0 ;
  
  arg1 = (std::vector< libsumo::TraCISignalConstraint > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCISignalConstraint >::value_type *) &std_vector_Sl_libsumo_TraCISignalConstraint_Sg__getitem(arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr< const libsumo::TraCISignalConstraint >(result SWIG_NO_NULL_DELETER_0); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCISignalConstraintVector_setitem___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< libsumo::TraCISignalConstraint > *arg1 = (std::vector< libsumo::TraCISignalConstraint > *) 0 ;
  int arg2 ;
  libsumo::TraCISignalConstraint *arg3 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCISignalConstraint > *)jarg1; 
  arg2 = (int)jarg2; 
  
  arg3 = (libsumo::TraCISignalConstraint *)(((std::shared_ptr< const libsumo::TraCISignalConstraint > *)jarg3) ? ((std::shared_ptr< const libsumo::TraCISignalConstraint > *)jarg3)->get() : 0);
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCISignalConstraint const & reference is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCISignalConstraint_Sg__setitem(arg1,arg2,(libsumo::TraCISignalConstraint const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCISignalConstraintVector_AddRange___(void * jarg1, void * jarg2) {
  std::vector< libsumo::TraCISignalConstraint > *arg1 = (std::vector< libsumo::TraCISignalConstraint > *) 0 ;
  std::vector< libsumo::TraCISignalConstraint > *arg2 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCISignalConstraint > *)jarg1; 
  arg2 = (std::vector< libsumo::TraCISignalConstraint > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< libsumo::TraCISignalConstraint > const & is null", 0);
    return ;
  } 
  {
    try {
      std_vector_Sl_libsumo_TraCISignalConstraint_Sg__AddRange(arg1,(std::vector< libsumo::TraCISignalConstraint > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCISignalConstraintVector_GetRange___(void * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  std::vector< libsumo::TraCISignalConstraint > *arg1 = (std::vector< libsumo::TraCISignalConstraint > *) 0 ;
  int arg2 ;
  int arg3 ;
  std::vector< libsumo::TraCISignalConstraint > *result = 0 ;
  
  arg1 = (std::vector< libsumo::TraCISignalConstraint > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCISignalConstraint > *)std_vector_Sl_libsumo_TraCISignalConstraint_Sg__GetRange(arg1,arg2,arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      } catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCISignalConstraintVector_Insert___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< libsumo::TraCISignalConstraint > *arg1 = (std::vector< libsumo::TraCISignalConstraint > *) 0 ;
  int arg2 ;
  libsumo::TraCISignalConstraint *arg3 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCISignalConstraint > *)jarg1; 
  arg2 = (int)jarg2; 
  
  arg3 = (libsumo::TraCISignalConstraint *)(((std::shared_ptr< const libsumo::TraCISignalConstraint > *)jarg3) ? ((std::shared_ptr< const libsumo::TraCISignalConstraint > *)jarg3)->get() : 0);
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCISignalConstraint const & reference is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCISignalConstraint_Sg__Insert(arg1,arg2,(libsumo::TraCISignalConstraint const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCISignalConstraintVector_InsertRange___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< libsumo::TraCISignalConstraint > *arg1 = (std::vector< libsumo::TraCISignalConstraint > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCISignalConstraint > *arg3 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCISignalConstraint > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< libsumo::TraCISignalConstraint > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< libsumo::TraCISignalConstraint > const & is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCISignalConstraint_Sg__InsertRange(arg1,arg2,(std::vector< libsumo::TraCISignalConstraint > const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCISignalConstraintVector_RemoveAt___(void * jarg1, int jarg2) {
  std::vector< libsumo::TraCISignalConstraint > *arg1 = (std::vector< libsumo::TraCISignalConstraint > *) 0 ;
  int arg2 ;
  
  arg1 = (std::vector< libsumo::TraCISignalConstraint > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCISignalConstraint_Sg__RemoveAt(arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCISignalConstraintVector_RemoveRange___(void * jarg1, int jarg2, int jarg3) {
  std::vector< libsumo::TraCISignalConstraint > *arg1 = (std::vector< libsumo::TraCISignalConstraint > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< libsumo::TraCISignalConstraint > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCISignalConstraint_Sg__RemoveRange(arg1,arg2,arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      } catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCISignalConstraintVector_Repeat___(void * jarg1, int jarg2) {
  void * jresult ;
  libsumo::TraCISignalConstraint *arg1 = 0 ;
  int arg2 ;
  std::vector< libsumo::TraCISignalConstraint > *result = 0 ;
  
  
  arg1 = (libsumo::TraCISignalConstraint *)(((std::shared_ptr< const libsumo::TraCISignalConstraint > *)jarg1) ? ((std::shared_ptr< const libsumo::TraCISignalConstraint > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCISignalConstraint const & reference is null", 0);
    return 0;
  } 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCISignalConstraint > *)std_vector_Sl_libsumo_TraCISignalConstraint_Sg__Repeat((libsumo::TraCISignalConstraint const &)*arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCISignalConstraintVector_Reverse__SWIG_0___(void * jarg1) {
  std::vector< libsumo::TraCISignalConstraint > *arg1 = (std::vector< libsumo::TraCISignalConstraint > *) 0 ;
  
  arg1 = (std::vector< libsumo::TraCISignalConstraint > *)jarg1; 
  {
    try {
      std_vector_Sl_libsumo_TraCISignalConstraint_Sg__Reverse__SWIG_0(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCISignalConstraintVector_Reverse__SWIG_1___(void * jarg1, int jarg2, int jarg3) {
  std::vector< libsumo::TraCISignalConstraint > *arg1 = (std::vector< libsumo::TraCISignalConstraint > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< libsumo::TraCISignalConstraint > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCISignalConstraint_Sg__Reverse__SWIG_1(arg1,arg2,arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      } catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCISignalConstraintVector_SetRange___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< libsumo::TraCISignalConstraint > *arg1 = (std::vector< libsumo::TraCISignalConstraint > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCISignalConstraint > *arg3 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCISignalConstraint > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< libsumo::TraCISignalConstraint > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< libsumo::TraCISignalConstraint > const & is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCISignalConstraint_Sg__SetRange(arg1,arg2,(std::vector< libsumo::TraCISignalConstraint > const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_TraCISignalConstraintVector___(void * jarg1) {
  std::vector< libsumo::TraCISignalConstraint > *arg1 = (std::vector< libsumo::TraCISignalConstraint > *) 0 ;
  
  arg1 = (std::vector< libsumo::TraCISignalConstraint > *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCICollisionVector__SWIG_0___() {
  void * jresult ;
  std::vector< libsumo::TraCICollision > *result = 0 ;
  
  {
    try {
      result = (std::vector< libsumo::TraCICollision > *)new std::vector< libsumo::TraCICollision >();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCICollisionVector__SWIG_1___(void * jarg1) {
  void * jresult ;
  std::vector< libsumo::TraCICollision > *arg1 = 0 ;
  std::vector< libsumo::TraCICollision > *result = 0 ;
  
  arg1 = (std::vector< libsumo::TraCICollision > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< libsumo::TraCICollision > const & is null", 0);
    return 0;
  } 
  {
    try {
      result = (std::vector< libsumo::TraCICollision > *)new std::vector< libsumo::TraCICollision >((std::vector< libsumo::TraCICollision > const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCICollisionVector_Clear___(void * jarg1) {
  std::vector< libsumo::TraCICollision > *arg1 = (std::vector< libsumo::TraCICollision > *) 0 ;
  
  arg1 = (std::vector< libsumo::TraCICollision > *)jarg1; 
  {
    try {
      (arg1)->clear();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCICollisionVector_Add___(void * jarg1, void * jarg2) {
  std::vector< libsumo::TraCICollision > *arg1 = (std::vector< libsumo::TraCICollision > *) 0 ;
  libsumo::TraCICollision *arg2 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCICollision > *)jarg1; 
  
  arg2 = (libsumo::TraCICollision *)(((std::shared_ptr< const libsumo::TraCICollision > *)jarg2) ? ((std::shared_ptr< const libsumo::TraCICollision > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCICollision const & reference is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->push_back((libsumo::TraCICollision const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCICollisionVector_size___(void * jarg1) {
  unsigned int jresult ;
  std::vector< libsumo::TraCICollision > *arg1 = (std::vector< libsumo::TraCICollision > *) 0 ;
  std::vector< libsumo::TraCICollision >::size_type result;
  
  arg1 = (std::vector< libsumo::TraCICollision > *)jarg1; 
  {
    try {
      result = ((std::vector< libsumo::TraCICollision > const *)arg1)->size();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (unsigned int)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCICollisionVector_empty___(void * jarg1) {
  unsigned int jresult ;
  std::vector< libsumo::TraCICollision > *arg1 = (std::vector< libsumo::TraCICollision > *) 0 ;
  bool result;
  
  arg1 = (std::vector< libsumo::TraCICollision > *)jarg1; 
  {
    try {
      result = (bool)((std::vector< libsumo::TraCICollision > const *)arg1)->empty();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCICollisionVector_capacity___(void * jarg1) {
  unsigned int jresult ;
  std::vector< libsumo::TraCICollision > *arg1 = (std::vector< libsumo::TraCICollision > *) 0 ;
  std::vector< libsumo::TraCICollision >::size_type result;
  
  arg1 = (std::vector< libsumo::TraCICollision > *)jarg1; 
  {
    try {
      result = ((std::vector< libsumo::TraCICollision > const *)arg1)->capacity();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (unsigned int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCICollisionVector_reserve___(void * jarg1, unsigned int jarg2) {
  std::vector< libsumo::TraCICollision > *arg1 = (std::vector< libsumo::TraCICollision > *) 0 ;
  std::vector< libsumo::TraCICollision >::size_type arg2 ;
  
  arg1 = (std::vector< libsumo::TraCICollision > *)jarg1; 
  arg2 = (std::vector< libsumo::TraCICollision >::size_type)jarg2; 
  {
    try {
      (arg1)->reserve(SWIG_STD_MOVE(arg2));
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCICollisionVector__SWIG_2___(int jarg1) {
  void * jresult ;
  int arg1 ;
  std::vector< libsumo::TraCICollision > *result = 0 ;
  
  arg1 = (int)jarg1; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCICollision > *)new_std_vector_Sl_libsumo_TraCICollision_Sg___SWIG_2(arg1);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCICollisionVector_getitemcopy___(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< libsumo::TraCICollision > *arg1 = (std::vector< libsumo::TraCICollision > *) 0 ;
  int arg2 ;
  libsumo::TraCICollision result;
  
  arg1 = (std::vector< libsumo::TraCICollision > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = std_vector_Sl_libsumo_TraCICollision_Sg__getitemcopy(arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr<  libsumo::TraCICollision >(new libsumo::TraCICollision(result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCICollisionVector_getitem___(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< libsumo::TraCICollision > *arg1 = (std::vector< libsumo::TraCICollision > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCICollision >::value_type *result = 0 ;
  
  arg1 = (std::vector< libsumo::TraCICollision > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCICollision >::value_type *) &std_vector_Sl_libsumo_TraCICollision_Sg__getitem(arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr< const libsumo::TraCICollision >(result SWIG_NO_NULL_DELETER_0); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCICollisionVector_setitem___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< libsumo::TraCICollision > *arg1 = (std::vector< libsumo::TraCICollision > *) 0 ;
  int arg2 ;
  libsumo::TraCICollision *arg3 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCICollision > *)jarg1; 
  arg2 = (int)jarg2; 
  
  arg3 = (libsumo::TraCICollision *)(((std::shared_ptr< const libsumo::TraCICollision > *)jarg3) ? ((std::shared_ptr< const libsumo::TraCICollision > *)jarg3)->get() : 0);
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCICollision const & reference is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCICollision_Sg__setitem(arg1,arg2,(libsumo::TraCICollision const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCICollisionVector_AddRange___(void * jarg1, void * jarg2) {
  std::vector< libsumo::TraCICollision > *arg1 = (std::vector< libsumo::TraCICollision > *) 0 ;
  std::vector< libsumo::TraCICollision > *arg2 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCICollision > *)jarg1; 
  arg2 = (std::vector< libsumo::TraCICollision > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< libsumo::TraCICollision > const & is null", 0);
    return ;
  } 
  {
    try {
      std_vector_Sl_libsumo_TraCICollision_Sg__AddRange(arg1,(std::vector< libsumo::TraCICollision > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCICollisionVector_GetRange___(void * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  std::vector< libsumo::TraCICollision > *arg1 = (std::vector< libsumo::TraCICollision > *) 0 ;
  int arg2 ;
  int arg3 ;
  std::vector< libsumo::TraCICollision > *result = 0 ;
  
  arg1 = (std::vector< libsumo::TraCICollision > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCICollision > *)std_vector_Sl_libsumo_TraCICollision_Sg__GetRange(arg1,arg2,arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      } catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCICollisionVector_Insert___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< libsumo::TraCICollision > *arg1 = (std::vector< libsumo::TraCICollision > *) 0 ;
  int arg2 ;
  libsumo::TraCICollision *arg3 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCICollision > *)jarg1; 
  arg2 = (int)jarg2; 
  
  arg3 = (libsumo::TraCICollision *)(((std::shared_ptr< const libsumo::TraCICollision > *)jarg3) ? ((std::shared_ptr< const libsumo::TraCICollision > *)jarg3)->get() : 0);
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCICollision const & reference is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCICollision_Sg__Insert(arg1,arg2,(libsumo::TraCICollision const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCICollisionVector_InsertRange___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< libsumo::TraCICollision > *arg1 = (std::vector< libsumo::TraCICollision > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCICollision > *arg3 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCICollision > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< libsumo::TraCICollision > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< libsumo::TraCICollision > const & is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCICollision_Sg__InsertRange(arg1,arg2,(std::vector< libsumo::TraCICollision > const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCICollisionVector_RemoveAt___(void * jarg1, int jarg2) {
  std::vector< libsumo::TraCICollision > *arg1 = (std::vector< libsumo::TraCICollision > *) 0 ;
  int arg2 ;
  
  arg1 = (std::vector< libsumo::TraCICollision > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCICollision_Sg__RemoveAt(arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCICollisionVector_RemoveRange___(void * jarg1, int jarg2, int jarg3) {
  std::vector< libsumo::TraCICollision > *arg1 = (std::vector< libsumo::TraCICollision > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< libsumo::TraCICollision > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCICollision_Sg__RemoveRange(arg1,arg2,arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      } catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCICollisionVector_Repeat___(void * jarg1, int jarg2) {
  void * jresult ;
  libsumo::TraCICollision *arg1 = 0 ;
  int arg2 ;
  std::vector< libsumo::TraCICollision > *result = 0 ;
  
  
  arg1 = (libsumo::TraCICollision *)(((std::shared_ptr< const libsumo::TraCICollision > *)jarg1) ? ((std::shared_ptr< const libsumo::TraCICollision > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCICollision const & reference is null", 0);
    return 0;
  } 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCICollision > *)std_vector_Sl_libsumo_TraCICollision_Sg__Repeat((libsumo::TraCICollision const &)*arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCICollisionVector_Reverse__SWIG_0___(void * jarg1) {
  std::vector< libsumo::TraCICollision > *arg1 = (std::vector< libsumo::TraCICollision > *) 0 ;
  
  arg1 = (std::vector< libsumo::TraCICollision > *)jarg1; 
  {
    try {
      std_vector_Sl_libsumo_TraCICollision_Sg__Reverse__SWIG_0(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCICollisionVector_Reverse__SWIG_1___(void * jarg1, int jarg2, int jarg3) {
  std::vector< libsumo::TraCICollision > *arg1 = (std::vector< libsumo::TraCICollision > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< libsumo::TraCICollision > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCICollision_Sg__Reverse__SWIG_1(arg1,arg2,arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      } catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCICollisionVector_SetRange___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< libsumo::TraCICollision > *arg1 = (std::vector< libsumo::TraCICollision > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCICollision > *arg3 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCICollision > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< libsumo::TraCICollision > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< libsumo::TraCICollision > const & is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCICollision_Sg__SetRange(arg1,arg2,(std::vector< libsumo::TraCICollision > const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_TraCICollisionVector___(void * jarg1) {
  std::vector< libsumo::TraCICollision > *arg1 = (std::vector< libsumo::TraCICollision > *) 0 ;
  
  arg1 = (std::vector< libsumo::TraCICollision > *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIBestLanesDataVector__SWIG_0___() {
  void * jresult ;
  std::vector< libsumo::TraCIBestLanesData > *result = 0 ;
  
  {
    try {
      result = (std::vector< libsumo::TraCIBestLanesData > *)new std::vector< libsumo::TraCIBestLanesData >();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIBestLanesDataVector__SWIG_1___(void * jarg1) {
  void * jresult ;
  std::vector< libsumo::TraCIBestLanesData > *arg1 = 0 ;
  std::vector< libsumo::TraCIBestLanesData > *result = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIBestLanesData > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< libsumo::TraCIBestLanesData > const & is null", 0);
    return 0;
  } 
  {
    try {
      result = (std::vector< libsumo::TraCIBestLanesData > *)new std::vector< libsumo::TraCIBestLanesData >((std::vector< libsumo::TraCIBestLanesData > const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIBestLanesDataVector_Clear___(void * jarg1) {
  std::vector< libsumo::TraCIBestLanesData > *arg1 = (std::vector< libsumo::TraCIBestLanesData > *) 0 ;
  
  arg1 = (std::vector< libsumo::TraCIBestLanesData > *)jarg1; 
  {
    try {
      (arg1)->clear();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIBestLanesDataVector_Add___(void * jarg1, void * jarg2) {
  std::vector< libsumo::TraCIBestLanesData > *arg1 = (std::vector< libsumo::TraCIBestLanesData > *) 0 ;
  libsumo::TraCIBestLanesData *arg2 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIBestLanesData > *)jarg1; 
  
  arg2 = (libsumo::TraCIBestLanesData *)(((std::shared_ptr< const libsumo::TraCIBestLanesData > *)jarg2) ? ((std::shared_ptr< const libsumo::TraCIBestLanesData > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIBestLanesData const & reference is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->push_back((libsumo::TraCIBestLanesData const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIBestLanesDataVector_size___(void * jarg1) {
  unsigned int jresult ;
  std::vector< libsumo::TraCIBestLanesData > *arg1 = (std::vector< libsumo::TraCIBestLanesData > *) 0 ;
  std::vector< libsumo::TraCIBestLanesData >::size_type result;
  
  arg1 = (std::vector< libsumo::TraCIBestLanesData > *)jarg1; 
  {
    try {
      result = ((std::vector< libsumo::TraCIBestLanesData > const *)arg1)->size();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (unsigned int)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIBestLanesDataVector_empty___(void * jarg1) {
  unsigned int jresult ;
  std::vector< libsumo::TraCIBestLanesData > *arg1 = (std::vector< libsumo::TraCIBestLanesData > *) 0 ;
  bool result;
  
  arg1 = (std::vector< libsumo::TraCIBestLanesData > *)jarg1; 
  {
    try {
      result = (bool)((std::vector< libsumo::TraCIBestLanesData > const *)arg1)->empty();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIBestLanesDataVector_capacity___(void * jarg1) {
  unsigned int jresult ;
  std::vector< libsumo::TraCIBestLanesData > *arg1 = (std::vector< libsumo::TraCIBestLanesData > *) 0 ;
  std::vector< libsumo::TraCIBestLanesData >::size_type result;
  
  arg1 = (std::vector< libsumo::TraCIBestLanesData > *)jarg1; 
  {
    try {
      result = ((std::vector< libsumo::TraCIBestLanesData > const *)arg1)->capacity();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (unsigned int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIBestLanesDataVector_reserve___(void * jarg1, unsigned int jarg2) {
  std::vector< libsumo::TraCIBestLanesData > *arg1 = (std::vector< libsumo::TraCIBestLanesData > *) 0 ;
  std::vector< libsumo::TraCIBestLanesData >::size_type arg2 ;
  
  arg1 = (std::vector< libsumo::TraCIBestLanesData > *)jarg1; 
  arg2 = (std::vector< libsumo::TraCIBestLanesData >::size_type)jarg2; 
  {
    try {
      (arg1)->reserve(SWIG_STD_MOVE(arg2));
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIBestLanesDataVector__SWIG_2___(int jarg1) {
  void * jresult ;
  int arg1 ;
  std::vector< libsumo::TraCIBestLanesData > *result = 0 ;
  
  arg1 = (int)jarg1; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCIBestLanesData > *)new_std_vector_Sl_libsumo_TraCIBestLanesData_Sg___SWIG_2(arg1);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIBestLanesDataVector_getitemcopy___(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< libsumo::TraCIBestLanesData > *arg1 = (std::vector< libsumo::TraCIBestLanesData > *) 0 ;
  int arg2 ;
  libsumo::TraCIBestLanesData result;
  
  arg1 = (std::vector< libsumo::TraCIBestLanesData > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = std_vector_Sl_libsumo_TraCIBestLanesData_Sg__getitemcopy(arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr<  libsumo::TraCIBestLanesData >(new libsumo::TraCIBestLanesData(result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIBestLanesDataVector_getitem___(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< libsumo::TraCIBestLanesData > *arg1 = (std::vector< libsumo::TraCIBestLanesData > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCIBestLanesData >::value_type *result = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIBestLanesData > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCIBestLanesData >::value_type *) &std_vector_Sl_libsumo_TraCIBestLanesData_Sg__getitem(arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr< const libsumo::TraCIBestLanesData >(result SWIG_NO_NULL_DELETER_0); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIBestLanesDataVector_setitem___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< libsumo::TraCIBestLanesData > *arg1 = (std::vector< libsumo::TraCIBestLanesData > *) 0 ;
  int arg2 ;
  libsumo::TraCIBestLanesData *arg3 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIBestLanesData > *)jarg1; 
  arg2 = (int)jarg2; 
  
  arg3 = (libsumo::TraCIBestLanesData *)(((std::shared_ptr< const libsumo::TraCIBestLanesData > *)jarg3) ? ((std::shared_ptr< const libsumo::TraCIBestLanesData > *)jarg3)->get() : 0);
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIBestLanesData const & reference is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCIBestLanesData_Sg__setitem(arg1,arg2,(libsumo::TraCIBestLanesData const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIBestLanesDataVector_AddRange___(void * jarg1, void * jarg2) {
  std::vector< libsumo::TraCIBestLanesData > *arg1 = (std::vector< libsumo::TraCIBestLanesData > *) 0 ;
  std::vector< libsumo::TraCIBestLanesData > *arg2 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIBestLanesData > *)jarg1; 
  arg2 = (std::vector< libsumo::TraCIBestLanesData > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< libsumo::TraCIBestLanesData > const & is null", 0);
    return ;
  } 
  {
    try {
      std_vector_Sl_libsumo_TraCIBestLanesData_Sg__AddRange(arg1,(std::vector< libsumo::TraCIBestLanesData > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIBestLanesDataVector_GetRange___(void * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  std::vector< libsumo::TraCIBestLanesData > *arg1 = (std::vector< libsumo::TraCIBestLanesData > *) 0 ;
  int arg2 ;
  int arg3 ;
  std::vector< libsumo::TraCIBestLanesData > *result = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIBestLanesData > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCIBestLanesData > *)std_vector_Sl_libsumo_TraCIBestLanesData_Sg__GetRange(arg1,arg2,arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      } catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIBestLanesDataVector_Insert___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< libsumo::TraCIBestLanesData > *arg1 = (std::vector< libsumo::TraCIBestLanesData > *) 0 ;
  int arg2 ;
  libsumo::TraCIBestLanesData *arg3 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIBestLanesData > *)jarg1; 
  arg2 = (int)jarg2; 
  
  arg3 = (libsumo::TraCIBestLanesData *)(((std::shared_ptr< const libsumo::TraCIBestLanesData > *)jarg3) ? ((std::shared_ptr< const libsumo::TraCIBestLanesData > *)jarg3)->get() : 0);
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIBestLanesData const & reference is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCIBestLanesData_Sg__Insert(arg1,arg2,(libsumo::TraCIBestLanesData const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIBestLanesDataVector_InsertRange___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< libsumo::TraCIBestLanesData > *arg1 = (std::vector< libsumo::TraCIBestLanesData > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCIBestLanesData > *arg3 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIBestLanesData > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< libsumo::TraCIBestLanesData > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< libsumo::TraCIBestLanesData > const & is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCIBestLanesData_Sg__InsertRange(arg1,arg2,(std::vector< libsumo::TraCIBestLanesData > const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIBestLanesDataVector_RemoveAt___(void * jarg1, int jarg2) {
  std::vector< libsumo::TraCIBestLanesData > *arg1 = (std::vector< libsumo::TraCIBestLanesData > *) 0 ;
  int arg2 ;
  
  arg1 = (std::vector< libsumo::TraCIBestLanesData > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCIBestLanesData_Sg__RemoveAt(arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIBestLanesDataVector_RemoveRange___(void * jarg1, int jarg2, int jarg3) {
  std::vector< libsumo::TraCIBestLanesData > *arg1 = (std::vector< libsumo::TraCIBestLanesData > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< libsumo::TraCIBestLanesData > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCIBestLanesData_Sg__RemoveRange(arg1,arg2,arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      } catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIBestLanesDataVector_Repeat___(void * jarg1, int jarg2) {
  void * jresult ;
  libsumo::TraCIBestLanesData *arg1 = 0 ;
  int arg2 ;
  std::vector< libsumo::TraCIBestLanesData > *result = 0 ;
  
  
  arg1 = (libsumo::TraCIBestLanesData *)(((std::shared_ptr< const libsumo::TraCIBestLanesData > *)jarg1) ? ((std::shared_ptr< const libsumo::TraCIBestLanesData > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIBestLanesData const & reference is null", 0);
    return 0;
  } 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCIBestLanesData > *)std_vector_Sl_libsumo_TraCIBestLanesData_Sg__Repeat((libsumo::TraCIBestLanesData const &)*arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIBestLanesDataVector_Reverse__SWIG_0___(void * jarg1) {
  std::vector< libsumo::TraCIBestLanesData > *arg1 = (std::vector< libsumo::TraCIBestLanesData > *) 0 ;
  
  arg1 = (std::vector< libsumo::TraCIBestLanesData > *)jarg1; 
  {
    try {
      std_vector_Sl_libsumo_TraCIBestLanesData_Sg__Reverse__SWIG_0(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIBestLanesDataVector_Reverse__SWIG_1___(void * jarg1, int jarg2, int jarg3) {
  std::vector< libsumo::TraCIBestLanesData > *arg1 = (std::vector< libsumo::TraCIBestLanesData > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< libsumo::TraCIBestLanesData > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCIBestLanesData_Sg__Reverse__SWIG_1(arg1,arg2,arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      } catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIBestLanesDataVector_SetRange___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< libsumo::TraCIBestLanesData > *arg1 = (std::vector< libsumo::TraCIBestLanesData > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCIBestLanesData > *arg3 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIBestLanesData > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< libsumo::TraCIBestLanesData > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< libsumo::TraCIBestLanesData > const & is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCIBestLanesData_Sg__SetRange(arg1,arg2,(std::vector< libsumo::TraCIBestLanesData > const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_TraCIBestLanesDataVector___(void * jarg1) {
  std::vector< libsumo::TraCIBestLanesData > *arg1 = (std::vector< libsumo::TraCIBestLanesData > *) 0 ;
  
  arg1 = (std::vector< libsumo::TraCIBestLanesData > *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIConnectionVector__SWIG_0___() {
  void * jresult ;
  std::vector< libsumo::TraCIConnection > *result = 0 ;
  
  {
    try {
      result = (std::vector< libsumo::TraCIConnection > *)new std::vector< libsumo::TraCIConnection >();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIConnectionVector__SWIG_1___(void * jarg1) {
  void * jresult ;
  std::vector< libsumo::TraCIConnection > *arg1 = 0 ;
  std::vector< libsumo::TraCIConnection > *result = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIConnection > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< libsumo::TraCIConnection > const & is null", 0);
    return 0;
  } 
  {
    try {
      result = (std::vector< libsumo::TraCIConnection > *)new std::vector< libsumo::TraCIConnection >((std::vector< libsumo::TraCIConnection > const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIConnectionVector_Clear___(void * jarg1) {
  std::vector< libsumo::TraCIConnection > *arg1 = (std::vector< libsumo::TraCIConnection > *) 0 ;
  
  arg1 = (std::vector< libsumo::TraCIConnection > *)jarg1; 
  {
    try {
      (arg1)->clear();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIConnectionVector_Add___(void * jarg1, void * jarg2) {
  std::vector< libsumo::TraCIConnection > *arg1 = (std::vector< libsumo::TraCIConnection > *) 0 ;
  libsumo::TraCIConnection *arg2 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIConnection > *)jarg1; 
  
  arg2 = (libsumo::TraCIConnection *)(((std::shared_ptr< const libsumo::TraCIConnection > *)jarg2) ? ((std::shared_ptr< const libsumo::TraCIConnection > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIConnection const & reference is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->push_back((libsumo::TraCIConnection const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIConnectionVector_size___(void * jarg1) {
  unsigned int jresult ;
  std::vector< libsumo::TraCIConnection > *arg1 = (std::vector< libsumo::TraCIConnection > *) 0 ;
  std::vector< libsumo::TraCIConnection >::size_type result;
  
  arg1 = (std::vector< libsumo::TraCIConnection > *)jarg1; 
  {
    try {
      result = ((std::vector< libsumo::TraCIConnection > const *)arg1)->size();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (unsigned int)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIConnectionVector_empty___(void * jarg1) {
  unsigned int jresult ;
  std::vector< libsumo::TraCIConnection > *arg1 = (std::vector< libsumo::TraCIConnection > *) 0 ;
  bool result;
  
  arg1 = (std::vector< libsumo::TraCIConnection > *)jarg1; 
  {
    try {
      result = (bool)((std::vector< libsumo::TraCIConnection > const *)arg1)->empty();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIConnectionVector_capacity___(void * jarg1) {
  unsigned int jresult ;
  std::vector< libsumo::TraCIConnection > *arg1 = (std::vector< libsumo::TraCIConnection > *) 0 ;
  std::vector< libsumo::TraCIConnection >::size_type result;
  
  arg1 = (std::vector< libsumo::TraCIConnection > *)jarg1; 
  {
    try {
      result = ((std::vector< libsumo::TraCIConnection > const *)arg1)->capacity();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (unsigned int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIConnectionVector_reserve___(void * jarg1, unsigned int jarg2) {
  std::vector< libsumo::TraCIConnection > *arg1 = (std::vector< libsumo::TraCIConnection > *) 0 ;
  std::vector< libsumo::TraCIConnection >::size_type arg2 ;
  
  arg1 = (std::vector< libsumo::TraCIConnection > *)jarg1; 
  arg2 = (std::vector< libsumo::TraCIConnection >::size_type)jarg2; 
  {
    try {
      (arg1)->reserve(SWIG_STD_MOVE(arg2));
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIConnectionVector__SWIG_2___(int jarg1) {
  void * jresult ;
  int arg1 ;
  std::vector< libsumo::TraCIConnection > *result = 0 ;
  
  arg1 = (int)jarg1; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCIConnection > *)new_std_vector_Sl_libsumo_TraCIConnection_Sg___SWIG_2(arg1);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIConnectionVector_getitemcopy___(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< libsumo::TraCIConnection > *arg1 = (std::vector< libsumo::TraCIConnection > *) 0 ;
  int arg2 ;
  libsumo::TraCIConnection result;
  
  arg1 = (std::vector< libsumo::TraCIConnection > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = std_vector_Sl_libsumo_TraCIConnection_Sg__getitemcopy(arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr<  libsumo::TraCIConnection >(new libsumo::TraCIConnection(result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIConnectionVector_getitem___(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< libsumo::TraCIConnection > *arg1 = (std::vector< libsumo::TraCIConnection > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCIConnection >::value_type *result = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIConnection > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCIConnection >::value_type *) &std_vector_Sl_libsumo_TraCIConnection_Sg__getitem(arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr< const libsumo::TraCIConnection >(result SWIG_NO_NULL_DELETER_0); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIConnectionVector_setitem___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< libsumo::TraCIConnection > *arg1 = (std::vector< libsumo::TraCIConnection > *) 0 ;
  int arg2 ;
  libsumo::TraCIConnection *arg3 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIConnection > *)jarg1; 
  arg2 = (int)jarg2; 
  
  arg3 = (libsumo::TraCIConnection *)(((std::shared_ptr< const libsumo::TraCIConnection > *)jarg3) ? ((std::shared_ptr< const libsumo::TraCIConnection > *)jarg3)->get() : 0);
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIConnection const & reference is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCIConnection_Sg__setitem(arg1,arg2,(libsumo::TraCIConnection const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIConnectionVector_AddRange___(void * jarg1, void * jarg2) {
  std::vector< libsumo::TraCIConnection > *arg1 = (std::vector< libsumo::TraCIConnection > *) 0 ;
  std::vector< libsumo::TraCIConnection > *arg2 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIConnection > *)jarg1; 
  arg2 = (std::vector< libsumo::TraCIConnection > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< libsumo::TraCIConnection > const & is null", 0);
    return ;
  } 
  {
    try {
      std_vector_Sl_libsumo_TraCIConnection_Sg__AddRange(arg1,(std::vector< libsumo::TraCIConnection > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIConnectionVector_GetRange___(void * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  std::vector< libsumo::TraCIConnection > *arg1 = (std::vector< libsumo::TraCIConnection > *) 0 ;
  int arg2 ;
  int arg3 ;
  std::vector< libsumo::TraCIConnection > *result = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIConnection > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCIConnection > *)std_vector_Sl_libsumo_TraCIConnection_Sg__GetRange(arg1,arg2,arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      } catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIConnectionVector_Insert___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< libsumo::TraCIConnection > *arg1 = (std::vector< libsumo::TraCIConnection > *) 0 ;
  int arg2 ;
  libsumo::TraCIConnection *arg3 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIConnection > *)jarg1; 
  arg2 = (int)jarg2; 
  
  arg3 = (libsumo::TraCIConnection *)(((std::shared_ptr< const libsumo::TraCIConnection > *)jarg3) ? ((std::shared_ptr< const libsumo::TraCIConnection > *)jarg3)->get() : 0);
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIConnection const & reference is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCIConnection_Sg__Insert(arg1,arg2,(libsumo::TraCIConnection const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIConnectionVector_InsertRange___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< libsumo::TraCIConnection > *arg1 = (std::vector< libsumo::TraCIConnection > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCIConnection > *arg3 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIConnection > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< libsumo::TraCIConnection > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< libsumo::TraCIConnection > const & is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCIConnection_Sg__InsertRange(arg1,arg2,(std::vector< libsumo::TraCIConnection > const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIConnectionVector_RemoveAt___(void * jarg1, int jarg2) {
  std::vector< libsumo::TraCIConnection > *arg1 = (std::vector< libsumo::TraCIConnection > *) 0 ;
  int arg2 ;
  
  arg1 = (std::vector< libsumo::TraCIConnection > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCIConnection_Sg__RemoveAt(arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIConnectionVector_RemoveRange___(void * jarg1, int jarg2, int jarg3) {
  std::vector< libsumo::TraCIConnection > *arg1 = (std::vector< libsumo::TraCIConnection > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< libsumo::TraCIConnection > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCIConnection_Sg__RemoveRange(arg1,arg2,arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      } catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIConnectionVector_Repeat___(void * jarg1, int jarg2) {
  void * jresult ;
  libsumo::TraCIConnection *arg1 = 0 ;
  int arg2 ;
  std::vector< libsumo::TraCIConnection > *result = 0 ;
  
  
  arg1 = (libsumo::TraCIConnection *)(((std::shared_ptr< const libsumo::TraCIConnection > *)jarg1) ? ((std::shared_ptr< const libsumo::TraCIConnection > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIConnection const & reference is null", 0);
    return 0;
  } 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCIConnection > *)std_vector_Sl_libsumo_TraCIConnection_Sg__Repeat((libsumo::TraCIConnection const &)*arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIConnectionVector_Reverse__SWIG_0___(void * jarg1) {
  std::vector< libsumo::TraCIConnection > *arg1 = (std::vector< libsumo::TraCIConnection > *) 0 ;
  
  arg1 = (std::vector< libsumo::TraCIConnection > *)jarg1; 
  {
    try {
      std_vector_Sl_libsumo_TraCIConnection_Sg__Reverse__SWIG_0(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIConnectionVector_Reverse__SWIG_1___(void * jarg1, int jarg2, int jarg3) {
  std::vector< libsumo::TraCIConnection > *arg1 = (std::vector< libsumo::TraCIConnection > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< libsumo::TraCIConnection > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCIConnection_Sg__Reverse__SWIG_1(arg1,arg2,arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      } catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIConnectionVector_SetRange___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< libsumo::TraCIConnection > *arg1 = (std::vector< libsumo::TraCIConnection > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCIConnection > *arg3 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIConnection > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< libsumo::TraCIConnection > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< libsumo::TraCIConnection > const & is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCIConnection_Sg__SetRange(arg1,arg2,(std::vector< libsumo::TraCIConnection > const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_TraCIConnectionVector___(void * jarg1) {
  std::vector< libsumo::TraCIConnection > *arg1 = (std::vector< libsumo::TraCIConnection > *) 0 ;
  
  arg1 = (std::vector< libsumo::TraCIConnection > *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIJunctionFoeVector__SWIG_0___() {
  void * jresult ;
  std::vector< libsumo::TraCIJunctionFoe > *result = 0 ;
  
  {
    try {
      result = (std::vector< libsumo::TraCIJunctionFoe > *)new std::vector< libsumo::TraCIJunctionFoe >();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIJunctionFoeVector__SWIG_1___(void * jarg1) {
  void * jresult ;
  std::vector< libsumo::TraCIJunctionFoe > *arg1 = 0 ;
  std::vector< libsumo::TraCIJunctionFoe > *result = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIJunctionFoe > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< libsumo::TraCIJunctionFoe > const & is null", 0);
    return 0;
  } 
  {
    try {
      result = (std::vector< libsumo::TraCIJunctionFoe > *)new std::vector< libsumo::TraCIJunctionFoe >((std::vector< libsumo::TraCIJunctionFoe > const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIJunctionFoeVector_Clear___(void * jarg1) {
  std::vector< libsumo::TraCIJunctionFoe > *arg1 = (std::vector< libsumo::TraCIJunctionFoe > *) 0 ;
  
  arg1 = (std::vector< libsumo::TraCIJunctionFoe > *)jarg1; 
  {
    try {
      (arg1)->clear();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIJunctionFoeVector_Add___(void * jarg1, void * jarg2) {
  std::vector< libsumo::TraCIJunctionFoe > *arg1 = (std::vector< libsumo::TraCIJunctionFoe > *) 0 ;
  libsumo::TraCIJunctionFoe *arg2 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIJunctionFoe > *)jarg1; 
  
  arg2 = (libsumo::TraCIJunctionFoe *)(((std::shared_ptr< const libsumo::TraCIJunctionFoe > *)jarg2) ? ((std::shared_ptr< const libsumo::TraCIJunctionFoe > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIJunctionFoe const & reference is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->push_back((libsumo::TraCIJunctionFoe const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIJunctionFoeVector_size___(void * jarg1) {
  unsigned int jresult ;
  std::vector< libsumo::TraCIJunctionFoe > *arg1 = (std::vector< libsumo::TraCIJunctionFoe > *) 0 ;
  std::vector< libsumo::TraCIJunctionFoe >::size_type result;
  
  arg1 = (std::vector< libsumo::TraCIJunctionFoe > *)jarg1; 
  {
    try {
      result = ((std::vector< libsumo::TraCIJunctionFoe > const *)arg1)->size();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (unsigned int)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIJunctionFoeVector_empty___(void * jarg1) {
  unsigned int jresult ;
  std::vector< libsumo::TraCIJunctionFoe > *arg1 = (std::vector< libsumo::TraCIJunctionFoe > *) 0 ;
  bool result;
  
  arg1 = (std::vector< libsumo::TraCIJunctionFoe > *)jarg1; 
  {
    try {
      result = (bool)((std::vector< libsumo::TraCIJunctionFoe > const *)arg1)->empty();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIJunctionFoeVector_capacity___(void * jarg1) {
  unsigned int jresult ;
  std::vector< libsumo::TraCIJunctionFoe > *arg1 = (std::vector< libsumo::TraCIJunctionFoe > *) 0 ;
  std::vector< libsumo::TraCIJunctionFoe >::size_type result;
  
  arg1 = (std::vector< libsumo::TraCIJunctionFoe > *)jarg1; 
  {
    try {
      result = ((std::vector< libsumo::TraCIJunctionFoe > const *)arg1)->capacity();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (unsigned int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIJunctionFoeVector_reserve___(void * jarg1, unsigned int jarg2) {
  std::vector< libsumo::TraCIJunctionFoe > *arg1 = (std::vector< libsumo::TraCIJunctionFoe > *) 0 ;
  std::vector< libsumo::TraCIJunctionFoe >::size_type arg2 ;
  
  arg1 = (std::vector< libsumo::TraCIJunctionFoe > *)jarg1; 
  arg2 = (std::vector< libsumo::TraCIJunctionFoe >::size_type)jarg2; 
  {
    try {
      (arg1)->reserve(SWIG_STD_MOVE(arg2));
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIJunctionFoeVector__SWIG_2___(int jarg1) {
  void * jresult ;
  int arg1 ;
  std::vector< libsumo::TraCIJunctionFoe > *result = 0 ;
  
  arg1 = (int)jarg1; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCIJunctionFoe > *)new_std_vector_Sl_libsumo_TraCIJunctionFoe_Sg___SWIG_2(arg1);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIJunctionFoeVector_getitemcopy___(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< libsumo::TraCIJunctionFoe > *arg1 = (std::vector< libsumo::TraCIJunctionFoe > *) 0 ;
  int arg2 ;
  libsumo::TraCIJunctionFoe result;
  
  arg1 = (std::vector< libsumo::TraCIJunctionFoe > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = std_vector_Sl_libsumo_TraCIJunctionFoe_Sg__getitemcopy(arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr<  libsumo::TraCIJunctionFoe >(new libsumo::TraCIJunctionFoe(result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIJunctionFoeVector_getitem___(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< libsumo::TraCIJunctionFoe > *arg1 = (std::vector< libsumo::TraCIJunctionFoe > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCIJunctionFoe >::value_type *result = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIJunctionFoe > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCIJunctionFoe >::value_type *) &std_vector_Sl_libsumo_TraCIJunctionFoe_Sg__getitem(arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr< const libsumo::TraCIJunctionFoe >(result SWIG_NO_NULL_DELETER_0); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIJunctionFoeVector_setitem___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< libsumo::TraCIJunctionFoe > *arg1 = (std::vector< libsumo::TraCIJunctionFoe > *) 0 ;
  int arg2 ;
  libsumo::TraCIJunctionFoe *arg3 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIJunctionFoe > *)jarg1; 
  arg2 = (int)jarg2; 
  
  arg3 = (libsumo::TraCIJunctionFoe *)(((std::shared_ptr< const libsumo::TraCIJunctionFoe > *)jarg3) ? ((std::shared_ptr< const libsumo::TraCIJunctionFoe > *)jarg3)->get() : 0);
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIJunctionFoe const & reference is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCIJunctionFoe_Sg__setitem(arg1,arg2,(libsumo::TraCIJunctionFoe const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIJunctionFoeVector_AddRange___(void * jarg1, void * jarg2) {
  std::vector< libsumo::TraCIJunctionFoe > *arg1 = (std::vector< libsumo::TraCIJunctionFoe > *) 0 ;
  std::vector< libsumo::TraCIJunctionFoe > *arg2 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIJunctionFoe > *)jarg1; 
  arg2 = (std::vector< libsumo::TraCIJunctionFoe > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< libsumo::TraCIJunctionFoe > const & is null", 0);
    return ;
  } 
  {
    try {
      std_vector_Sl_libsumo_TraCIJunctionFoe_Sg__AddRange(arg1,(std::vector< libsumo::TraCIJunctionFoe > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIJunctionFoeVector_GetRange___(void * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  std::vector< libsumo::TraCIJunctionFoe > *arg1 = (std::vector< libsumo::TraCIJunctionFoe > *) 0 ;
  int arg2 ;
  int arg3 ;
  std::vector< libsumo::TraCIJunctionFoe > *result = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIJunctionFoe > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCIJunctionFoe > *)std_vector_Sl_libsumo_TraCIJunctionFoe_Sg__GetRange(arg1,arg2,arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      } catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIJunctionFoeVector_Insert___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< libsumo::TraCIJunctionFoe > *arg1 = (std::vector< libsumo::TraCIJunctionFoe > *) 0 ;
  int arg2 ;
  libsumo::TraCIJunctionFoe *arg3 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIJunctionFoe > *)jarg1; 
  arg2 = (int)jarg2; 
  
  arg3 = (libsumo::TraCIJunctionFoe *)(((std::shared_ptr< const libsumo::TraCIJunctionFoe > *)jarg3) ? ((std::shared_ptr< const libsumo::TraCIJunctionFoe > *)jarg3)->get() : 0);
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIJunctionFoe const & reference is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCIJunctionFoe_Sg__Insert(arg1,arg2,(libsumo::TraCIJunctionFoe const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIJunctionFoeVector_InsertRange___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< libsumo::TraCIJunctionFoe > *arg1 = (std::vector< libsumo::TraCIJunctionFoe > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCIJunctionFoe > *arg3 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIJunctionFoe > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< libsumo::TraCIJunctionFoe > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< libsumo::TraCIJunctionFoe > const & is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCIJunctionFoe_Sg__InsertRange(arg1,arg2,(std::vector< libsumo::TraCIJunctionFoe > const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIJunctionFoeVector_RemoveAt___(void * jarg1, int jarg2) {
  std::vector< libsumo::TraCIJunctionFoe > *arg1 = (std::vector< libsumo::TraCIJunctionFoe > *) 0 ;
  int arg2 ;
  
  arg1 = (std::vector< libsumo::TraCIJunctionFoe > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCIJunctionFoe_Sg__RemoveAt(arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIJunctionFoeVector_RemoveRange___(void * jarg1, int jarg2, int jarg3) {
  std::vector< libsumo::TraCIJunctionFoe > *arg1 = (std::vector< libsumo::TraCIJunctionFoe > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< libsumo::TraCIJunctionFoe > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCIJunctionFoe_Sg__RemoveRange(arg1,arg2,arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      } catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIJunctionFoeVector_Repeat___(void * jarg1, int jarg2) {
  void * jresult ;
  libsumo::TraCIJunctionFoe *arg1 = 0 ;
  int arg2 ;
  std::vector< libsumo::TraCIJunctionFoe > *result = 0 ;
  
  
  arg1 = (libsumo::TraCIJunctionFoe *)(((std::shared_ptr< const libsumo::TraCIJunctionFoe > *)jarg1) ? ((std::shared_ptr< const libsumo::TraCIJunctionFoe > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIJunctionFoe const & reference is null", 0);
    return 0;
  } 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCIJunctionFoe > *)std_vector_Sl_libsumo_TraCIJunctionFoe_Sg__Repeat((libsumo::TraCIJunctionFoe const &)*arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIJunctionFoeVector_Reverse__SWIG_0___(void * jarg1) {
  std::vector< libsumo::TraCIJunctionFoe > *arg1 = (std::vector< libsumo::TraCIJunctionFoe > *) 0 ;
  
  arg1 = (std::vector< libsumo::TraCIJunctionFoe > *)jarg1; 
  {
    try {
      std_vector_Sl_libsumo_TraCIJunctionFoe_Sg__Reverse__SWIG_0(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIJunctionFoeVector_Reverse__SWIG_1___(void * jarg1, int jarg2, int jarg3) {
  std::vector< libsumo::TraCIJunctionFoe > *arg1 = (std::vector< libsumo::TraCIJunctionFoe > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< libsumo::TraCIJunctionFoe > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCIJunctionFoe_Sg__Reverse__SWIG_1(arg1,arg2,arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      } catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIJunctionFoeVector_SetRange___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< libsumo::TraCIJunctionFoe > *arg1 = (std::vector< libsumo::TraCIJunctionFoe > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCIJunctionFoe > *arg3 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIJunctionFoe > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< libsumo::TraCIJunctionFoe > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< libsumo::TraCIJunctionFoe > const & is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCIJunctionFoe_Sg__SetRange(arg1,arg2,(std::vector< libsumo::TraCIJunctionFoe > const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_TraCIJunctionFoeVector___(void * jarg1) {
  std::vector< libsumo::TraCIJunctionFoe > *arg1 = (std::vector< libsumo::TraCIJunctionFoe > *) 0 ;
  
  arg1 = (std::vector< libsumo::TraCIJunctionFoe > *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCILinkVector__SWIG_0___() {
  void * jresult ;
  std::vector< libsumo::TraCILink > *result = 0 ;
  
  {
    try {
      result = (std::vector< libsumo::TraCILink > *)new std::vector< libsumo::TraCILink >();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCILinkVector__SWIG_1___(void * jarg1) {
  void * jresult ;
  std::vector< libsumo::TraCILink > *arg1 = 0 ;
  std::vector< libsumo::TraCILink > *result = 0 ;
  
  arg1 = (std::vector< libsumo::TraCILink > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< libsumo::TraCILink > const & is null", 0);
    return 0;
  } 
  {
    try {
      result = (std::vector< libsumo::TraCILink > *)new std::vector< libsumo::TraCILink >((std::vector< libsumo::TraCILink > const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILinkVector_Clear___(void * jarg1) {
  std::vector< libsumo::TraCILink > *arg1 = (std::vector< libsumo::TraCILink > *) 0 ;
  
  arg1 = (std::vector< libsumo::TraCILink > *)jarg1; 
  {
    try {
      (arg1)->clear();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILinkVector_Add___(void * jarg1, void * jarg2) {
  std::vector< libsumo::TraCILink > *arg1 = (std::vector< libsumo::TraCILink > *) 0 ;
  libsumo::TraCILink *arg2 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCILink > *)jarg1; 
  
  arg2 = (libsumo::TraCILink *)(((std::shared_ptr< const libsumo::TraCILink > *)jarg2) ? ((std::shared_ptr< const libsumo::TraCILink > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCILink const & reference is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->push_back((libsumo::TraCILink const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILinkVector_size___(void * jarg1) {
  unsigned int jresult ;
  std::vector< libsumo::TraCILink > *arg1 = (std::vector< libsumo::TraCILink > *) 0 ;
  std::vector< libsumo::TraCILink >::size_type result;
  
  arg1 = (std::vector< libsumo::TraCILink > *)jarg1; 
  {
    try {
      result = ((std::vector< libsumo::TraCILink > const *)arg1)->size();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (unsigned int)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILinkVector_empty___(void * jarg1) {
  unsigned int jresult ;
  std::vector< libsumo::TraCILink > *arg1 = (std::vector< libsumo::TraCILink > *) 0 ;
  bool result;
  
  arg1 = (std::vector< libsumo::TraCILink > *)jarg1; 
  {
    try {
      result = (bool)((std::vector< libsumo::TraCILink > const *)arg1)->empty();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILinkVector_capacity___(void * jarg1) {
  unsigned int jresult ;
  std::vector< libsumo::TraCILink > *arg1 = (std::vector< libsumo::TraCILink > *) 0 ;
  std::vector< libsumo::TraCILink >::size_type result;
  
  arg1 = (std::vector< libsumo::TraCILink > *)jarg1; 
  {
    try {
      result = ((std::vector< libsumo::TraCILink > const *)arg1)->capacity();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (unsigned int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILinkVector_reserve___(void * jarg1, unsigned int jarg2) {
  std::vector< libsumo::TraCILink > *arg1 = (std::vector< libsumo::TraCILink > *) 0 ;
  std::vector< libsumo::TraCILink >::size_type arg2 ;
  
  arg1 = (std::vector< libsumo::TraCILink > *)jarg1; 
  arg2 = (std::vector< libsumo::TraCILink >::size_type)jarg2; 
  {
    try {
      (arg1)->reserve(SWIG_STD_MOVE(arg2));
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCILinkVector__SWIG_2___(int jarg1) {
  void * jresult ;
  int arg1 ;
  std::vector< libsumo::TraCILink > *result = 0 ;
  
  arg1 = (int)jarg1; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCILink > *)new_std_vector_Sl_libsumo_TraCILink_Sg___SWIG_2(arg1);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILinkVector_getitemcopy___(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< libsumo::TraCILink > *arg1 = (std::vector< libsumo::TraCILink > *) 0 ;
  int arg2 ;
  libsumo::TraCILink result;
  
  arg1 = (std::vector< libsumo::TraCILink > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = std_vector_Sl_libsumo_TraCILink_Sg__getitemcopy(arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr<  libsumo::TraCILink >(new libsumo::TraCILink(result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILinkVector_getitem___(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< libsumo::TraCILink > *arg1 = (std::vector< libsumo::TraCILink > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCILink >::value_type *result = 0 ;
  
  arg1 = (std::vector< libsumo::TraCILink > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCILink >::value_type *) &std_vector_Sl_libsumo_TraCILink_Sg__getitem(arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr< const libsumo::TraCILink >(result SWIG_NO_NULL_DELETER_0); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILinkVector_setitem___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< libsumo::TraCILink > *arg1 = (std::vector< libsumo::TraCILink > *) 0 ;
  int arg2 ;
  libsumo::TraCILink *arg3 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCILink > *)jarg1; 
  arg2 = (int)jarg2; 
  
  arg3 = (libsumo::TraCILink *)(((std::shared_ptr< const libsumo::TraCILink > *)jarg3) ? ((std::shared_ptr< const libsumo::TraCILink > *)jarg3)->get() : 0);
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCILink const & reference is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCILink_Sg__setitem(arg1,arg2,(libsumo::TraCILink const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILinkVector_AddRange___(void * jarg1, void * jarg2) {
  std::vector< libsumo::TraCILink > *arg1 = (std::vector< libsumo::TraCILink > *) 0 ;
  std::vector< libsumo::TraCILink > *arg2 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCILink > *)jarg1; 
  arg2 = (std::vector< libsumo::TraCILink > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< libsumo::TraCILink > const & is null", 0);
    return ;
  } 
  {
    try {
      std_vector_Sl_libsumo_TraCILink_Sg__AddRange(arg1,(std::vector< libsumo::TraCILink > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILinkVector_GetRange___(void * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  std::vector< libsumo::TraCILink > *arg1 = (std::vector< libsumo::TraCILink > *) 0 ;
  int arg2 ;
  int arg3 ;
  std::vector< libsumo::TraCILink > *result = 0 ;
  
  arg1 = (std::vector< libsumo::TraCILink > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCILink > *)std_vector_Sl_libsumo_TraCILink_Sg__GetRange(arg1,arg2,arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      } catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILinkVector_Insert___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< libsumo::TraCILink > *arg1 = (std::vector< libsumo::TraCILink > *) 0 ;
  int arg2 ;
  libsumo::TraCILink *arg3 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCILink > *)jarg1; 
  arg2 = (int)jarg2; 
  
  arg3 = (libsumo::TraCILink *)(((std::shared_ptr< const libsumo::TraCILink > *)jarg3) ? ((std::shared_ptr< const libsumo::TraCILink > *)jarg3)->get() : 0);
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCILink const & reference is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCILink_Sg__Insert(arg1,arg2,(libsumo::TraCILink const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILinkVector_InsertRange___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< libsumo::TraCILink > *arg1 = (std::vector< libsumo::TraCILink > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCILink > *arg3 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCILink > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< libsumo::TraCILink > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< libsumo::TraCILink > const & is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCILink_Sg__InsertRange(arg1,arg2,(std::vector< libsumo::TraCILink > const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILinkVector_RemoveAt___(void * jarg1, int jarg2) {
  std::vector< libsumo::TraCILink > *arg1 = (std::vector< libsumo::TraCILink > *) 0 ;
  int arg2 ;
  
  arg1 = (std::vector< libsumo::TraCILink > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCILink_Sg__RemoveAt(arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILinkVector_RemoveRange___(void * jarg1, int jarg2, int jarg3) {
  std::vector< libsumo::TraCILink > *arg1 = (std::vector< libsumo::TraCILink > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< libsumo::TraCILink > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCILink_Sg__RemoveRange(arg1,arg2,arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      } catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILinkVector_Repeat___(void * jarg1, int jarg2) {
  void * jresult ;
  libsumo::TraCILink *arg1 = 0 ;
  int arg2 ;
  std::vector< libsumo::TraCILink > *result = 0 ;
  
  
  arg1 = (libsumo::TraCILink *)(((std::shared_ptr< const libsumo::TraCILink > *)jarg1) ? ((std::shared_ptr< const libsumo::TraCILink > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCILink const & reference is null", 0);
    return 0;
  } 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCILink > *)std_vector_Sl_libsumo_TraCILink_Sg__Repeat((libsumo::TraCILink const &)*arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILinkVector_Reverse__SWIG_0___(void * jarg1) {
  std::vector< libsumo::TraCILink > *arg1 = (std::vector< libsumo::TraCILink > *) 0 ;
  
  arg1 = (std::vector< libsumo::TraCILink > *)jarg1; 
  {
    try {
      std_vector_Sl_libsumo_TraCILink_Sg__Reverse__SWIG_0(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILinkVector_Reverse__SWIG_1___(void * jarg1, int jarg2, int jarg3) {
  std::vector< libsumo::TraCILink > *arg1 = (std::vector< libsumo::TraCILink > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< libsumo::TraCILink > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCILink_Sg__Reverse__SWIG_1(arg1,arg2,arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      } catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILinkVector_SetRange___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< libsumo::TraCILink > *arg1 = (std::vector< libsumo::TraCILink > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCILink > *arg3 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCILink > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< libsumo::TraCILink > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< libsumo::TraCILink > const & is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCILink_Sg__SetRange(arg1,arg2,(std::vector< libsumo::TraCILink > const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_TraCILinkVector___(void * jarg1) {
  std::vector< libsumo::TraCILink > *arg1 = (std::vector< libsumo::TraCILink > *) 0 ;
  
  arg1 = (std::vector< libsumo::TraCILink > *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCILinkVectorVector__SWIG_0___() {
  void * jresult ;
  std::vector< std::vector< libsumo::TraCILink > > *result = 0 ;
  
  {
    try {
      result = (std::vector< std::vector< libsumo::TraCILink > > *)new std::vector< std::vector< libsumo::TraCILink > >();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCILinkVectorVector__SWIG_1___(void * jarg1) {
  void * jresult ;
  std::vector< std::vector< libsumo::TraCILink > > *arg1 = 0 ;
  std::vector< std::vector< libsumo::TraCILink > > *result = 0 ;
  
  arg1 = (std::vector< std::vector< libsumo::TraCILink > > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::vector< libsumo::TraCILink > > const & is null", 0);
    return 0;
  } 
  {
    try {
      result = (std::vector< std::vector< libsumo::TraCILink > > *)new std::vector< std::vector< libsumo::TraCILink > >((std::vector< std::vector< libsumo::TraCILink > > const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILinkVectorVector_Clear___(void * jarg1) {
  std::vector< std::vector< libsumo::TraCILink > > *arg1 = (std::vector< std::vector< libsumo::TraCILink > > *) 0 ;
  
  arg1 = (std::vector< std::vector< libsumo::TraCILink > > *)jarg1; 
  {
    try {
      (arg1)->clear();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILinkVectorVector_Add___(void * jarg1, void * jarg2) {
  std::vector< std::vector< libsumo::TraCILink > > *arg1 = (std::vector< std::vector< libsumo::TraCILink > > *) 0 ;
  std::vector< libsumo::TraCILink > *arg2 = 0 ;
  
  arg1 = (std::vector< std::vector< libsumo::TraCILink > > *)jarg1; 
  arg2 = (std::vector< libsumo::TraCILink > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< libsumo::TraCILink > const & is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->push_back((std::vector< libsumo::TraCILink > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILinkVectorVector_size___(void * jarg1) {
  unsigned int jresult ;
  std::vector< std::vector< libsumo::TraCILink > > *arg1 = (std::vector< std::vector< libsumo::TraCILink > > *) 0 ;
  std::vector< std::vector< libsumo::TraCILink > >::size_type result;
  
  arg1 = (std::vector< std::vector< libsumo::TraCILink > > *)jarg1; 
  {
    try {
      result = ((std::vector< std::vector< libsumo::TraCILink > > const *)arg1)->size();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (unsigned int)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILinkVectorVector_empty___(void * jarg1) {
  unsigned int jresult ;
  std::vector< std::vector< libsumo::TraCILink > > *arg1 = (std::vector< std::vector< libsumo::TraCILink > > *) 0 ;
  bool result;
  
  arg1 = (std::vector< std::vector< libsumo::TraCILink > > *)jarg1; 
  {
    try {
      result = (bool)((std::vector< std::vector< libsumo::TraCILink > > const *)arg1)->empty();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILinkVectorVector_capacity___(void * jarg1) {
  unsigned int jresult ;
  std::vector< std::vector< libsumo::TraCILink > > *arg1 = (std::vector< std::vector< libsumo::TraCILink > > *) 0 ;
  std::vector< std::vector< libsumo::TraCILink > >::size_type result;
  
  arg1 = (std::vector< std::vector< libsumo::TraCILink > > *)jarg1; 
  {
    try {
      result = ((std::vector< std::vector< libsumo::TraCILink > > const *)arg1)->capacity();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (unsigned int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILinkVectorVector_reserve___(void * jarg1, unsigned int jarg2) {
  std::vector< std::vector< libsumo::TraCILink > > *arg1 = (std::vector< std::vector< libsumo::TraCILink > > *) 0 ;
  std::vector< std::vector< libsumo::TraCILink > >::size_type arg2 ;
  
  arg1 = (std::vector< std::vector< libsumo::TraCILink > > *)jarg1; 
  arg2 = (std::vector< std::vector< libsumo::TraCILink > >::size_type)jarg2; 
  {
    try {
      (arg1)->reserve(SWIG_STD_MOVE(arg2));
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCILinkVectorVector__SWIG_2___(int jarg1) {
  void * jresult ;
  int arg1 ;
  std::vector< std::vector< libsumo::TraCILink > > *result = 0 ;
  
  arg1 = (int)jarg1; 
  {
    try {
      try {
        result = (std::vector< std::vector< libsumo::TraCILink > > *)new_std_vector_Sl_std_vector_Sl_libsumo_TraCILink_Sg__Sg___SWIG_2(arg1);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILinkVectorVector_getitemcopy___(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< std::vector< libsumo::TraCILink > > *arg1 = (std::vector< std::vector< libsumo::TraCILink > > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCILink > result;
  
  arg1 = (std::vector< std::vector< libsumo::TraCILink > > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = std_vector_Sl_std_vector_Sl_libsumo_TraCILink_Sg__Sg__getitemcopy(arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< libsumo::TraCILink >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILinkVectorVector_getitem___(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< std::vector< libsumo::TraCILink > > *arg1 = (std::vector< std::vector< libsumo::TraCILink > > *) 0 ;
  int arg2 ;
  std::vector< std::vector< libsumo::TraCILink > >::value_type *result = 0 ;
  
  arg1 = (std::vector< std::vector< libsumo::TraCILink > > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (std::vector< std::vector< libsumo::TraCILink > >::value_type *) &std_vector_Sl_std_vector_Sl_libsumo_TraCILink_Sg__Sg__getitem(arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILinkVectorVector_setitem___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< std::vector< libsumo::TraCILink > > *arg1 = (std::vector< std::vector< libsumo::TraCILink > > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCILink > *arg3 = 0 ;
  
  arg1 = (std::vector< std::vector< libsumo::TraCILink > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< libsumo::TraCILink > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< libsumo::TraCILink > const & is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_std_vector_Sl_libsumo_TraCILink_Sg__Sg__setitem(arg1,arg2,(std::vector< libsumo::TraCILink > const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILinkVectorVector_AddRange___(void * jarg1, void * jarg2) {
  std::vector< std::vector< libsumo::TraCILink > > *arg1 = (std::vector< std::vector< libsumo::TraCILink > > *) 0 ;
  std::vector< std::vector< libsumo::TraCILink > > *arg2 = 0 ;
  
  arg1 = (std::vector< std::vector< libsumo::TraCILink > > *)jarg1; 
  arg2 = (std::vector< std::vector< libsumo::TraCILink > > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::vector< libsumo::TraCILink > > const & is null", 0);
    return ;
  } 
  {
    try {
      std_vector_Sl_std_vector_Sl_libsumo_TraCILink_Sg__Sg__AddRange(arg1,(std::vector< std::vector< libsumo::TraCILink > > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILinkVectorVector_GetRange___(void * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  std::vector< std::vector< libsumo::TraCILink > > *arg1 = (std::vector< std::vector< libsumo::TraCILink > > *) 0 ;
  int arg2 ;
  int arg3 ;
  std::vector< std::vector< libsumo::TraCILink > > *result = 0 ;
  
  arg1 = (std::vector< std::vector< libsumo::TraCILink > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        result = (std::vector< std::vector< libsumo::TraCILink > > *)std_vector_Sl_std_vector_Sl_libsumo_TraCILink_Sg__Sg__GetRange(arg1,arg2,arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      } catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILinkVectorVector_Insert___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< std::vector< libsumo::TraCILink > > *arg1 = (std::vector< std::vector< libsumo::TraCILink > > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCILink > *arg3 = 0 ;
  
  arg1 = (std::vector< std::vector< libsumo::TraCILink > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< libsumo::TraCILink > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< libsumo::TraCILink > const & is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_std_vector_Sl_libsumo_TraCILink_Sg__Sg__Insert(arg1,arg2,(std::vector< libsumo::TraCILink > const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILinkVectorVector_InsertRange___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< std::vector< libsumo::TraCILink > > *arg1 = (std::vector< std::vector< libsumo::TraCILink > > *) 0 ;
  int arg2 ;
  std::vector< std::vector< libsumo::TraCILink > > *arg3 = 0 ;
  
  arg1 = (std::vector< std::vector< libsumo::TraCILink > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< std::vector< libsumo::TraCILink > > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::vector< libsumo::TraCILink > > const & is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_std_vector_Sl_libsumo_TraCILink_Sg__Sg__InsertRange(arg1,arg2,(std::vector< std::vector< libsumo::TraCILink > > const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILinkVectorVector_RemoveAt___(void * jarg1, int jarg2) {
  std::vector< std::vector< libsumo::TraCILink > > *arg1 = (std::vector< std::vector< libsumo::TraCILink > > *) 0 ;
  int arg2 ;
  
  arg1 = (std::vector< std::vector< libsumo::TraCILink > > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        std_vector_Sl_std_vector_Sl_libsumo_TraCILink_Sg__Sg__RemoveAt(arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILinkVectorVector_RemoveRange___(void * jarg1, int jarg2, int jarg3) {
  std::vector< std::vector< libsumo::TraCILink > > *arg1 = (std::vector< std::vector< libsumo::TraCILink > > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< std::vector< libsumo::TraCILink > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        std_vector_Sl_std_vector_Sl_libsumo_TraCILink_Sg__Sg__RemoveRange(arg1,arg2,arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      } catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILinkVectorVector_Repeat___(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< libsumo::TraCILink > *arg1 = 0 ;
  int arg2 ;
  std::vector< std::vector< libsumo::TraCILink > > *result = 0 ;
  
  arg1 = (std::vector< libsumo::TraCILink > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< libsumo::TraCILink > const & is null", 0);
    return 0;
  } 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (std::vector< std::vector< libsumo::TraCILink > > *)std_vector_Sl_std_vector_Sl_libsumo_TraCILink_Sg__Sg__Repeat((std::vector< libsumo::TraCILink > const &)*arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILinkVectorVector_Reverse__SWIG_0___(void * jarg1) {
  std::vector< std::vector< libsumo::TraCILink > > *arg1 = (std::vector< std::vector< libsumo::TraCILink > > *) 0 ;
  
  arg1 = (std::vector< std::vector< libsumo::TraCILink > > *)jarg1; 
  {
    try {
      std_vector_Sl_std_vector_Sl_libsumo_TraCILink_Sg__Sg__Reverse__SWIG_0(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILinkVectorVector_Reverse__SWIG_1___(void * jarg1, int jarg2, int jarg3) {
  std::vector< std::vector< libsumo::TraCILink > > *arg1 = (std::vector< std::vector< libsumo::TraCILink > > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< std::vector< libsumo::TraCILink > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        std_vector_Sl_std_vector_Sl_libsumo_TraCILink_Sg__Sg__Reverse__SWIG_1(arg1,arg2,arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      } catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILinkVectorVector_SetRange___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< std::vector< libsumo::TraCILink > > *arg1 = (std::vector< std::vector< libsumo::TraCILink > > *) 0 ;
  int arg2 ;
  std::vector< std::vector< libsumo::TraCILink > > *arg3 = 0 ;
  
  arg1 = (std::vector< std::vector< libsumo::TraCILink > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< std::vector< libsumo::TraCILink > > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::vector< libsumo::TraCILink > > const & is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_std_vector_Sl_libsumo_TraCILink_Sg__Sg__SetRange(arg1,arg2,(std::vector< std::vector< libsumo::TraCILink > > const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_TraCILinkVectorVector___(void * jarg1) {
  std::vector< std::vector< libsumo::TraCILink > > *arg1 = (std::vector< std::vector< libsumo::TraCILink > > *) 0 ;
  
  arg1 = (std::vector< std::vector< libsumo::TraCILink > > *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCINextTLSVector__SWIG_0___() {
  void * jresult ;
  std::vector< libsumo::TraCINextTLSData > *result = 0 ;
  
  {
    try {
      result = (std::vector< libsumo::TraCINextTLSData > *)new std::vector< libsumo::TraCINextTLSData >();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCINextTLSVector__SWIG_1___(void * jarg1) {
  void * jresult ;
  std::vector< libsumo::TraCINextTLSData > *arg1 = 0 ;
  std::vector< libsumo::TraCINextTLSData > *result = 0 ;
  
  arg1 = (std::vector< libsumo::TraCINextTLSData > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< libsumo::TraCINextTLSData > const & is null", 0);
    return 0;
  } 
  {
    try {
      result = (std::vector< libsumo::TraCINextTLSData > *)new std::vector< libsumo::TraCINextTLSData >((std::vector< libsumo::TraCINextTLSData > const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextTLSVector_Clear___(void * jarg1) {
  std::vector< libsumo::TraCINextTLSData > *arg1 = (std::vector< libsumo::TraCINextTLSData > *) 0 ;
  
  arg1 = (std::vector< libsumo::TraCINextTLSData > *)jarg1; 
  {
    try {
      (arg1)->clear();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextTLSVector_Add___(void * jarg1, void * jarg2) {
  std::vector< libsumo::TraCINextTLSData > *arg1 = (std::vector< libsumo::TraCINextTLSData > *) 0 ;
  libsumo::TraCINextTLSData *arg2 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCINextTLSData > *)jarg1; 
  
  arg2 = (libsumo::TraCINextTLSData *)(((std::shared_ptr< const libsumo::TraCINextTLSData > *)jarg2) ? ((std::shared_ptr< const libsumo::TraCINextTLSData > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCINextTLSData const & reference is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->push_back((libsumo::TraCINextTLSData const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextTLSVector_size___(void * jarg1) {
  unsigned int jresult ;
  std::vector< libsumo::TraCINextTLSData > *arg1 = (std::vector< libsumo::TraCINextTLSData > *) 0 ;
  std::vector< libsumo::TraCINextTLSData >::size_type result;
  
  arg1 = (std::vector< libsumo::TraCINextTLSData > *)jarg1; 
  {
    try {
      result = ((std::vector< libsumo::TraCINextTLSData > const *)arg1)->size();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (unsigned int)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextTLSVector_empty___(void * jarg1) {
  unsigned int jresult ;
  std::vector< libsumo::TraCINextTLSData > *arg1 = (std::vector< libsumo::TraCINextTLSData > *) 0 ;
  bool result;
  
  arg1 = (std::vector< libsumo::TraCINextTLSData > *)jarg1; 
  {
    try {
      result = (bool)((std::vector< libsumo::TraCINextTLSData > const *)arg1)->empty();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextTLSVector_capacity___(void * jarg1) {
  unsigned int jresult ;
  std::vector< libsumo::TraCINextTLSData > *arg1 = (std::vector< libsumo::TraCINextTLSData > *) 0 ;
  std::vector< libsumo::TraCINextTLSData >::size_type result;
  
  arg1 = (std::vector< libsumo::TraCINextTLSData > *)jarg1; 
  {
    try {
      result = ((std::vector< libsumo::TraCINextTLSData > const *)arg1)->capacity();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (unsigned int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextTLSVector_reserve___(void * jarg1, unsigned int jarg2) {
  std::vector< libsumo::TraCINextTLSData > *arg1 = (std::vector< libsumo::TraCINextTLSData > *) 0 ;
  std::vector< libsumo::TraCINextTLSData >::size_type arg2 ;
  
  arg1 = (std::vector< libsumo::TraCINextTLSData > *)jarg1; 
  arg2 = (std::vector< libsumo::TraCINextTLSData >::size_type)jarg2; 
  {
    try {
      (arg1)->reserve(SWIG_STD_MOVE(arg2));
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCINextTLSVector__SWIG_2___(int jarg1) {
  void * jresult ;
  int arg1 ;
  std::vector< libsumo::TraCINextTLSData > *result = 0 ;
  
  arg1 = (int)jarg1; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCINextTLSData > *)new_std_vector_Sl_libsumo_TraCINextTLSData_Sg___SWIG_2(arg1);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextTLSVector_getitemcopy___(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< libsumo::TraCINextTLSData > *arg1 = (std::vector< libsumo::TraCINextTLSData > *) 0 ;
  int arg2 ;
  libsumo::TraCINextTLSData result;
  
  arg1 = (std::vector< libsumo::TraCINextTLSData > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = std_vector_Sl_libsumo_TraCINextTLSData_Sg__getitemcopy(arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr<  libsumo::TraCINextTLSData >(new libsumo::TraCINextTLSData(result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextTLSVector_getitem___(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< libsumo::TraCINextTLSData > *arg1 = (std::vector< libsumo::TraCINextTLSData > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCINextTLSData >::value_type *result = 0 ;
  
  arg1 = (std::vector< libsumo::TraCINextTLSData > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCINextTLSData >::value_type *) &std_vector_Sl_libsumo_TraCINextTLSData_Sg__getitem(arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr< const libsumo::TraCINextTLSData >(result SWIG_NO_NULL_DELETER_0); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextTLSVector_setitem___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< libsumo::TraCINextTLSData > *arg1 = (std::vector< libsumo::TraCINextTLSData > *) 0 ;
  int arg2 ;
  libsumo::TraCINextTLSData *arg3 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCINextTLSData > *)jarg1; 
  arg2 = (int)jarg2; 
  
  arg3 = (libsumo::TraCINextTLSData *)(((std::shared_ptr< const libsumo::TraCINextTLSData > *)jarg3) ? ((std::shared_ptr< const libsumo::TraCINextTLSData > *)jarg3)->get() : 0);
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCINextTLSData const & reference is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCINextTLSData_Sg__setitem(arg1,arg2,(libsumo::TraCINextTLSData const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextTLSVector_AddRange___(void * jarg1, void * jarg2) {
  std::vector< libsumo::TraCINextTLSData > *arg1 = (std::vector< libsumo::TraCINextTLSData > *) 0 ;
  std::vector< libsumo::TraCINextTLSData > *arg2 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCINextTLSData > *)jarg1; 
  arg2 = (std::vector< libsumo::TraCINextTLSData > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< libsumo::TraCINextTLSData > const & is null", 0);
    return ;
  } 
  {
    try {
      std_vector_Sl_libsumo_TraCINextTLSData_Sg__AddRange(arg1,(std::vector< libsumo::TraCINextTLSData > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextTLSVector_GetRange___(void * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  std::vector< libsumo::TraCINextTLSData > *arg1 = (std::vector< libsumo::TraCINextTLSData > *) 0 ;
  int arg2 ;
  int arg3 ;
  std::vector< libsumo::TraCINextTLSData > *result = 0 ;
  
  arg1 = (std::vector< libsumo::TraCINextTLSData > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCINextTLSData > *)std_vector_Sl_libsumo_TraCINextTLSData_Sg__GetRange(arg1,arg2,arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      } catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextTLSVector_Insert___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< libsumo::TraCINextTLSData > *arg1 = (std::vector< libsumo::TraCINextTLSData > *) 0 ;
  int arg2 ;
  libsumo::TraCINextTLSData *arg3 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCINextTLSData > *)jarg1; 
  arg2 = (int)jarg2; 
  
  arg3 = (libsumo::TraCINextTLSData *)(((std::shared_ptr< const libsumo::TraCINextTLSData > *)jarg3) ? ((std::shared_ptr< const libsumo::TraCINextTLSData > *)jarg3)->get() : 0);
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCINextTLSData const & reference is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCINextTLSData_Sg__Insert(arg1,arg2,(libsumo::TraCINextTLSData const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextTLSVector_InsertRange___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< libsumo::TraCINextTLSData > *arg1 = (std::vector< libsumo::TraCINextTLSData > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCINextTLSData > *arg3 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCINextTLSData > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< libsumo::TraCINextTLSData > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< libsumo::TraCINextTLSData > const & is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCINextTLSData_Sg__InsertRange(arg1,arg2,(std::vector< libsumo::TraCINextTLSData > const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextTLSVector_RemoveAt___(void * jarg1, int jarg2) {
  std::vector< libsumo::TraCINextTLSData > *arg1 = (std::vector< libsumo::TraCINextTLSData > *) 0 ;
  int arg2 ;
  
  arg1 = (std::vector< libsumo::TraCINextTLSData > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCINextTLSData_Sg__RemoveAt(arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextTLSVector_RemoveRange___(void * jarg1, int jarg2, int jarg3) {
  std::vector< libsumo::TraCINextTLSData > *arg1 = (std::vector< libsumo::TraCINextTLSData > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< libsumo::TraCINextTLSData > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCINextTLSData_Sg__RemoveRange(arg1,arg2,arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      } catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextTLSVector_Repeat___(void * jarg1, int jarg2) {
  void * jresult ;
  libsumo::TraCINextTLSData *arg1 = 0 ;
  int arg2 ;
  std::vector< libsumo::TraCINextTLSData > *result = 0 ;
  
  
  arg1 = (libsumo::TraCINextTLSData *)(((std::shared_ptr< const libsumo::TraCINextTLSData > *)jarg1) ? ((std::shared_ptr< const libsumo::TraCINextTLSData > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCINextTLSData const & reference is null", 0);
    return 0;
  } 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCINextTLSData > *)std_vector_Sl_libsumo_TraCINextTLSData_Sg__Repeat((libsumo::TraCINextTLSData const &)*arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextTLSVector_Reverse__SWIG_0___(void * jarg1) {
  std::vector< libsumo::TraCINextTLSData > *arg1 = (std::vector< libsumo::TraCINextTLSData > *) 0 ;
  
  arg1 = (std::vector< libsumo::TraCINextTLSData > *)jarg1; 
  {
    try {
      std_vector_Sl_libsumo_TraCINextTLSData_Sg__Reverse__SWIG_0(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextTLSVector_Reverse__SWIG_1___(void * jarg1, int jarg2, int jarg3) {
  std::vector< libsumo::TraCINextTLSData > *arg1 = (std::vector< libsumo::TraCINextTLSData > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< libsumo::TraCINextTLSData > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCINextTLSData_Sg__Reverse__SWIG_1(arg1,arg2,arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      } catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextTLSVector_SetRange___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< libsumo::TraCINextTLSData > *arg1 = (std::vector< libsumo::TraCINextTLSData > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCINextTLSData > *arg3 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCINextTLSData > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< libsumo::TraCINextTLSData > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< libsumo::TraCINextTLSData > const & is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCINextTLSData_Sg__SetRange(arg1,arg2,(std::vector< libsumo::TraCINextTLSData > const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_TraCINextTLSVector___(void * jarg1) {
  std::vector< libsumo::TraCINextTLSData > *arg1 = (std::vector< libsumo::TraCINextTLSData > *) 0 ;
  
  arg1 = (std::vector< libsumo::TraCINextTLSData > *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCPositionVector__SWIG_0___() {
  void * jresult ;
  std::vector< libsumo::TraCIPosition > *result = 0 ;
  
  {
    try {
      result = (std::vector< libsumo::TraCIPosition > *)new std::vector< libsumo::TraCIPosition >();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCPositionVector__SWIG_1___(void * jarg1) {
  void * jresult ;
  std::vector< libsumo::TraCIPosition > *arg1 = 0 ;
  std::vector< libsumo::TraCIPosition > *result = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIPosition > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< libsumo::TraCIPosition > const & is null", 0);
    return 0;
  } 
  {
    try {
      result = (std::vector< libsumo::TraCIPosition > *)new std::vector< libsumo::TraCIPosition >((std::vector< libsumo::TraCIPosition > const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCPositionVector_Clear___(void * jarg1) {
  std::vector< libsumo::TraCIPosition > *arg1 = (std::vector< libsumo::TraCIPosition > *) 0 ;
  
  arg1 = (std::vector< libsumo::TraCIPosition > *)jarg1; 
  {
    try {
      (arg1)->clear();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCPositionVector_Add___(void * jarg1, void * jarg2) {
  std::vector< libsumo::TraCIPosition > *arg1 = (std::vector< libsumo::TraCIPosition > *) 0 ;
  libsumo::TraCIPosition *arg2 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIPosition > *)jarg1; 
  
  arg2 = (libsumo::TraCIPosition *)(((std::shared_ptr< const libsumo::TraCIPosition > *)jarg2) ? ((std::shared_ptr< const libsumo::TraCIPosition > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIPosition const & reference is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->push_back((libsumo::TraCIPosition const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCPositionVector_size___(void * jarg1) {
  unsigned int jresult ;
  std::vector< libsumo::TraCIPosition > *arg1 = (std::vector< libsumo::TraCIPosition > *) 0 ;
  std::vector< libsumo::TraCIPosition >::size_type result;
  
  arg1 = (std::vector< libsumo::TraCIPosition > *)jarg1; 
  {
    try {
      result = ((std::vector< libsumo::TraCIPosition > const *)arg1)->size();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (unsigned int)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCPositionVector_empty___(void * jarg1) {
  unsigned int jresult ;
  std::vector< libsumo::TraCIPosition > *arg1 = (std::vector< libsumo::TraCIPosition > *) 0 ;
  bool result;
  
  arg1 = (std::vector< libsumo::TraCIPosition > *)jarg1; 
  {
    try {
      result = (bool)((std::vector< libsumo::TraCIPosition > const *)arg1)->empty();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCPositionVector_capacity___(void * jarg1) {
  unsigned int jresult ;
  std::vector< libsumo::TraCIPosition > *arg1 = (std::vector< libsumo::TraCIPosition > *) 0 ;
  std::vector< libsumo::TraCIPosition >::size_type result;
  
  arg1 = (std::vector< libsumo::TraCIPosition > *)jarg1; 
  {
    try {
      result = ((std::vector< libsumo::TraCIPosition > const *)arg1)->capacity();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (unsigned int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCPositionVector_reserve___(void * jarg1, unsigned int jarg2) {
  std::vector< libsumo::TraCIPosition > *arg1 = (std::vector< libsumo::TraCIPosition > *) 0 ;
  std::vector< libsumo::TraCIPosition >::size_type arg2 ;
  
  arg1 = (std::vector< libsumo::TraCIPosition > *)jarg1; 
  arg2 = (std::vector< libsumo::TraCIPosition >::size_type)jarg2; 
  {
    try {
      (arg1)->reserve(SWIG_STD_MOVE(arg2));
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCPositionVector__SWIG_2___(int jarg1) {
  void * jresult ;
  int arg1 ;
  std::vector< libsumo::TraCIPosition > *result = 0 ;
  
  arg1 = (int)jarg1; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCIPosition > *)new_std_vector_Sl_libsumo_TraCIPosition_Sg___SWIG_2(arg1);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCPositionVector_getitemcopy___(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< libsumo::TraCIPosition > *arg1 = (std::vector< libsumo::TraCIPosition > *) 0 ;
  int arg2 ;
  libsumo::TraCIPosition result;
  
  arg1 = (std::vector< libsumo::TraCIPosition > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = std_vector_Sl_libsumo_TraCIPosition_Sg__getitemcopy(arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr<  libsumo::TraCIPosition >(new libsumo::TraCIPosition(result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCPositionVector_getitem___(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< libsumo::TraCIPosition > *arg1 = (std::vector< libsumo::TraCIPosition > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCIPosition >::value_type *result = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIPosition > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCIPosition >::value_type *) &std_vector_Sl_libsumo_TraCIPosition_Sg__getitem(arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr< const libsumo::TraCIPosition >(result SWIG_NO_NULL_DELETER_0); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCPositionVector_setitem___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< libsumo::TraCIPosition > *arg1 = (std::vector< libsumo::TraCIPosition > *) 0 ;
  int arg2 ;
  libsumo::TraCIPosition *arg3 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIPosition > *)jarg1; 
  arg2 = (int)jarg2; 
  
  arg3 = (libsumo::TraCIPosition *)(((std::shared_ptr< const libsumo::TraCIPosition > *)jarg3) ? ((std::shared_ptr< const libsumo::TraCIPosition > *)jarg3)->get() : 0);
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIPosition const & reference is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCIPosition_Sg__setitem(arg1,arg2,(libsumo::TraCIPosition const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCPositionVector_AddRange___(void * jarg1, void * jarg2) {
  std::vector< libsumo::TraCIPosition > *arg1 = (std::vector< libsumo::TraCIPosition > *) 0 ;
  std::vector< libsumo::TraCIPosition > *arg2 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIPosition > *)jarg1; 
  arg2 = (std::vector< libsumo::TraCIPosition > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< libsumo::TraCIPosition > const & is null", 0);
    return ;
  } 
  {
    try {
      std_vector_Sl_libsumo_TraCIPosition_Sg__AddRange(arg1,(std::vector< libsumo::TraCIPosition > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCPositionVector_GetRange___(void * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  std::vector< libsumo::TraCIPosition > *arg1 = (std::vector< libsumo::TraCIPosition > *) 0 ;
  int arg2 ;
  int arg3 ;
  std::vector< libsumo::TraCIPosition > *result = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIPosition > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCIPosition > *)std_vector_Sl_libsumo_TraCIPosition_Sg__GetRange(arg1,arg2,arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      } catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCPositionVector_Insert___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< libsumo::TraCIPosition > *arg1 = (std::vector< libsumo::TraCIPosition > *) 0 ;
  int arg2 ;
  libsumo::TraCIPosition *arg3 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIPosition > *)jarg1; 
  arg2 = (int)jarg2; 
  
  arg3 = (libsumo::TraCIPosition *)(((std::shared_ptr< const libsumo::TraCIPosition > *)jarg3) ? ((std::shared_ptr< const libsumo::TraCIPosition > *)jarg3)->get() : 0);
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIPosition const & reference is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCIPosition_Sg__Insert(arg1,arg2,(libsumo::TraCIPosition const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCPositionVector_InsertRange___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< libsumo::TraCIPosition > *arg1 = (std::vector< libsumo::TraCIPosition > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCIPosition > *arg3 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIPosition > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< libsumo::TraCIPosition > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< libsumo::TraCIPosition > const & is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCIPosition_Sg__InsertRange(arg1,arg2,(std::vector< libsumo::TraCIPosition > const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCPositionVector_RemoveAt___(void * jarg1, int jarg2) {
  std::vector< libsumo::TraCIPosition > *arg1 = (std::vector< libsumo::TraCIPosition > *) 0 ;
  int arg2 ;
  
  arg1 = (std::vector< libsumo::TraCIPosition > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCIPosition_Sg__RemoveAt(arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCPositionVector_RemoveRange___(void * jarg1, int jarg2, int jarg3) {
  std::vector< libsumo::TraCIPosition > *arg1 = (std::vector< libsumo::TraCIPosition > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< libsumo::TraCIPosition > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCIPosition_Sg__RemoveRange(arg1,arg2,arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      } catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCPositionVector_Repeat___(void * jarg1, int jarg2) {
  void * jresult ;
  libsumo::TraCIPosition *arg1 = 0 ;
  int arg2 ;
  std::vector< libsumo::TraCIPosition > *result = 0 ;
  
  
  arg1 = (libsumo::TraCIPosition *)(((std::shared_ptr< const libsumo::TraCIPosition > *)jarg1) ? ((std::shared_ptr< const libsumo::TraCIPosition > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIPosition const & reference is null", 0);
    return 0;
  } 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCIPosition > *)std_vector_Sl_libsumo_TraCIPosition_Sg__Repeat((libsumo::TraCIPosition const &)*arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCPositionVector_Reverse__SWIG_0___(void * jarg1) {
  std::vector< libsumo::TraCIPosition > *arg1 = (std::vector< libsumo::TraCIPosition > *) 0 ;
  
  arg1 = (std::vector< libsumo::TraCIPosition > *)jarg1; 
  {
    try {
      std_vector_Sl_libsumo_TraCIPosition_Sg__Reverse__SWIG_0(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCPositionVector_Reverse__SWIG_1___(void * jarg1, int jarg2, int jarg3) {
  std::vector< libsumo::TraCIPosition > *arg1 = (std::vector< libsumo::TraCIPosition > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< libsumo::TraCIPosition > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCIPosition_Sg__Reverse__SWIG_1(arg1,arg2,arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      } catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCPositionVector_SetRange___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< libsumo::TraCIPosition > *arg1 = (std::vector< libsumo::TraCIPosition > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCIPosition > *arg3 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIPosition > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< libsumo::TraCIPosition > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< libsumo::TraCIPosition > const & is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCIPosition_Sg__SetRange(arg1,arg2,(std::vector< libsumo::TraCIPosition > const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_TraCPositionVector___(void * jarg1) {
  std::vector< libsumo::TraCIPosition > *arg1 = (std::vector< libsumo::TraCIPosition > *) 0 ;
  
  arg1 = (std::vector< libsumo::TraCIPosition > *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIVehicleDataVector__SWIG_0___() {
  void * jresult ;
  std::vector< libsumo::TraCIVehicleData > *result = 0 ;
  
  {
    try {
      result = (std::vector< libsumo::TraCIVehicleData > *)new std::vector< libsumo::TraCIVehicleData >();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIVehicleDataVector__SWIG_1___(void * jarg1) {
  void * jresult ;
  std::vector< libsumo::TraCIVehicleData > *arg1 = 0 ;
  std::vector< libsumo::TraCIVehicleData > *result = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIVehicleData > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< libsumo::TraCIVehicleData > const & is null", 0);
    return 0;
  } 
  {
    try {
      result = (std::vector< libsumo::TraCIVehicleData > *)new std::vector< libsumo::TraCIVehicleData >((std::vector< libsumo::TraCIVehicleData > const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIVehicleDataVector_Clear___(void * jarg1) {
  std::vector< libsumo::TraCIVehicleData > *arg1 = (std::vector< libsumo::TraCIVehicleData > *) 0 ;
  
  arg1 = (std::vector< libsumo::TraCIVehicleData > *)jarg1; 
  {
    try {
      (arg1)->clear();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIVehicleDataVector_Add___(void * jarg1, void * jarg2) {
  std::vector< libsumo::TraCIVehicleData > *arg1 = (std::vector< libsumo::TraCIVehicleData > *) 0 ;
  libsumo::TraCIVehicleData *arg2 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIVehicleData > *)jarg1; 
  
  arg2 = (libsumo::TraCIVehicleData *)(((std::shared_ptr< const libsumo::TraCIVehicleData > *)jarg2) ? ((std::shared_ptr< const libsumo::TraCIVehicleData > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIVehicleData const & reference is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->push_back((libsumo::TraCIVehicleData const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIVehicleDataVector_size___(void * jarg1) {
  unsigned int jresult ;
  std::vector< libsumo::TraCIVehicleData > *arg1 = (std::vector< libsumo::TraCIVehicleData > *) 0 ;
  std::vector< libsumo::TraCIVehicleData >::size_type result;
  
  arg1 = (std::vector< libsumo::TraCIVehicleData > *)jarg1; 
  {
    try {
      result = ((std::vector< libsumo::TraCIVehicleData > const *)arg1)->size();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (unsigned int)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIVehicleDataVector_empty___(void * jarg1) {
  unsigned int jresult ;
  std::vector< libsumo::TraCIVehicleData > *arg1 = (std::vector< libsumo::TraCIVehicleData > *) 0 ;
  bool result;
  
  arg1 = (std::vector< libsumo::TraCIVehicleData > *)jarg1; 
  {
    try {
      result = (bool)((std::vector< libsumo::TraCIVehicleData > const *)arg1)->empty();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIVehicleDataVector_capacity___(void * jarg1) {
  unsigned int jresult ;
  std::vector< libsumo::TraCIVehicleData > *arg1 = (std::vector< libsumo::TraCIVehicleData > *) 0 ;
  std::vector< libsumo::TraCIVehicleData >::size_type result;
  
  arg1 = (std::vector< libsumo::TraCIVehicleData > *)jarg1; 
  {
    try {
      result = ((std::vector< libsumo::TraCIVehicleData > const *)arg1)->capacity();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (unsigned int)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIVehicleDataVector_reserve___(void * jarg1, unsigned int jarg2) {
  std::vector< libsumo::TraCIVehicleData > *arg1 = (std::vector< libsumo::TraCIVehicleData > *) 0 ;
  std::vector< libsumo::TraCIVehicleData >::size_type arg2 ;
  
  arg1 = (std::vector< libsumo::TraCIVehicleData > *)jarg1; 
  arg2 = (std::vector< libsumo::TraCIVehicleData >::size_type)jarg2; 
  {
    try {
      (arg1)->reserve(SWIG_STD_MOVE(arg2));
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIVehicleDataVector__SWIG_2___(int jarg1) {
  void * jresult ;
  int arg1 ;
  std::vector< libsumo::TraCIVehicleData > *result = 0 ;
  
  arg1 = (int)jarg1; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCIVehicleData > *)new_std_vector_Sl_libsumo_TraCIVehicleData_Sg___SWIG_2(arg1);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIVehicleDataVector_getitemcopy___(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< libsumo::TraCIVehicleData > *arg1 = (std::vector< libsumo::TraCIVehicleData > *) 0 ;
  int arg2 ;
  libsumo::TraCIVehicleData result;
  
  arg1 = (std::vector< libsumo::TraCIVehicleData > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = std_vector_Sl_libsumo_TraCIVehicleData_Sg__getitemcopy(arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr<  libsumo::TraCIVehicleData >(new libsumo::TraCIVehicleData(result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIVehicleDataVector_getitem___(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< libsumo::TraCIVehicleData > *arg1 = (std::vector< libsumo::TraCIVehicleData > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCIVehicleData >::value_type *result = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIVehicleData > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCIVehicleData >::value_type *) &std_vector_Sl_libsumo_TraCIVehicleData_Sg__getitem(arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr< const libsumo::TraCIVehicleData >(result SWIG_NO_NULL_DELETER_0); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIVehicleDataVector_setitem___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< libsumo::TraCIVehicleData > *arg1 = (std::vector< libsumo::TraCIVehicleData > *) 0 ;
  int arg2 ;
  libsumo::TraCIVehicleData *arg3 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIVehicleData > *)jarg1; 
  arg2 = (int)jarg2; 
  
  arg3 = (libsumo::TraCIVehicleData *)(((std::shared_ptr< const libsumo::TraCIVehicleData > *)jarg3) ? ((std::shared_ptr< const libsumo::TraCIVehicleData > *)jarg3)->get() : 0);
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIVehicleData const & reference is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCIVehicleData_Sg__setitem(arg1,arg2,(libsumo::TraCIVehicleData const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIVehicleDataVector_AddRange___(void * jarg1, void * jarg2) {
  std::vector< libsumo::TraCIVehicleData > *arg1 = (std::vector< libsumo::TraCIVehicleData > *) 0 ;
  std::vector< libsumo::TraCIVehicleData > *arg2 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIVehicleData > *)jarg1; 
  arg2 = (std::vector< libsumo::TraCIVehicleData > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< libsumo::TraCIVehicleData > const & is null", 0);
    return ;
  } 
  {
    try {
      std_vector_Sl_libsumo_TraCIVehicleData_Sg__AddRange(arg1,(std::vector< libsumo::TraCIVehicleData > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIVehicleDataVector_GetRange___(void * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  std::vector< libsumo::TraCIVehicleData > *arg1 = (std::vector< libsumo::TraCIVehicleData > *) 0 ;
  int arg2 ;
  int arg3 ;
  std::vector< libsumo::TraCIVehicleData > *result = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIVehicleData > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCIVehicleData > *)std_vector_Sl_libsumo_TraCIVehicleData_Sg__GetRange(arg1,arg2,arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      } catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIVehicleDataVector_Insert___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< libsumo::TraCIVehicleData > *arg1 = (std::vector< libsumo::TraCIVehicleData > *) 0 ;
  int arg2 ;
  libsumo::TraCIVehicleData *arg3 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIVehicleData > *)jarg1; 
  arg2 = (int)jarg2; 
  
  arg3 = (libsumo::TraCIVehicleData *)(((std::shared_ptr< const libsumo::TraCIVehicleData > *)jarg3) ? ((std::shared_ptr< const libsumo::TraCIVehicleData > *)jarg3)->get() : 0);
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIVehicleData const & reference is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCIVehicleData_Sg__Insert(arg1,arg2,(libsumo::TraCIVehicleData const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIVehicleDataVector_InsertRange___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< libsumo::TraCIVehicleData > *arg1 = (std::vector< libsumo::TraCIVehicleData > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCIVehicleData > *arg3 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIVehicleData > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< libsumo::TraCIVehicleData > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< libsumo::TraCIVehicleData > const & is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCIVehicleData_Sg__InsertRange(arg1,arg2,(std::vector< libsumo::TraCIVehicleData > const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIVehicleDataVector_RemoveAt___(void * jarg1, int jarg2) {
  std::vector< libsumo::TraCIVehicleData > *arg1 = (std::vector< libsumo::TraCIVehicleData > *) 0 ;
  int arg2 ;
  
  arg1 = (std::vector< libsumo::TraCIVehicleData > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCIVehicleData_Sg__RemoveAt(arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIVehicleDataVector_RemoveRange___(void * jarg1, int jarg2, int jarg3) {
  std::vector< libsumo::TraCIVehicleData > *arg1 = (std::vector< libsumo::TraCIVehicleData > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< libsumo::TraCIVehicleData > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCIVehicleData_Sg__RemoveRange(arg1,arg2,arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      } catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIVehicleDataVector_Repeat___(void * jarg1, int jarg2) {
  void * jresult ;
  libsumo::TraCIVehicleData *arg1 = 0 ;
  int arg2 ;
  std::vector< libsumo::TraCIVehicleData > *result = 0 ;
  
  
  arg1 = (libsumo::TraCIVehicleData *)(((std::shared_ptr< const libsumo::TraCIVehicleData > *)jarg1) ? ((std::shared_ptr< const libsumo::TraCIVehicleData > *)jarg1)->get() : 0);
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIVehicleData const & reference is null", 0);
    return 0;
  } 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (std::vector< libsumo::TraCIVehicleData > *)std_vector_Sl_libsumo_TraCIVehicleData_Sg__Repeat((libsumo::TraCIVehicleData const &)*arg1,arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIVehicleDataVector_Reverse__SWIG_0___(void * jarg1) {
  std::vector< libsumo::TraCIVehicleData > *arg1 = (std::vector< libsumo::TraCIVehicleData > *) 0 ;
  
  arg1 = (std::vector< libsumo::TraCIVehicleData > *)jarg1; 
  {
    try {
      std_vector_Sl_libsumo_TraCIVehicleData_Sg__Reverse__SWIG_0(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIVehicleDataVector_Reverse__SWIG_1___(void * jarg1, int jarg2, int jarg3) {
  std::vector< libsumo::TraCIVehicleData > *arg1 = (std::vector< libsumo::TraCIVehicleData > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< libsumo::TraCIVehicleData > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCIVehicleData_Sg__Reverse__SWIG_1(arg1,arg2,arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      } catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIVehicleDataVector_SetRange___(void * jarg1, int jarg2, void * jarg3) {
  std::vector< libsumo::TraCIVehicleData > *arg1 = (std::vector< libsumo::TraCIVehicleData > *) 0 ;
  int arg2 ;
  std::vector< libsumo::TraCIVehicleData > *arg3 = 0 ;
  
  arg1 = (std::vector< libsumo::TraCIVehicleData > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< libsumo::TraCIVehicleData > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< libsumo::TraCIVehicleData > const & is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_libsumo_TraCIVehicleData_Sg__SetRange(arg1,arg2,(std::vector< libsumo::TraCIVehicleData > const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_TraCIVehicleDataVector___(void * jarg1) {
  std::vector< libsumo::TraCIVehicleData > *arg1 = (std::vector< libsumo::TraCIVehicleData > *) 0 ;
  
  arg1 = (std::vector< libsumo::TraCIVehicleData > *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIResults__SWIG_0___() {
  void * jresult ;
  std::map< int,std::shared_ptr< libsumo::TraCIResult > > *result = 0 ;
  
  {
    try {
      result = (std::map< int,std::shared_ptr< libsumo::TraCIResult > > *)new std::map< int,std::shared_ptr< libsumo::TraCIResult > >();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_TraCIResults__SWIG_1___(void * jarg1) {
  void * jresult ;
  std::map< int,std::shared_ptr< libsumo::TraCIResult > > *arg1 = 0 ;
  std::map< int,std::shared_ptr< libsumo::TraCIResult > > *result = 0 ;
  
  arg1 = (std::map< int,std::shared_ptr< libsumo::TraCIResult > > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::map< int,std::shared_ptr< libsumo::TraCIResult > > const & is null", 0);
    return 0;
  } 
  {
    try {
      result = (std::map< int,std::shared_ptr< libsumo::TraCIResult > > *)new std::map< int,std::shared_ptr< libsumo::TraCIResult > >((std::map< int,std::shared_ptr< libsumo::TraCIResult > > const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIResults_size___(void * jarg1) {
  unsigned int jresult ;
  std::map< int,std::shared_ptr< libsumo::TraCIResult > > *arg1 = (std::map< int,std::shared_ptr< libsumo::TraCIResult > > *) 0 ;
  std::map< int,std::shared_ptr< libsumo::TraCIResult > >::size_type result;
  
  arg1 = (std::map< int,std::shared_ptr< libsumo::TraCIResult > > *)jarg1; 
  {
    try {
      result = ((std::map< int,std::shared_ptr< libsumo::TraCIResult > > const *)arg1)->size();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (unsigned int)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIResults_empty___(void * jarg1) {
  unsigned int jresult ;
  std::map< int,std::shared_ptr< libsumo::TraCIResult > > *arg1 = (std::map< int,std::shared_ptr< libsumo::TraCIResult > > *) 0 ;
  bool result;
  
  arg1 = (std::map< int,std::shared_ptr< libsumo::TraCIResult > > *)jarg1; 
  {
    try {
      result = (bool)((std::map< int,std::shared_ptr< libsumo::TraCIResult > > const *)arg1)->empty();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIResults_Clear___(void * jarg1) {
  std::map< int,std::shared_ptr< libsumo::TraCIResult > > *arg1 = (std::map< int,std::shared_ptr< libsumo::TraCIResult > > *) 0 ;
  
  arg1 = (std::map< int,std::shared_ptr< libsumo::TraCIResult > > *)jarg1; 
  {
    try {
      (arg1)->clear();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIResults_getitem___(void * jarg1, int jarg2) {
  void * jresult ;
  std::map< int,std::shared_ptr< libsumo::TraCIResult > > *arg1 = (std::map< int,std::shared_ptr< libsumo::TraCIResult > > *) 0 ;
  std::map< int,std::shared_ptr< libsumo::TraCIResult > >::key_type *arg2 = 0 ;
  std::map< int,std::shared_ptr< libsumo::TraCIResult > >::key_type temp2 ;
  std::map< int,std::shared_ptr< libsumo::TraCIResult > >::mapped_type *result = 0 ;
  
  arg1 = (std::map< int,std::shared_ptr< libsumo::TraCIResult > > *)jarg1; 
  temp2 = (std::map< int,std::shared_ptr< libsumo::TraCIResult > >::key_type)jarg2; 
  arg2 = &temp2; 
  {
    try {
      try {
        result = (std::map< int,std::shared_ptr< libsumo::TraCIResult > >::mapped_type *) &std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__getitem(arg1,(int const &)*arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = *result ? new std::map< int,std::shared_ptr< libsumo::TraCIResult > >::mapped_type(*result) : 0; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIResults_setitem___(void * jarg1, int jarg2, void * jarg3) {
  std::map< int,std::shared_ptr< libsumo::TraCIResult > > *arg1 = (std::map< int,std::shared_ptr< libsumo::TraCIResult > > *) 0 ;
  std::map< int,std::shared_ptr< libsumo::TraCIResult > >::key_type *arg2 = 0 ;
  std::map< int,std::shared_ptr< libsumo::TraCIResult > >::mapped_type *arg3 = 0 ;
  std::map< int,std::shared_ptr< libsumo::TraCIResult > >::key_type temp2 ;
  std::map< int,std::shared_ptr< libsumo::TraCIResult > >::mapped_type tempnull3 ;
  
  arg1 = (std::map< int,std::shared_ptr< libsumo::TraCIResult > > *)jarg1; 
  temp2 = (std::map< int,std::shared_ptr< libsumo::TraCIResult > >::key_type)jarg2; 
  arg2 = &temp2; 
  arg3 = jarg3 ? (std::map< int,std::shared_ptr< libsumo::TraCIResult > >::mapped_type *)jarg3 : &tempnull3; 
  {
    try {
      std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__setitem(arg1,(int const &)*arg2,(std::shared_ptr< libsumo::TraCIResult > const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIResults_ContainsKey___(void * jarg1, int jarg2) {
  unsigned int jresult ;
  std::map< int,std::shared_ptr< libsumo::TraCIResult > > *arg1 = (std::map< int,std::shared_ptr< libsumo::TraCIResult > > *) 0 ;
  std::map< int,std::shared_ptr< libsumo::TraCIResult > >::key_type *arg2 = 0 ;
  std::map< int,std::shared_ptr< libsumo::TraCIResult > >::key_type temp2 ;
  bool result;
  
  arg1 = (std::map< int,std::shared_ptr< libsumo::TraCIResult > > *)jarg1; 
  temp2 = (std::map< int,std::shared_ptr< libsumo::TraCIResult > >::key_type)jarg2; 
  arg2 = &temp2; 
  {
    try {
      result = (bool)std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__ContainsKey(arg1,(int const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIResults_Add___(void * jarg1, int jarg2, void * jarg3) {
  std::map< int,std::shared_ptr< libsumo::TraCIResult > > *arg1 = (std::map< int,std::shared_ptr< libsumo::TraCIResult > > *) 0 ;
  std::map< int,std::shared_ptr< libsumo::TraCIResult > >::key_type *arg2 = 0 ;
  std::map< int,std::shared_ptr< libsumo::TraCIResult > >::mapped_type *arg3 = 0 ;
  std::map< int,std::shared_ptr< libsumo::TraCIResult > >::key_type temp2 ;
  std::map< int,std::shared_ptr< libsumo::TraCIResult > >::mapped_type tempnull3 ;
  
  arg1 = (std::map< int,std::shared_ptr< libsumo::TraCIResult > > *)jarg1; 
  temp2 = (std::map< int,std::shared_ptr< libsumo::TraCIResult > >::key_type)jarg2; 
  arg2 = &temp2; 
  arg3 = jarg3 ? (std::map< int,std::shared_ptr< libsumo::TraCIResult > >::mapped_type *)jarg3 : &tempnull3; 
  {
    try {
      try {
        std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__Add(arg1,(int const &)*arg2,(std::shared_ptr< libsumo::TraCIResult > const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIResults_Remove___(void * jarg1, int jarg2) {
  unsigned int jresult ;
  std::map< int,std::shared_ptr< libsumo::TraCIResult > > *arg1 = (std::map< int,std::shared_ptr< libsumo::TraCIResult > > *) 0 ;
  std::map< int,std::shared_ptr< libsumo::TraCIResult > >::key_type *arg2 = 0 ;
  std::map< int,std::shared_ptr< libsumo::TraCIResult > >::key_type temp2 ;
  bool result;
  
  arg1 = (std::map< int,std::shared_ptr< libsumo::TraCIResult > > *)jarg1; 
  temp2 = (std::map< int,std::shared_ptr< libsumo::TraCIResult > >::key_type)jarg2; 
  arg2 = &temp2; 
  {
    try {
      result = (bool)std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__Remove(arg1,(int const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIResults_create_iterator_begin___(void * jarg1) {
  void * jresult ;
  std::map< int,std::shared_ptr< libsumo::TraCIResult > > *arg1 = (std::map< int,std::shared_ptr< libsumo::TraCIResult > > *) 0 ;
  std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > >::iterator *result = 0 ;
  
  arg1 = (std::map< int,std::shared_ptr< libsumo::TraCIResult > > *)jarg1; 
  {
    try {
      result = (std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > >::iterator *)std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__create_iterator_begin(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIResults_get_next_key___(void * jarg1, void * jarg2) {
  int jresult ;
  std::map< int,std::shared_ptr< libsumo::TraCIResult > > *arg1 = (std::map< int,std::shared_ptr< libsumo::TraCIResult > > *) 0 ;
  std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > >::iterator *arg2 = (std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > >::iterator *) 0 ;
  std::map< int,std::shared_ptr< libsumo::TraCIResult > >::key_type *result = 0 ;
  
  arg1 = (std::map< int,std::shared_ptr< libsumo::TraCIResult > > *)jarg1; 
  arg2 = (std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > >::iterator *)jarg2; 
  {
    try {
      result = (std::map< int,std::shared_ptr< libsumo::TraCIResult > >::key_type *) &std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__get_next_key(arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = *result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIResults_destroy_iterator___(void * jarg1, void * jarg2) {
  std::map< int,std::shared_ptr< libsumo::TraCIResult > > *arg1 = (std::map< int,std::shared_ptr< libsumo::TraCIResult > > *) 0 ;
  std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > >::iterator *arg2 = (std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > >::iterator *) 0 ;
  
  arg1 = (std::map< int,std::shared_ptr< libsumo::TraCIResult > > *)jarg1; 
  arg2 = (std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > >::iterator *)jarg2; 
  {
    try {
      std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__destroy_iterator(arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_TraCIResults___(void * jarg1) {
  std::map< int,std::shared_ptr< libsumo::TraCIResult > > *arg1 = (std::map< int,std::shared_ptr< libsumo::TraCIResult > > *) 0 ;
  
  arg1 = (std::map< int,std::shared_ptr< libsumo::TraCIResult > > *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_SubscriptionResults__SWIG_0___() {
  void * jresult ;
  std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *result = 0 ;
  
  {
    try {
      result = (std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *)new std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > >();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_SubscriptionResults__SWIG_1___(void * jarg1) {
  void * jresult ;
  std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > > > *arg1 = 0 ;
  std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *result = 0 ;
  
  arg1 = (std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > > > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > > > const & is null", 0);
    return 0;
  } 
  {
    try {
      result = (std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *)new std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > >((std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > > > const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_SubscriptionResults_size___(void * jarg1) {
  unsigned int jresult ;
  std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *arg1 = (std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *) 0 ;
  std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > >::size_type result;
  
  arg1 = (std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *)jarg1; 
  {
    try {
      result = ((std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > const *)arg1)->size();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (unsigned int)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_SubscriptionResults_empty___(void * jarg1) {
  unsigned int jresult ;
  std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *arg1 = (std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *) 0 ;
  bool result;
  
  arg1 = (std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *)jarg1; 
  {
    try {
      result = (bool)((std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > const *)arg1)->empty();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_SubscriptionResults_Clear___(void * jarg1) {
  std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *arg1 = (std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *) 0 ;
  
  arg1 = (std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *)jarg1; 
  {
    try {
      (arg1)->clear();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_SubscriptionResults_getitem___(void * jarg1, const char * jarg2) {
  void * jresult ;
  std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *arg1 = (std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *) 0 ;
  std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > >::key_type *arg2 = 0 ;
  std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > >::mapped_type *result = 0 ;
  
  arg1 = (std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > >::key_type arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      try {
        result = (std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > >::mapped_type *) &std_map_Sl_std_string_Sc_std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__Sg__getitem(arg1,(std::string const &)*arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_SubscriptionResults_setitem___(void * jarg1, const char * jarg2, void * jarg3) {
  std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *arg1 = (std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *) 0 ;
  std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > >::key_type *arg2 = 0 ;
  std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > >::mapped_type *arg3 = 0 ;
  
  arg1 = (std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > >::key_type arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > >::mapped_type *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > >::mapped_type const & is null", 0);
    return ;
  } 
  {
    try {
      std_map_Sl_std_string_Sc_std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__Sg__setitem(arg1,(std::string const &)*arg2,(std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > > const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_SubscriptionResults_ContainsKey___(void * jarg1, const char * jarg2) {
  unsigned int jresult ;
  std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *arg1 = (std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *) 0 ;
  std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > >::key_type *arg2 = 0 ;
  bool result;
  
  arg1 = (std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > >::key_type arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = (bool)std_map_Sl_std_string_Sc_std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__Sg__ContainsKey(arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_SubscriptionResults_Add___(void * jarg1, const char * jarg2, void * jarg3) {
  std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *arg1 = (std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *) 0 ;
  std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > >::key_type *arg2 = 0 ;
  std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > >::mapped_type *arg3 = 0 ;
  
  arg1 = (std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > >::key_type arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > >::mapped_type *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > >::mapped_type const & is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_map_Sl_std_string_Sc_std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__Sg__Add(arg1,(std::string const &)*arg2,(std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > > const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_SubscriptionResults_Remove___(void * jarg1, const char * jarg2) {
  unsigned int jresult ;
  std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *arg1 = (std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *) 0 ;
  std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > >::key_type *arg2 = 0 ;
  bool result;
  
  arg1 = (std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > >::key_type arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = (bool)std_map_Sl_std_string_Sc_std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__Sg__Remove(arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_SubscriptionResults_create_iterator_begin___(void * jarg1) {
  void * jresult ;
  std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *arg1 = (std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *) 0 ;
  std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > >,std::less< std::string > >::iterator *result = 0 ;
  
  arg1 = (std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *)jarg1; 
  {
    try {
      result = (std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > >,std::less< std::string > >::iterator *)std_map_Sl_std_string_Sc_std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__Sg__create_iterator_begin(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_SubscriptionResults_get_next_key___(void * jarg1, void * jarg2) {
  const char * jresult ;
  std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *arg1 = (std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *) 0 ;
  std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > >,std::less< std::string > >::iterator *arg2 = (std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > >,std::less< std::string > >::iterator *) 0 ;
  std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > >::key_type *result = 0 ;
  
  arg1 = (std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *)jarg1; 
  arg2 = (std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > >,std::less< std::string > >::iterator *)jarg2; 
  {
    try {
      result = (std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > >::key_type *) &std_map_Sl_std_string_Sc_std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__Sg__get_next_key(arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_SubscriptionResults_destroy_iterator___(void * jarg1, void * jarg2) {
  std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *arg1 = (std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *) 0 ;
  std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > >,std::less< std::string > >::iterator *arg2 = (std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > >,std::less< std::string > >::iterator *) 0 ;
  
  arg1 = (std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *)jarg1; 
  arg2 = (std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > >,std::less< std::string > >::iterator *)jarg2; 
  {
    try {
      std_map_Sl_std_string_Sc_std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__Sg__destroy_iterator(arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_SubscriptionResults___(void * jarg1) {
  std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *arg1 = (std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *) 0 ;
  
  arg1 = (std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_ContextSubscriptionResults__SWIG_0___() {
  void * jresult ;
  std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *result = 0 ;
  
  {
    try {
      result = (std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *)new std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > >();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_new_ContextSubscriptionResults__SWIG_1___(void * jarg1) {
  void * jresult ;
  std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > >,std::less< std::string > > > *arg1 = 0 ;
  std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *result = 0 ;
  
  arg1 = (std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > >,std::less< std::string > > > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > >,std::less< std::string > > > const & is null", 0);
    return 0;
  } 
  {
    try {
      result = (std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *)new std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > >((std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > >,std::less< std::string > > > const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ContextSubscriptionResults_size___(void * jarg1) {
  unsigned int jresult ;
  std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *arg1 = (std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *) 0 ;
  std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > >::size_type result;
  
  arg1 = (std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *)jarg1; 
  {
    try {
      result = ((std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > const *)arg1)->size();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (unsigned int)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ContextSubscriptionResults_empty___(void * jarg1) {
  unsigned int jresult ;
  std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *arg1 = (std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *) 0 ;
  bool result;
  
  arg1 = (std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *)jarg1; 
  {
    try {
      result = (bool)((std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > const *)arg1)->empty();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ContextSubscriptionResults_Clear___(void * jarg1) {
  std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *arg1 = (std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *) 0 ;
  
  arg1 = (std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *)jarg1; 
  {
    try {
      (arg1)->clear();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ContextSubscriptionResults_getitem___(void * jarg1, const char * jarg2) {
  void * jresult ;
  std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *arg1 = (std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *) 0 ;
  std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > >::key_type *arg2 = 0 ;
  std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > >::mapped_type *result = 0 ;
  
  arg1 = (std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > >::key_type arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      try {
        result = (std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > >::mapped_type *) &std_map_Sl_std_string_Sc_std_map_Sl_std_string_Sc_std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__Sg__Sg__getitem(arg1,(std::string const &)*arg2);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ContextSubscriptionResults_setitem___(void * jarg1, const char * jarg2, void * jarg3) {
  std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *arg1 = (std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *) 0 ;
  std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > >::key_type *arg2 = 0 ;
  std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > >::mapped_type *arg3 = 0 ;
  
  arg1 = (std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > >::key_type arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > >::mapped_type *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > >::mapped_type const & is null", 0);
    return ;
  } 
  {
    try {
      std_map_Sl_std_string_Sc_std_map_Sl_std_string_Sc_std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__Sg__Sg__setitem(arg1,(std::string const &)*arg2,(std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > >,std::less< std::string > > const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ContextSubscriptionResults_ContainsKey___(void * jarg1, const char * jarg2) {
  unsigned int jresult ;
  std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *arg1 = (std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *) 0 ;
  std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > >::key_type *arg2 = 0 ;
  bool result;
  
  arg1 = (std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > >::key_type arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = (bool)std_map_Sl_std_string_Sc_std_map_Sl_std_string_Sc_std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__Sg__Sg__ContainsKey(arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ContextSubscriptionResults_Add___(void * jarg1, const char * jarg2, void * jarg3) {
  std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *arg1 = (std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *) 0 ;
  std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > >::key_type *arg2 = 0 ;
  std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > >::mapped_type *arg3 = 0 ;
  
  arg1 = (std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > >::key_type arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > >::mapped_type *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > >::mapped_type const & is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_map_Sl_std_string_Sc_std_map_Sl_std_string_Sc_std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__Sg__Sg__Add(arg1,(std::string const &)*arg2,(std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > >,std::less< std::string > > const &)*arg3);
      } catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ContextSubscriptionResults_Remove___(void * jarg1, const char * jarg2) {
  unsigned int jresult ;
  std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *arg1 = (std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *) 0 ;
  std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > >::key_type *arg2 = 0 ;
  bool result;
  
  arg1 = (std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > >::key_type arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = (bool)std_map_Sl_std_string_Sc_std_map_Sl_std_string_Sc_std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__Sg__Sg__Remove(arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ContextSubscriptionResults_create_iterator_begin___(void * jarg1) {
  void * jresult ;
  std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *arg1 = (std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *) 0 ;
  std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > >,std::less< std::string > >,std::less< std::string > >::iterator *result = 0 ;
  
  arg1 = (std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *)jarg1; 
  {
    try {
      result = (std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > >,std::less< std::string > >,std::less< std::string > >::iterator *)std_map_Sl_std_string_Sc_std_map_Sl_std_string_Sc_std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__Sg__Sg__create_iterator_begin(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ContextSubscriptionResults_get_next_key___(void * jarg1, void * jarg2) {
  const char * jresult ;
  std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *arg1 = (std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *) 0 ;
  std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > >,std::less< std::string > >,std::less< std::string > >::iterator *arg2 = (std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > >,std::less< std::string > >,std::less< std::string > >::iterator *) 0 ;
  std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > >::key_type *result = 0 ;
  
  arg1 = (std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *)jarg1; 
  arg2 = (std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > >,std::less< std::string > >,std::less< std::string > >::iterator *)jarg2; 
  {
    try {
      result = (std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > >::key_type *) &std_map_Sl_std_string_Sc_std_map_Sl_std_string_Sc_std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__Sg__Sg__get_next_key(arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ContextSubscriptionResults_destroy_iterator___(void * jarg1, void * jarg2) {
  std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *arg1 = (std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *) 0 ;
  std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > >,std::less< std::string > >,std::less< std::string > >::iterator *arg2 = (std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > >,std::less< std::string > >,std::less< std::string > >::iterator *) 0 ;
  
  arg1 = (std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *)jarg1; 
  arg2 = (std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > >,std::less< std::string > >,std::less< std::string > >::iterator *)jarg2; 
  {
    try {
      std_map_Sl_std_string_Sc_std_map_Sl_std_string_Sc_std_map_Sl_int_Sc_std_shared_ptr_Sl_libsumo_TraCIResult_Sg__Sg__Sg__Sg__destroy_iterator(arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_ContextSubscriptionResults___(void * jarg1) {
  std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *arg1 = (std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *) 0 ;
  
  arg1 = (std::map< std::string,std::map< std::string,std::map< int,std::shared_ptr< libsumo::TraCIResult > > > > *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_getAdaptedTraveltime___(const char * jarg1, double jarg2) {
  double jresult ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      result = (double)libsumo::Edge::getAdaptedTraveltime((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_getEffort___(const char * jarg1, double jarg2) {
  double jresult ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      result = (double)libsumo::Edge::getEffort((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_getTraveltime___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Edge::getTraveltime((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_getWaitingTime___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Edge::getWaitingTime((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_getLastStepPersonIDs___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Edge::getLastStepPersonIDs((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_getLastStepVehicleIDs___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Edge::getLastStepVehicleIDs((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_getCO2Emission___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Edge::getCO2Emission((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_getCOEmission___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Edge::getCOEmission((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_getHCEmission___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Edge::getHCEmission((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_getPMxEmission___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Edge::getPMxEmission((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_getNOxEmission___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Edge::getNOxEmission((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_getFuelConsumption___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Edge::getFuelConsumption((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_getNoiseEmission___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Edge::getNoiseEmission((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_getElectricityConsumption___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Edge::getElectricityConsumption((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_getLastStepVehicleNumber___(const char * jarg1) {
  int jresult ;
  std::string *arg1 = 0 ;
  int result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (int)libsumo::Edge::getLastStepVehicleNumber((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_getLastStepMeanSpeed___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Edge::getLastStepMeanSpeed((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_getMeanFriction___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Edge::getMeanFriction((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_getLastStepOccupancy___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Edge::getLastStepOccupancy((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_getLastStepHaltingNumber___(const char * jarg1) {
  int jresult ;
  std::string *arg1 = 0 ;
  int result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (int)libsumo::Edge::getLastStepHaltingNumber((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_getLastStepLength___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Edge::getLastStepLength((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_getLaneNumber___(const char * jarg1) {
  int jresult ;
  std::string *arg1 = 0 ;
  int result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (int)libsumo::Edge::getLaneNumber((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_getStreetName___(const char * jarg1) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Edge::getStreetName((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_getPendingVehicles___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Edge::getPendingVehicles((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_getAngle__SWIG_0___(const char * jarg1, double jarg2) {
  double jresult ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      result = (double)libsumo::Edge::getAngle((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_getAngle__SWIG_1___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Edge::getAngle((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_getFromJunction___(const char * jarg1) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Edge::getFromJunction((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_getToJunction___(const char * jarg1) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Edge::getToJunction((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_getBidiEdge___(const char * jarg1) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Edge::getBidiEdge((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_getIDList___() {
  void * jresult ;
  std::vector< std::string > result;
  
  {
    try {
      result = libsumo::Edge::getIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_getIDCount___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::Edge::getIDCount();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_getParameter___(const char * jarg1, const char * jarg2) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = libsumo::Edge::getParameter((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_getParameterWithKey___(const char * jarg1, const char * jarg2) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::pair< std::string,std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = libsumo::Edge::getParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::pair< std::string,std::string >(result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_setParameter___(const char * jarg1, const char * jarg2, const char * jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  {
    try {
      libsumo::Edge::setParameter((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_subscribe__SWIG_0___(const char * jarg1, void * jarg2, double jarg3, double jarg4, void * jarg5) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  libsumo::TraCIResults *arg5 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (libsumo::TraCIResults *)jarg5;
  if (!arg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIResults const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Edge::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4,(std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > > const &)*arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_subscribe__SWIG_1___(const char * jarg1, void * jarg2, double jarg3, double jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Edge::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_subscribe__SWIG_2___(const char * jarg1, void * jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Edge::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_subscribe__SWIG_3___(const char * jarg1, void * jarg2) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Edge::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_subscribe__SWIG_4___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::Edge::subscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_unsubscribe___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::Edge::unsubscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_subscribeContext__SWIG_0___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5, double jarg6, void * jarg7) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  libsumo::TraCIResults *arg7 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (libsumo::TraCIResults *)jarg7;
  if (!arg7) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIResults const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Edge::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6,(std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > > const &)*arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_subscribeContext__SWIG_1___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5, double jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::Edge::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_subscribeContext__SWIG_2___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::Edge::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_subscribeContext__SWIG_3___(const char * jarg1, int jarg2, double jarg3, void * jarg4) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Edge::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_subscribeContext__SWIG_4___(const char * jarg1, int jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Edge::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_unsubscribeContext___(const char * jarg1, int jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Edge::unsubscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_getAllSubscriptionResults___() {
  void * jresult ;
  libsumo::SubscriptionResults result;
  
  {
    try {
      result = libsumo::Edge::getAllSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::SubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_getSubscriptionResults___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::TraCIResults result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Edge::getSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::TraCIResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_getAllContextSubscriptionResults___() {
  void * jresult ;
  libsumo::ContextSubscriptionResults result;
  
  {
    try {
      result = libsumo::Edge::getAllContextSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::ContextSubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_getContextSubscriptionResults___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::SubscriptionResults result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Edge::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::SubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_subscribeParameterWithKey__SWIG_0___(const char * jarg1, const char * jarg2, double jarg3, double jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Edge::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_subscribeParameterWithKey__SWIG_1___(const char * jarg1, const char * jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Edge::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_subscribeParameterWithKey__SWIG_2___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::Edge::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_DOMAIN_ID_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::Edge::DOMAIN_ID;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_domainID___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::Edge::domainID();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_setAllowed__SWIG_0___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  (&arg2)->assign(jarg2); 
  {
    try {
      libsumo::Edge::setAllowed((std::string const &)*arg1,SWIG_STD_MOVE(arg2));
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_setAllowed__SWIG_1___(const char * jarg1, void * jarg2) {
  std::string *arg1 = 0 ;
  std::vector< std::string > arg2 ;
  std::vector< std::string > *argp2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  argp2 = (std::vector< std::string > *)jarg2; 
  if (!argp2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null std::vector< std::string >", 0);
    return ;
  }
  arg2 = *argp2; 
  {
    try {
      libsumo::Edge::setAllowed((std::string const &)*arg1,SWIG_STD_MOVE(arg2));
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_setDisallowed__SWIG_0___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  (&arg2)->assign(jarg2); 
  {
    try {
      libsumo::Edge::setDisallowed((std::string const &)*arg1,SWIG_STD_MOVE(arg2));
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_setDisallowed__SWIG_1___(const char * jarg1, void * jarg2) {
  std::string *arg1 = 0 ;
  std::vector< std::string > arg2 ;
  std::vector< std::string > *argp2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  argp2 = (std::vector< std::string > *)jarg2; 
  if (!argp2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null std::vector< std::string >", 0);
    return ;
  }
  arg2 = *argp2; 
  {
    try {
      libsumo::Edge::setDisallowed((std::string const &)*arg1,SWIG_STD_MOVE(arg2));
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_adaptTraveltime__SWIG_0___(const char * jarg1, double jarg2, double jarg3, double jarg4) {
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Edge::adaptTraveltime((std::string const &)*arg1,arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_adaptTraveltime__SWIG_1___(const char * jarg1, double jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Edge::adaptTraveltime((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_adaptTraveltime__SWIG_2___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Edge::adaptTraveltime((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_setEffort__SWIG_0___(const char * jarg1, double jarg2, double jarg3, double jarg4) {
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Edge::setEffort((std::string const &)*arg1,arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_setEffort__SWIG_1___(const char * jarg1, double jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Edge::setEffort((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_setEffort__SWIG_2___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Edge::setEffort((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_setMaxSpeed___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Edge::setMaxSpeed((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Edge_setFriction___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Edge::setFriction((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_Edge___(void * jarg1) {
  libsumo::Edge *arg1 = (libsumo::Edge *) 0 ;
  
  arg1 = (libsumo::Edge *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_DEFAULT_VIEW_get___() {
  char * jresult ;
  char *result = 0 ;
  
  result = (char *)("View #0");
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_GUI_getZoom__SWIG_0___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::GUI::getZoom((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_GUI_getZoom__SWIG_1___() {
  double jresult ;
  double result;
  
  {
    try {
      result = (double)libsumo::GUI::getZoom();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_GUI_getAngle__SWIG_0___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::GUI::getAngle((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_GUI_getAngle__SWIG_1___() {
  double jresult ;
  double result;
  
  {
    try {
      result = (double)libsumo::GUI::getAngle();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_GUI_getOffset__SWIG_0___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::TraCIPosition result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::GUI::getOffset((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr<  libsumo::TraCIPosition >(new libsumo::TraCIPosition(result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_GUI_getOffset__SWIG_1___() {
  void * jresult ;
  libsumo::TraCIPosition result;
  
  {
    try {
      result = libsumo::GUI::getOffset();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr<  libsumo::TraCIPosition >(new libsumo::TraCIPosition(result)); 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_GUI_getSchema__SWIG_0___(const char * jarg1) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::GUI::getSchema((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_GUI_getSchema__SWIG_1___() {
  const char * jresult ;
  std::string result;
  
  {
    try {
      result = libsumo::GUI::getSchema();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_GUI_getBoundary__SWIG_0___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::TraCIPositionVector result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::GUI::getBoundary((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr<  libsumo::TraCIPositionVector >(new libsumo::TraCIPositionVector(result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_GUI_getBoundary__SWIG_1___() {
  void * jresult ;
  libsumo::TraCIPositionVector result;
  
  {
    try {
      result = libsumo::GUI::getBoundary();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr<  libsumo::TraCIPositionVector >(new libsumo::TraCIPositionVector(result)); 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_GUI_hasView__SWIG_0___(const char * jarg1) {
  unsigned int jresult ;
  std::string *arg1 = 0 ;
  bool result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (bool)libsumo::GUI::hasView((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_GUI_hasView__SWIG_1___() {
  unsigned int jresult ;
  bool result;
  
  {
    try {
      result = (bool)libsumo::GUI::hasView();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_GUI_getTrackedVehicle__SWIG_0___(const char * jarg1) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::GUI::getTrackedVehicle((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_GUI_getTrackedVehicle__SWIG_1___() {
  const char * jresult ;
  std::string result;
  
  {
    try {
      result = libsumo::GUI::getTrackedVehicle();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_GUI_isSelected__SWIG_0___(const char * jarg1, const char * jarg2) {
  unsigned int jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  bool result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = (bool)libsumo::GUI::isSelected((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_GUI_isSelected__SWIG_1___(const char * jarg1) {
  unsigned int jresult ;
  std::string *arg1 = 0 ;
  bool result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (bool)libsumo::GUI::isSelected((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_GUI_setZoom___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::GUI::setZoom((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_GUI_setAngle___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::GUI::setAngle((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_GUI_setOffset___(const char * jarg1, double jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::GUI::setOffset((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_GUI_setSchema___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::GUI::setSchema((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_GUI_setBoundary___(const char * jarg1, double jarg2, double jarg3, double jarg4, double jarg5) {
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::GUI::setBoundary((std::string const &)*arg1,arg2,arg3,arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_GUI_trackVehicle___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::GUI::trackVehicle((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_GUI_screenshot__SWIG_0___(const char * jarg1, const char * jarg2, int jarg3, int jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  {
    try {
      libsumo::GUI::screenshot((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_GUI_screenshot__SWIG_1___(const char * jarg1, const char * jarg2, int jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  int arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (int)jarg3; 
  {
    try {
      libsumo::GUI::screenshot((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_GUI_screenshot__SWIG_2___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::GUI::screenshot((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_GUI_track__SWIG_0___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::GUI::track((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_GUI_track__SWIG_1___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::GUI::track((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_GUI_toggleSelection__SWIG_0___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::GUI::toggleSelection((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_GUI_toggleSelection__SWIG_1___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::GUI::toggleSelection((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_GUI_addView__SWIG_0___(const char * jarg1, const char * jarg2, unsigned int jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  bool arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = jarg3 ? true : false; 
  {
    try {
      libsumo::GUI::addView((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_GUI_addView__SWIG_1___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::GUI::addView((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_GUI_addView__SWIG_2___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::GUI::addView((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_GUI_removeView___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::GUI::removeView((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_GUI_getIDList___() {
  void * jresult ;
  std::vector< std::string > result;
  
  {
    try {
      result = libsumo::GUI::getIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_GUI_getIDCount___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::GUI::getIDCount();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_GUI_getParameter___(const char * jarg1, const char * jarg2) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = libsumo::GUI::getParameter((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_GUI_getParameterWithKey___(const char * jarg1, const char * jarg2) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::pair< std::string,std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = libsumo::GUI::getParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::pair< std::string,std::string >(result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_GUI_setParameter___(const char * jarg1, const char * jarg2, const char * jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  {
    try {
      libsumo::GUI::setParameter((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_GUI_subscribe__SWIG_0___(const char * jarg1, void * jarg2, double jarg3, double jarg4, void * jarg5) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  libsumo::TraCIResults *arg5 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (libsumo::TraCIResults *)jarg5;
  if (!arg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIResults const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::GUI::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4,(std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > > const &)*arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_GUI_subscribe__SWIG_1___(const char * jarg1, void * jarg2, double jarg3, double jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::GUI::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_GUI_subscribe__SWIG_2___(const char * jarg1, void * jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::GUI::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_GUI_subscribe__SWIG_3___(const char * jarg1, void * jarg2) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::GUI::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_GUI_subscribe__SWIG_4___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::GUI::subscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_GUI_unsubscribe___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::GUI::unsubscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_GUI_subscribeContext__SWIG_0___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5, double jarg6, void * jarg7) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  libsumo::TraCIResults *arg7 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (libsumo::TraCIResults *)jarg7;
  if (!arg7) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIResults const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::GUI::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6,(std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > > const &)*arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_GUI_subscribeContext__SWIG_1___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5, double jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::GUI::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_GUI_subscribeContext__SWIG_2___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::GUI::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_GUI_subscribeContext__SWIG_3___(const char * jarg1, int jarg2, double jarg3, void * jarg4) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::GUI::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_GUI_subscribeContext__SWIG_4___(const char * jarg1, int jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::GUI::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_GUI_unsubscribeContext___(const char * jarg1, int jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::GUI::unsubscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_GUI_getAllSubscriptionResults___() {
  void * jresult ;
  libsumo::SubscriptionResults result;
  
  {
    try {
      result = libsumo::GUI::getAllSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::SubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_GUI_getSubscriptionResults___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::TraCIResults result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::GUI::getSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::TraCIResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_GUI_getAllContextSubscriptionResults___() {
  void * jresult ;
  libsumo::ContextSubscriptionResults result;
  
  {
    try {
      result = libsumo::GUI::getAllContextSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::ContextSubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_GUI_getContextSubscriptionResults___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::SubscriptionResults result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::GUI::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::SubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_GUI_subscribeParameterWithKey__SWIG_0___(const char * jarg1, const char * jarg2, double jarg3, double jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::GUI::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_GUI_subscribeParameterWithKey__SWIG_1___(const char * jarg1, const char * jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::GUI::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_GUI_subscribeParameterWithKey__SWIG_2___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::GUI::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_GUI_DOMAIN_ID_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::GUI::DOMAIN_ID;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_GUI_domainID___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::GUI::domainID();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_GUI___(void * jarg1) {
  libsumo::GUI *arg1 = (libsumo::GUI *) 0 ;
  
  arg1 = (libsumo::GUI *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_InductionLoop_getPosition___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::InductionLoop::getPosition((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_InductionLoop_getLaneID___(const char * jarg1) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::InductionLoop::getLaneID((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_InductionLoop_getLastStepVehicleNumber___(const char * jarg1) {
  int jresult ;
  std::string *arg1 = 0 ;
  int result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (int)libsumo::InductionLoop::getLastStepVehicleNumber((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_InductionLoop_getLastStepMeanSpeed___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::InductionLoop::getLastStepMeanSpeed((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_InductionLoop_getLastStepVehicleIDs___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::InductionLoop::getLastStepVehicleIDs((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_InductionLoop_getLastStepOccupancy___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::InductionLoop::getLastStepOccupancy((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_InductionLoop_getLastStepMeanLength___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::InductionLoop::getLastStepMeanLength((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_InductionLoop_getTimeSinceDetection___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::InductionLoop::getTimeSinceDetection((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_InductionLoop_getVehicleData___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::vector< libsumo::TraCIVehicleData > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::InductionLoop::getVehicleData((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< libsumo::TraCIVehicleData >(result); 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_InductionLoop_getIntervalOccupancy___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::InductionLoop::getIntervalOccupancy((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_InductionLoop_getIntervalMeanSpeed___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::InductionLoop::getIntervalMeanSpeed((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_InductionLoop_getIntervalVehicleNumber___(const char * jarg1) {
  int jresult ;
  std::string *arg1 = 0 ;
  int result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (int)libsumo::InductionLoop::getIntervalVehicleNumber((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_InductionLoop_getIntervalVehicleIDs___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::InductionLoop::getIntervalVehicleIDs((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_InductionLoop_getLastIntervalOccupancy___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::InductionLoop::getLastIntervalOccupancy((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_InductionLoop_getLastIntervalMeanSpeed___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::InductionLoop::getLastIntervalMeanSpeed((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_InductionLoop_getLastIntervalVehicleNumber___(const char * jarg1) {
  int jresult ;
  std::string *arg1 = 0 ;
  int result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (int)libsumo::InductionLoop::getLastIntervalVehicleNumber((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_InductionLoop_getLastIntervalVehicleIDs___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::InductionLoop::getLastIntervalVehicleIDs((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_InductionLoop_overrideTimeSinceDetection___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::InductionLoop::overrideTimeSinceDetection((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_InductionLoop_getIDList___() {
  void * jresult ;
  std::vector< std::string > result;
  
  {
    try {
      result = libsumo::InductionLoop::getIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_InductionLoop_getIDCount___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::InductionLoop::getIDCount();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_InductionLoop_getParameter___(const char * jarg1, const char * jarg2) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = libsumo::InductionLoop::getParameter((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_InductionLoop_getParameterWithKey___(const char * jarg1, const char * jarg2) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::pair< std::string,std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = libsumo::InductionLoop::getParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::pair< std::string,std::string >(result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_InductionLoop_setParameter___(const char * jarg1, const char * jarg2, const char * jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  {
    try {
      libsumo::InductionLoop::setParameter((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_InductionLoop_subscribe__SWIG_0___(const char * jarg1, void * jarg2, double jarg3, double jarg4, void * jarg5) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  libsumo::TraCIResults *arg5 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (libsumo::TraCIResults *)jarg5;
  if (!arg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIResults const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::InductionLoop::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4,(std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > > const &)*arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_InductionLoop_subscribe__SWIG_1___(const char * jarg1, void * jarg2, double jarg3, double jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::InductionLoop::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_InductionLoop_subscribe__SWIG_2___(const char * jarg1, void * jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::InductionLoop::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_InductionLoop_subscribe__SWIG_3___(const char * jarg1, void * jarg2) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::InductionLoop::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_InductionLoop_subscribe__SWIG_4___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::InductionLoop::subscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_InductionLoop_unsubscribe___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::InductionLoop::unsubscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_InductionLoop_subscribeContext__SWIG_0___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5, double jarg6, void * jarg7) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  libsumo::TraCIResults *arg7 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (libsumo::TraCIResults *)jarg7;
  if (!arg7) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIResults const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::InductionLoop::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6,(std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > > const &)*arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_InductionLoop_subscribeContext__SWIG_1___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5, double jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::InductionLoop::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_InductionLoop_subscribeContext__SWIG_2___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::InductionLoop::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_InductionLoop_subscribeContext__SWIG_3___(const char * jarg1, int jarg2, double jarg3, void * jarg4) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::InductionLoop::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_InductionLoop_subscribeContext__SWIG_4___(const char * jarg1, int jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::InductionLoop::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_InductionLoop_unsubscribeContext___(const char * jarg1, int jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::InductionLoop::unsubscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_InductionLoop_getAllSubscriptionResults___() {
  void * jresult ;
  libsumo::SubscriptionResults result;
  
  {
    try {
      result = libsumo::InductionLoop::getAllSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::SubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_InductionLoop_getSubscriptionResults___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::TraCIResults result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::InductionLoop::getSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::TraCIResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_InductionLoop_getAllContextSubscriptionResults___() {
  void * jresult ;
  libsumo::ContextSubscriptionResults result;
  
  {
    try {
      result = libsumo::InductionLoop::getAllContextSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::ContextSubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_InductionLoop_getContextSubscriptionResults___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::SubscriptionResults result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::InductionLoop::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::SubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_InductionLoop_subscribeParameterWithKey__SWIG_0___(const char * jarg1, const char * jarg2, double jarg3, double jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::InductionLoop::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_InductionLoop_subscribeParameterWithKey__SWIG_1___(const char * jarg1, const char * jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::InductionLoop::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_InductionLoop_subscribeParameterWithKey__SWIG_2___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::InductionLoop::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_InductionLoop_DOMAIN_ID_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::InductionLoop::DOMAIN_ID;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_InductionLoop_domainID___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::InductionLoop::domainID();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_InductionLoop___(void * jarg1) {
  libsumo::InductionLoop *arg1 = (libsumo::InductionLoop *) 0 ;
  
  arg1 = (libsumo::InductionLoop *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Junction_getPosition__SWIG_0___(const char * jarg1, unsigned int jarg2) {
  void * jresult ;
  std::string *arg1 = 0 ;
  bool arg2 ;
  libsumo::TraCIPosition result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = jarg2 ? true : false; 
  {
    try {
      result = libsumo::Junction::getPosition((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr<  libsumo::TraCIPosition >(new libsumo::TraCIPosition(result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Junction_getPosition__SWIG_1___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::TraCIPosition result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Junction::getPosition((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr<  libsumo::TraCIPosition >(new libsumo::TraCIPosition(result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Junction_getShape___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::TraCIPositionVector result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Junction::getShape((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr<  libsumo::TraCIPositionVector >(new libsumo::TraCIPositionVector(result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Junction_getIncomingEdges___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Junction::getIncomingEdges((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Junction_getOutgoingEdges___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Junction::getOutgoingEdges((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Junction_getIDList___() {
  void * jresult ;
  std::vector< std::string > result;
  
  {
    try {
      result = libsumo::Junction::getIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Junction_getIDCount___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::Junction::getIDCount();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Junction_getParameter___(const char * jarg1, const char * jarg2) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = libsumo::Junction::getParameter((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Junction_getParameterWithKey___(const char * jarg1, const char * jarg2) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::pair< std::string,std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = libsumo::Junction::getParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::pair< std::string,std::string >(result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Junction_setParameter___(const char * jarg1, const char * jarg2, const char * jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  {
    try {
      libsumo::Junction::setParameter((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Junction_subscribe__SWIG_0___(const char * jarg1, void * jarg2, double jarg3, double jarg4, void * jarg5) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  libsumo::TraCIResults *arg5 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (libsumo::TraCIResults *)jarg5;
  if (!arg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIResults const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Junction::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4,(std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > > const &)*arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Junction_subscribe__SWIG_1___(const char * jarg1, void * jarg2, double jarg3, double jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Junction::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Junction_subscribe__SWIG_2___(const char * jarg1, void * jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Junction::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Junction_subscribe__SWIG_3___(const char * jarg1, void * jarg2) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Junction::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Junction_subscribe__SWIG_4___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::Junction::subscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Junction_unsubscribe___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::Junction::unsubscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Junction_subscribeContext__SWIG_0___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5, double jarg6, void * jarg7) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  libsumo::TraCIResults *arg7 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (libsumo::TraCIResults *)jarg7;
  if (!arg7) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIResults const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Junction::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6,(std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > > const &)*arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Junction_subscribeContext__SWIG_1___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5, double jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::Junction::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Junction_subscribeContext__SWIG_2___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::Junction::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Junction_subscribeContext__SWIG_3___(const char * jarg1, int jarg2, double jarg3, void * jarg4) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Junction::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Junction_subscribeContext__SWIG_4___(const char * jarg1, int jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Junction::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Junction_unsubscribeContext___(const char * jarg1, int jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Junction::unsubscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Junction_getAllSubscriptionResults___() {
  void * jresult ;
  libsumo::SubscriptionResults result;
  
  {
    try {
      result = libsumo::Junction::getAllSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::SubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Junction_getSubscriptionResults___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::TraCIResults result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Junction::getSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::TraCIResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Junction_getAllContextSubscriptionResults___() {
  void * jresult ;
  libsumo::ContextSubscriptionResults result;
  
  {
    try {
      result = libsumo::Junction::getAllContextSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::ContextSubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Junction_getContextSubscriptionResults___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::SubscriptionResults result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Junction::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::SubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Junction_subscribeParameterWithKey__SWIG_0___(const char * jarg1, const char * jarg2, double jarg3, double jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Junction::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Junction_subscribeParameterWithKey__SWIG_1___(const char * jarg1, const char * jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Junction::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Junction_subscribeParameterWithKey__SWIG_2___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::Junction::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Junction_DOMAIN_ID_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::Junction::DOMAIN_ID;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Junction_domainID___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::Junction::domainID();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_Junction___(void * jarg1) {
  libsumo::Junction *arg1 = (libsumo::Junction *) 0 ;
  
  arg1 = (libsumo::Junction *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LaneArea_getJamLengthVehicle___(const char * jarg1) {
  int jresult ;
  std::string *arg1 = 0 ;
  int result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (int)libsumo::LaneArea::getJamLengthVehicle((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LaneArea_getJamLengthMeters___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::LaneArea::getJamLengthMeters((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LaneArea_getLastStepMeanSpeed___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::LaneArea::getLastStepMeanSpeed((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LaneArea_getLastStepVehicleIDs___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::LaneArea::getLastStepVehicleIDs((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LaneArea_getLastStepOccupancy___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::LaneArea::getLastStepOccupancy((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LaneArea_getPosition___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::LaneArea::getPosition((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LaneArea_getLaneID___(const char * jarg1) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::LaneArea::getLaneID((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LaneArea_getLength___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::LaneArea::getLength((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LaneArea_getLastStepVehicleNumber___(const char * jarg1) {
  int jresult ;
  std::string *arg1 = 0 ;
  int result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (int)libsumo::LaneArea::getLastStepVehicleNumber((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LaneArea_getLastStepHaltingNumber___(const char * jarg1) {
  int jresult ;
  std::string *arg1 = 0 ;
  int result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (int)libsumo::LaneArea::getLastStepHaltingNumber((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LaneArea_getIntervalOccupancy___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::LaneArea::getIntervalOccupancy((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LaneArea_getIntervalMeanSpeed___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::LaneArea::getIntervalMeanSpeed((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LaneArea_getIntervalMeanTimeLoss___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::LaneArea::getIntervalMeanTimeLoss((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LaneArea_getIntervalMaxJamLengthInMeters___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::LaneArea::getIntervalMaxJamLengthInMeters((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LaneArea_getIntervalVehicleNumber___(const char * jarg1) {
  int jresult ;
  std::string *arg1 = 0 ;
  int result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (int)libsumo::LaneArea::getIntervalVehicleNumber((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LaneArea_getLastIntervalOccupancy___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::LaneArea::getLastIntervalOccupancy((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LaneArea_getLastIntervalMeanSpeed___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::LaneArea::getLastIntervalMeanSpeed((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LaneArea_getLastIntervalMeanTimeLoss___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::LaneArea::getLastIntervalMeanTimeLoss((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LaneArea_getLastIntervalMaxJamLengthInMeters___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::LaneArea::getLastIntervalMaxJamLengthInMeters((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LaneArea_getLastIntervalVehicleNumber___(const char * jarg1) {
  int jresult ;
  std::string *arg1 = 0 ;
  int result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (int)libsumo::LaneArea::getLastIntervalVehicleNumber((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LaneArea_overrideVehicleNumber___(const char * jarg1, int jarg2) {
  std::string *arg1 = 0 ;
  int arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  {
    try {
      libsumo::LaneArea::overrideVehicleNumber((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LaneArea_getIDList___() {
  void * jresult ;
  std::vector< std::string > result;
  
  {
    try {
      result = libsumo::LaneArea::getIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LaneArea_getIDCount___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::LaneArea::getIDCount();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LaneArea_getParameter___(const char * jarg1, const char * jarg2) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = libsumo::LaneArea::getParameter((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LaneArea_getParameterWithKey___(const char * jarg1, const char * jarg2) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::pair< std::string,std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = libsumo::LaneArea::getParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::pair< std::string,std::string >(result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LaneArea_setParameter___(const char * jarg1, const char * jarg2, const char * jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  {
    try {
      libsumo::LaneArea::setParameter((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LaneArea_subscribe__SWIG_0___(const char * jarg1, void * jarg2, double jarg3, double jarg4, void * jarg5) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  libsumo::TraCIResults *arg5 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (libsumo::TraCIResults *)jarg5;
  if (!arg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIResults const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::LaneArea::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4,(std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > > const &)*arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LaneArea_subscribe__SWIG_1___(const char * jarg1, void * jarg2, double jarg3, double jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::LaneArea::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LaneArea_subscribe__SWIG_2___(const char * jarg1, void * jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::LaneArea::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LaneArea_subscribe__SWIG_3___(const char * jarg1, void * jarg2) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::LaneArea::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LaneArea_subscribe__SWIG_4___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::LaneArea::subscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LaneArea_unsubscribe___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::LaneArea::unsubscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LaneArea_subscribeContext__SWIG_0___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5, double jarg6, void * jarg7) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  libsumo::TraCIResults *arg7 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (libsumo::TraCIResults *)jarg7;
  if (!arg7) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIResults const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::LaneArea::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6,(std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > > const &)*arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LaneArea_subscribeContext__SWIG_1___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5, double jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::LaneArea::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LaneArea_subscribeContext__SWIG_2___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::LaneArea::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LaneArea_subscribeContext__SWIG_3___(const char * jarg1, int jarg2, double jarg3, void * jarg4) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::LaneArea::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LaneArea_subscribeContext__SWIG_4___(const char * jarg1, int jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::LaneArea::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LaneArea_unsubscribeContext___(const char * jarg1, int jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::LaneArea::unsubscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LaneArea_getAllSubscriptionResults___() {
  void * jresult ;
  libsumo::SubscriptionResults result;
  
  {
    try {
      result = libsumo::LaneArea::getAllSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::SubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LaneArea_getSubscriptionResults___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::TraCIResults result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::LaneArea::getSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::TraCIResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LaneArea_getAllContextSubscriptionResults___() {
  void * jresult ;
  libsumo::ContextSubscriptionResults result;
  
  {
    try {
      result = libsumo::LaneArea::getAllContextSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::ContextSubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LaneArea_getContextSubscriptionResults___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::SubscriptionResults result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::LaneArea::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::SubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LaneArea_subscribeParameterWithKey__SWIG_0___(const char * jarg1, const char * jarg2, double jarg3, double jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::LaneArea::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LaneArea_subscribeParameterWithKey__SWIG_1___(const char * jarg1, const char * jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::LaneArea::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LaneArea_subscribeParameterWithKey__SWIG_2___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::LaneArea::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LaneArea_DOMAIN_ID_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::LaneArea::DOMAIN_ID;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LaneArea_domainID___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::LaneArea::domainID();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_LaneArea___(void * jarg1) {
  libsumo::LaneArea *arg1 = (libsumo::LaneArea *) 0 ;
  
  arg1 = (libsumo::LaneArea *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_getLinkNumber___(const char * jarg1) {
  int jresult ;
  std::string *arg1 = 0 ;
  int result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (int)libsumo::Lane::getLinkNumber((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_getEdgeID___(const char * jarg1) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Lane::getEdgeID((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_getLength___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Lane::getLength((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_getMaxSpeed___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Lane::getMaxSpeed((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_getFriction___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Lane::getFriction((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_getAllowed___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Lane::getAllowed((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_getDisallowed___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Lane::getDisallowed((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_getChangePermissions___(const char * jarg1, int jarg2) {
  void * jresult ;
  std::string *arg1 = 0 ;
  int arg2 ;
  std::vector< std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  {
    try {
      result = libsumo::Lane::getChangePermissions((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_getLinks___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::vector< libsumo::TraCIConnection > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Lane::getLinks((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< libsumo::TraCIConnection >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_getShape___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::TraCIPositionVector result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Lane::getShape((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr<  libsumo::TraCIPositionVector >(new libsumo::TraCIPositionVector(result)); 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_getWidth___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Lane::getWidth((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_getCO2Emission___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Lane::getCO2Emission((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_getCOEmission___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Lane::getCOEmission((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_getHCEmission___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Lane::getHCEmission((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_getPMxEmission___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Lane::getPMxEmission((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_getNOxEmission___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Lane::getNOxEmission((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_getFuelConsumption___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Lane::getFuelConsumption((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_getNoiseEmission___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Lane::getNoiseEmission((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_getElectricityConsumption___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Lane::getElectricityConsumption((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_getLastStepMeanSpeed___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Lane::getLastStepMeanSpeed((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_getLastStepOccupancy___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Lane::getLastStepOccupancy((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_getLastStepLength___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Lane::getLastStepLength((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_getWaitingTime___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Lane::getWaitingTime((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_getTraveltime___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Lane::getTraveltime((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_getLastStepVehicleNumber___(const char * jarg1) {
  int jresult ;
  std::string *arg1 = 0 ;
  int result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (int)libsumo::Lane::getLastStepVehicleNumber((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_getLastStepHaltingNumber___(const char * jarg1) {
  int jresult ;
  std::string *arg1 = 0 ;
  int result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (int)libsumo::Lane::getLastStepHaltingNumber((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_getLastStepVehicleIDs___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Lane::getLastStepVehicleIDs((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_getFoes___(const char * jarg1, const char * jarg2) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::vector< std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = libsumo::Lane::getFoes((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_getInternalFoes___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Lane::getInternalFoes((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_getPendingVehicles___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Lane::getPendingVehicles((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_getAngle__SWIG_0___(const char * jarg1, double jarg2) {
  double jresult ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      result = (double)libsumo::Lane::getAngle((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_getAngle__SWIG_1___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Lane::getAngle((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_getBidiLane___(const char * jarg1) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Lane::getBidiLane((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_getIDList___() {
  void * jresult ;
  std::vector< std::string > result;
  
  {
    try {
      result = libsumo::Lane::getIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_getIDCount___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::Lane::getIDCount();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_getParameter___(const char * jarg1, const char * jarg2) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = libsumo::Lane::getParameter((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_getParameterWithKey___(const char * jarg1, const char * jarg2) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::pair< std::string,std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = libsumo::Lane::getParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::pair< std::string,std::string >(result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_setParameter___(const char * jarg1, const char * jarg2, const char * jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  {
    try {
      libsumo::Lane::setParameter((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_subscribe__SWIG_0___(const char * jarg1, void * jarg2, double jarg3, double jarg4, void * jarg5) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  libsumo::TraCIResults *arg5 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (libsumo::TraCIResults *)jarg5;
  if (!arg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIResults const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Lane::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4,(std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > > const &)*arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_subscribe__SWIG_1___(const char * jarg1, void * jarg2, double jarg3, double jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Lane::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_subscribe__SWIG_2___(const char * jarg1, void * jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Lane::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_subscribe__SWIG_3___(const char * jarg1, void * jarg2) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Lane::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_subscribe__SWIG_4___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::Lane::subscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_unsubscribe___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::Lane::unsubscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_subscribeContext__SWIG_0___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5, double jarg6, void * jarg7) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  libsumo::TraCIResults *arg7 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (libsumo::TraCIResults *)jarg7;
  if (!arg7) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIResults const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Lane::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6,(std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > > const &)*arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_subscribeContext__SWIG_1___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5, double jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::Lane::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_subscribeContext__SWIG_2___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::Lane::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_subscribeContext__SWIG_3___(const char * jarg1, int jarg2, double jarg3, void * jarg4) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Lane::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_subscribeContext__SWIG_4___(const char * jarg1, int jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Lane::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_unsubscribeContext___(const char * jarg1, int jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Lane::unsubscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_getAllSubscriptionResults___() {
  void * jresult ;
  libsumo::SubscriptionResults result;
  
  {
    try {
      result = libsumo::Lane::getAllSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::SubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_getSubscriptionResults___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::TraCIResults result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Lane::getSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::TraCIResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_getAllContextSubscriptionResults___() {
  void * jresult ;
  libsumo::ContextSubscriptionResults result;
  
  {
    try {
      result = libsumo::Lane::getAllContextSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::ContextSubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_getContextSubscriptionResults___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::SubscriptionResults result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Lane::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::SubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_subscribeParameterWithKey__SWIG_0___(const char * jarg1, const char * jarg2, double jarg3, double jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Lane::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_subscribeParameterWithKey__SWIG_1___(const char * jarg1, const char * jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Lane::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_subscribeParameterWithKey__SWIG_2___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::Lane::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_DOMAIN_ID_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::Lane::DOMAIN_ID;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_domainID___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::Lane::domainID();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_setAllowed__SWIG_0___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  (&arg2)->assign(jarg2); 
  {
    try {
      libsumo::Lane::setAllowed((std::string const &)*arg1,SWIG_STD_MOVE(arg2));
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_setAllowed__SWIG_1___(const char * jarg1, void * jarg2) {
  std::string *arg1 = 0 ;
  std::vector< std::string > arg2 ;
  std::vector< std::string > *argp2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  argp2 = (std::vector< std::string > *)jarg2; 
  if (!argp2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null std::vector< std::string >", 0);
    return ;
  }
  arg2 = *argp2; 
  {
    try {
      libsumo::Lane::setAllowed((std::string const &)*arg1,SWIG_STD_MOVE(arg2));
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_setDisallowed__SWIG_0___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  (&arg2)->assign(jarg2); 
  {
    try {
      libsumo::Lane::setDisallowed((std::string const &)*arg1,SWIG_STD_MOVE(arg2));
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_setDisallowed__SWIG_1___(const char * jarg1, void * jarg2) {
  std::string *arg1 = 0 ;
  std::vector< std::string > arg2 ;
  std::vector< std::string > *argp2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  argp2 = (std::vector< std::string > *)jarg2; 
  if (!argp2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null std::vector< std::string >", 0);
    return ;
  }
  arg2 = *argp2; 
  {
    try {
      libsumo::Lane::setDisallowed((std::string const &)*arg1,SWIG_STD_MOVE(arg2));
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_setChangePermissions___(const char * jarg1, void * jarg2, int jarg3) {
  std::string *arg1 = 0 ;
  std::vector< std::string > arg2 ;
  int arg3 ;
  std::vector< std::string > *argp2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  argp2 = (std::vector< std::string > *)jarg2; 
  if (!argp2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null std::vector< std::string >", 0);
    return ;
  }
  arg2 = *argp2; 
  arg3 = (int)jarg3; 
  {
    try {
      libsumo::Lane::setChangePermissions((std::string const &)*arg1,SWIG_STD_MOVE(arg2),arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_setMaxSpeed___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Lane::setMaxSpeed((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_setLength___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Lane::setLength((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Lane_setFriction___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Lane::setFriction((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_Lane___(void * jarg1) {
  libsumo::Lane *arg1 = (libsumo::Lane *) 0 ;
  
  arg1 = (libsumo::Lane *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MultiEntryExit_getEntryLanes___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::MultiEntryExit::getEntryLanes((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MultiEntryExit_getExitLanes___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::MultiEntryExit::getExitLanes((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MultiEntryExit_getEntryPositions___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::vector< double > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::MultiEntryExit::getEntryPositions((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< double >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MultiEntryExit_getExitPositions___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::vector< double > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::MultiEntryExit::getExitPositions((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< double >(result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MultiEntryExit_getLastStepVehicleNumber___(const char * jarg1) {
  int jresult ;
  std::string *arg1 = 0 ;
  int result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (int)libsumo::MultiEntryExit::getLastStepVehicleNumber((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MultiEntryExit_getLastStepMeanSpeed___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::MultiEntryExit::getLastStepMeanSpeed((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MultiEntryExit_getLastStepVehicleIDs___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::MultiEntryExit::getLastStepVehicleIDs((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MultiEntryExit_getLastStepHaltingNumber___(const char * jarg1) {
  int jresult ;
  std::string *arg1 = 0 ;
  int result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (int)libsumo::MultiEntryExit::getLastStepHaltingNumber((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MultiEntryExit_getLastIntervalMeanTravelTime___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::MultiEntryExit::getLastIntervalMeanTravelTime((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MultiEntryExit_getLastIntervalMeanHaltsPerVehicle___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::MultiEntryExit::getLastIntervalMeanHaltsPerVehicle((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MultiEntryExit_getLastIntervalMeanTimeLoss___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::MultiEntryExit::getLastIntervalMeanTimeLoss((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MultiEntryExit_getLastIntervalVehicleSum___(const char * jarg1) {
  int jresult ;
  std::string *arg1 = 0 ;
  int result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (int)libsumo::MultiEntryExit::getLastIntervalVehicleSum((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MultiEntryExit_getIDList___() {
  void * jresult ;
  std::vector< std::string > result;
  
  {
    try {
      result = libsumo::MultiEntryExit::getIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MultiEntryExit_getIDCount___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::MultiEntryExit::getIDCount();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MultiEntryExit_getParameter___(const char * jarg1, const char * jarg2) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = libsumo::MultiEntryExit::getParameter((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MultiEntryExit_getParameterWithKey___(const char * jarg1, const char * jarg2) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::pair< std::string,std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = libsumo::MultiEntryExit::getParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::pair< std::string,std::string >(result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MultiEntryExit_setParameter___(const char * jarg1, const char * jarg2, const char * jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  {
    try {
      libsumo::MultiEntryExit::setParameter((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MultiEntryExit_subscribe__SWIG_0___(const char * jarg1, void * jarg2, double jarg3, double jarg4, void * jarg5) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  libsumo::TraCIResults *arg5 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (libsumo::TraCIResults *)jarg5;
  if (!arg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIResults const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::MultiEntryExit::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4,(std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > > const &)*arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MultiEntryExit_subscribe__SWIG_1___(const char * jarg1, void * jarg2, double jarg3, double jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::MultiEntryExit::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MultiEntryExit_subscribe__SWIG_2___(const char * jarg1, void * jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::MultiEntryExit::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MultiEntryExit_subscribe__SWIG_3___(const char * jarg1, void * jarg2) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::MultiEntryExit::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MultiEntryExit_subscribe__SWIG_4___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::MultiEntryExit::subscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MultiEntryExit_unsubscribe___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::MultiEntryExit::unsubscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MultiEntryExit_subscribeContext__SWIG_0___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5, double jarg6, void * jarg7) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  libsumo::TraCIResults *arg7 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (libsumo::TraCIResults *)jarg7;
  if (!arg7) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIResults const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::MultiEntryExit::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6,(std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > > const &)*arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MultiEntryExit_subscribeContext__SWIG_1___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5, double jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::MultiEntryExit::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MultiEntryExit_subscribeContext__SWIG_2___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::MultiEntryExit::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MultiEntryExit_subscribeContext__SWIG_3___(const char * jarg1, int jarg2, double jarg3, void * jarg4) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::MultiEntryExit::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MultiEntryExit_subscribeContext__SWIG_4___(const char * jarg1, int jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::MultiEntryExit::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MultiEntryExit_unsubscribeContext___(const char * jarg1, int jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::MultiEntryExit::unsubscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MultiEntryExit_getAllSubscriptionResults___() {
  void * jresult ;
  libsumo::SubscriptionResults result;
  
  {
    try {
      result = libsumo::MultiEntryExit::getAllSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::SubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MultiEntryExit_getSubscriptionResults___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::TraCIResults result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::MultiEntryExit::getSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::TraCIResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MultiEntryExit_getAllContextSubscriptionResults___() {
  void * jresult ;
  libsumo::ContextSubscriptionResults result;
  
  {
    try {
      result = libsumo::MultiEntryExit::getAllContextSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::ContextSubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MultiEntryExit_getContextSubscriptionResults___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::SubscriptionResults result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::MultiEntryExit::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::SubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MultiEntryExit_subscribeParameterWithKey__SWIG_0___(const char * jarg1, const char * jarg2, double jarg3, double jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::MultiEntryExit::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MultiEntryExit_subscribeParameterWithKey__SWIG_1___(const char * jarg1, const char * jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::MultiEntryExit::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MultiEntryExit_subscribeParameterWithKey__SWIG_2___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::MultiEntryExit::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MultiEntryExit_DOMAIN_ID_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::MultiEntryExit::DOMAIN_ID;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MultiEntryExit_domainID___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::MultiEntryExit::domainID();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_MultiEntryExit___(void * jarg1) {
  libsumo::MultiEntryExit *arg1 = (libsumo::MultiEntryExit *) 0 ;
  
  arg1 = (libsumo::MultiEntryExit *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POI_getType___(const char * jarg1) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::POI::getType((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POI_getPosition__SWIG_0___(const char * jarg1, unsigned int jarg2) {
  void * jresult ;
  std::string *arg1 = 0 ;
  bool arg2 ;
  libsumo::TraCIPosition result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = jarg2 ? true : false; 
  {
    try {
      result = libsumo::POI::getPosition((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr<  libsumo::TraCIPosition >(new libsumo::TraCIPosition(result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POI_getPosition__SWIG_1___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::TraCIPosition result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::POI::getPosition((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr<  libsumo::TraCIPosition >(new libsumo::TraCIPosition(result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POI_getColor___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::TraCIColor result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::POI::getColor((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr<  libsumo::TraCIColor >(new libsumo::TraCIColor(result)); 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POI_getWidth___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::POI::getWidth((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POI_getHeight___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::POI::getHeight((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POI_getAngle___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::POI::getAngle((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POI_getImageFile___(const char * jarg1) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::POI::getImageFile((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POI_getIDList___() {
  void * jresult ;
  std::vector< std::string > result;
  
  {
    try {
      result = libsumo::POI::getIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POI_getIDCount___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::POI::getIDCount();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POI_getParameter___(const char * jarg1, const char * jarg2) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = libsumo::POI::getParameter((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POI_getParameterWithKey___(const char * jarg1, const char * jarg2) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::pair< std::string,std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = libsumo::POI::getParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::pair< std::string,std::string >(result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POI_setParameter___(const char * jarg1, const char * jarg2, const char * jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  {
    try {
      libsumo::POI::setParameter((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POI_subscribe__SWIG_0___(const char * jarg1, void * jarg2, double jarg3, double jarg4, void * jarg5) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  libsumo::TraCIResults *arg5 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (libsumo::TraCIResults *)jarg5;
  if (!arg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIResults const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::POI::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4,(std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > > const &)*arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POI_subscribe__SWIG_1___(const char * jarg1, void * jarg2, double jarg3, double jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::POI::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POI_subscribe__SWIG_2___(const char * jarg1, void * jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::POI::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POI_subscribe__SWIG_3___(const char * jarg1, void * jarg2) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::POI::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POI_subscribe__SWIG_4___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::POI::subscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POI_unsubscribe___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::POI::unsubscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POI_subscribeContext__SWIG_0___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5, double jarg6, void * jarg7) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  libsumo::TraCIResults *arg7 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (libsumo::TraCIResults *)jarg7;
  if (!arg7) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIResults const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::POI::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6,(std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > > const &)*arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POI_subscribeContext__SWIG_1___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5, double jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::POI::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POI_subscribeContext__SWIG_2___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::POI::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POI_subscribeContext__SWIG_3___(const char * jarg1, int jarg2, double jarg3, void * jarg4) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::POI::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POI_subscribeContext__SWIG_4___(const char * jarg1, int jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::POI::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POI_unsubscribeContext___(const char * jarg1, int jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::POI::unsubscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POI_getAllSubscriptionResults___() {
  void * jresult ;
  libsumo::SubscriptionResults result;
  
  {
    try {
      result = libsumo::POI::getAllSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::SubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POI_getSubscriptionResults___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::TraCIResults result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::POI::getSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::TraCIResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POI_getAllContextSubscriptionResults___() {
  void * jresult ;
  libsumo::ContextSubscriptionResults result;
  
  {
    try {
      result = libsumo::POI::getAllContextSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::ContextSubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POI_getContextSubscriptionResults___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::SubscriptionResults result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::POI::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::SubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POI_subscribeParameterWithKey__SWIG_0___(const char * jarg1, const char * jarg2, double jarg3, double jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::POI::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POI_subscribeParameterWithKey__SWIG_1___(const char * jarg1, const char * jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::POI::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POI_subscribeParameterWithKey__SWIG_2___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::POI::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POI_DOMAIN_ID_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::POI::DOMAIN_ID;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POI_domainID___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::POI::domainID();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POI_setType___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::POI::setType((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POI_setColor___(const char * jarg1, void * jarg2) {
  std::string *arg1 = 0 ;
  libsumo::TraCIColor *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  
  arg2 = (libsumo::TraCIColor *)(((std::shared_ptr< const libsumo::TraCIColor > *)jarg2) ? ((std::shared_ptr< const libsumo::TraCIColor > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIColor const & reference is null", 0);
    return ;
  } 
  {
    try {
      libsumo::POI::setColor((std::string const &)*arg1,(libsumo::TraCIColor const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POI_setPosition___(const char * jarg1, double jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::POI::setPosition((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POI_setWidth___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::POI::setWidth((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POI_setHeight___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::POI::setHeight((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POI_setAngle___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::POI::setAngle((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POI_setImageFile___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::POI::setImageFile((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POI_add__SWIG_0___(const char * jarg1, double jarg2, double jarg3, void * jarg4, const char * jarg5, int jarg6, const char * jarg7, double jarg8, double jarg9, double jarg10, const char * jarg11) {
  unsigned int jresult ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  libsumo::TraCIColor *arg4 = 0 ;
  std::string *arg5 = 0 ;
  int arg6 ;
  std::string *arg7 = 0 ;
  double arg8 ;
  double arg9 ;
  double arg10 ;
  std::string *arg11 = 0 ;
  bool result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  
  arg4 = (libsumo::TraCIColor *)(((std::shared_ptr< const libsumo::TraCIColor > *)jarg4) ? ((std::shared_ptr< const libsumo::TraCIColor > *)jarg4)->get() : 0);
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIColor const & reference is null", 0);
    return 0;
  } 
  if (!jarg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg5_str(jarg5);
  arg5 = &arg5_str; 
  arg6 = (int)jarg6; 
  if (!jarg7) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg7_str(jarg7);
  arg7 = &arg7_str; 
  arg8 = (double)jarg8; 
  arg9 = (double)jarg9; 
  arg10 = (double)jarg10; 
  if (!jarg11) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg11_str(jarg11);
  arg11 = &arg11_str; 
  {
    try {
      result = (bool)libsumo::POI::add((std::string const &)*arg1,arg2,arg3,(libsumo::TraCIColor const &)*arg4,(std::string const &)*arg5,arg6,(std::string const &)*arg7,arg8,arg9,arg10,(std::string const &)*arg11);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POI_add__SWIG_1___(const char * jarg1, double jarg2, double jarg3, void * jarg4, const char * jarg5, int jarg6, const char * jarg7, double jarg8, double jarg9, double jarg10) {
  unsigned int jresult ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  libsumo::TraCIColor *arg4 = 0 ;
  std::string *arg5 = 0 ;
  int arg6 ;
  std::string *arg7 = 0 ;
  double arg8 ;
  double arg9 ;
  double arg10 ;
  bool result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  
  arg4 = (libsumo::TraCIColor *)(((std::shared_ptr< const libsumo::TraCIColor > *)jarg4) ? ((std::shared_ptr< const libsumo::TraCIColor > *)jarg4)->get() : 0);
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIColor const & reference is null", 0);
    return 0;
  } 
  if (!jarg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg5_str(jarg5);
  arg5 = &arg5_str; 
  arg6 = (int)jarg6; 
  if (!jarg7) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg7_str(jarg7);
  arg7 = &arg7_str; 
  arg8 = (double)jarg8; 
  arg9 = (double)jarg9; 
  arg10 = (double)jarg10; 
  {
    try {
      result = (bool)libsumo::POI::add((std::string const &)*arg1,arg2,arg3,(libsumo::TraCIColor const &)*arg4,(std::string const &)*arg5,arg6,(std::string const &)*arg7,arg8,arg9,arg10);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POI_add__SWIG_2___(const char * jarg1, double jarg2, double jarg3, void * jarg4, const char * jarg5, int jarg6, const char * jarg7, double jarg8, double jarg9) {
  unsigned int jresult ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  libsumo::TraCIColor *arg4 = 0 ;
  std::string *arg5 = 0 ;
  int arg6 ;
  std::string *arg7 = 0 ;
  double arg8 ;
  double arg9 ;
  bool result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  
  arg4 = (libsumo::TraCIColor *)(((std::shared_ptr< const libsumo::TraCIColor > *)jarg4) ? ((std::shared_ptr< const libsumo::TraCIColor > *)jarg4)->get() : 0);
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIColor const & reference is null", 0);
    return 0;
  } 
  if (!jarg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg5_str(jarg5);
  arg5 = &arg5_str; 
  arg6 = (int)jarg6; 
  if (!jarg7) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg7_str(jarg7);
  arg7 = &arg7_str; 
  arg8 = (double)jarg8; 
  arg9 = (double)jarg9; 
  {
    try {
      result = (bool)libsumo::POI::add((std::string const &)*arg1,arg2,arg3,(libsumo::TraCIColor const &)*arg4,(std::string const &)*arg5,arg6,(std::string const &)*arg7,arg8,arg9);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POI_add__SWIG_3___(const char * jarg1, double jarg2, double jarg3, void * jarg4, const char * jarg5, int jarg6, const char * jarg7, double jarg8) {
  unsigned int jresult ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  libsumo::TraCIColor *arg4 = 0 ;
  std::string *arg5 = 0 ;
  int arg6 ;
  std::string *arg7 = 0 ;
  double arg8 ;
  bool result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  
  arg4 = (libsumo::TraCIColor *)(((std::shared_ptr< const libsumo::TraCIColor > *)jarg4) ? ((std::shared_ptr< const libsumo::TraCIColor > *)jarg4)->get() : 0);
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIColor const & reference is null", 0);
    return 0;
  } 
  if (!jarg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg5_str(jarg5);
  arg5 = &arg5_str; 
  arg6 = (int)jarg6; 
  if (!jarg7) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg7_str(jarg7);
  arg7 = &arg7_str; 
  arg8 = (double)jarg8; 
  {
    try {
      result = (bool)libsumo::POI::add((std::string const &)*arg1,arg2,arg3,(libsumo::TraCIColor const &)*arg4,(std::string const &)*arg5,arg6,(std::string const &)*arg7,arg8);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POI_add__SWIG_4___(const char * jarg1, double jarg2, double jarg3, void * jarg4, const char * jarg5, int jarg6, const char * jarg7) {
  unsigned int jresult ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  libsumo::TraCIColor *arg4 = 0 ;
  std::string *arg5 = 0 ;
  int arg6 ;
  std::string *arg7 = 0 ;
  bool result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  
  arg4 = (libsumo::TraCIColor *)(((std::shared_ptr< const libsumo::TraCIColor > *)jarg4) ? ((std::shared_ptr< const libsumo::TraCIColor > *)jarg4)->get() : 0);
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIColor const & reference is null", 0);
    return 0;
  } 
  if (!jarg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg5_str(jarg5);
  arg5 = &arg5_str; 
  arg6 = (int)jarg6; 
  if (!jarg7) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg7_str(jarg7);
  arg7 = &arg7_str; 
  {
    try {
      result = (bool)libsumo::POI::add((std::string const &)*arg1,arg2,arg3,(libsumo::TraCIColor const &)*arg4,(std::string const &)*arg5,arg6,(std::string const &)*arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POI_add__SWIG_5___(const char * jarg1, double jarg2, double jarg3, void * jarg4, const char * jarg5, int jarg6) {
  unsigned int jresult ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  libsumo::TraCIColor *arg4 = 0 ;
  std::string *arg5 = 0 ;
  int arg6 ;
  bool result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  
  arg4 = (libsumo::TraCIColor *)(((std::shared_ptr< const libsumo::TraCIColor > *)jarg4) ? ((std::shared_ptr< const libsumo::TraCIColor > *)jarg4)->get() : 0);
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIColor const & reference is null", 0);
    return 0;
  } 
  if (!jarg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg5_str(jarg5);
  arg5 = &arg5_str; 
  arg6 = (int)jarg6; 
  {
    try {
      result = (bool)libsumo::POI::add((std::string const &)*arg1,arg2,arg3,(libsumo::TraCIColor const &)*arg4,(std::string const &)*arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POI_add__SWIG_6___(const char * jarg1, double jarg2, double jarg3, void * jarg4, const char * jarg5) {
  unsigned int jresult ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  libsumo::TraCIColor *arg4 = 0 ;
  std::string *arg5 = 0 ;
  bool result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  
  arg4 = (libsumo::TraCIColor *)(((std::shared_ptr< const libsumo::TraCIColor > *)jarg4) ? ((std::shared_ptr< const libsumo::TraCIColor > *)jarg4)->get() : 0);
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIColor const & reference is null", 0);
    return 0;
  } 
  if (!jarg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg5_str(jarg5);
  arg5 = &arg5_str; 
  {
    try {
      result = (bool)libsumo::POI::add((std::string const &)*arg1,arg2,arg3,(libsumo::TraCIColor const &)*arg4,(std::string const &)*arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POI_add__SWIG_7___(const char * jarg1, double jarg2, double jarg3, void * jarg4) {
  unsigned int jresult ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  libsumo::TraCIColor *arg4 = 0 ;
  bool result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  
  arg4 = (libsumo::TraCIColor *)(((std::shared_ptr< const libsumo::TraCIColor > *)jarg4) ? ((std::shared_ptr< const libsumo::TraCIColor > *)jarg4)->get() : 0);
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIColor const & reference is null", 0);
    return 0;
  } 
  {
    try {
      result = (bool)libsumo::POI::add((std::string const &)*arg1,arg2,arg3,(libsumo::TraCIColor const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POI_remove__SWIG_0___(const char * jarg1, int jarg2) {
  unsigned int jresult ;
  std::string *arg1 = 0 ;
  int arg2 ;
  bool result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  {
    try {
      result = (bool)libsumo::POI::remove((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POI_remove__SWIG_1___(const char * jarg1) {
  unsigned int jresult ;
  std::string *arg1 = 0 ;
  bool result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (bool)libsumo::POI::remove((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POI_highlight__SWIG_0___(const char * jarg1, void * jarg2, double jarg3, int jarg4, double jarg5, int jarg6) {
  std::string *arg1 = 0 ;
  libsumo::TraCIColor *arg2 = 0 ;
  double arg3 ;
  int arg4 ;
  double arg5 ;
  int arg6 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  
  arg2 = (libsumo::TraCIColor *)(((std::shared_ptr< const libsumo::TraCIColor > *)jarg2) ? ((std::shared_ptr< const libsumo::TraCIColor > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIColor const & reference is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (double)jarg5; 
  arg6 = (int)jarg6; 
  {
    try {
      libsumo::POI::highlight((std::string const &)*arg1,(libsumo::TraCIColor const &)*arg2,arg3,arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POI_highlight__SWIG_1___(const char * jarg1, void * jarg2, double jarg3, int jarg4, double jarg5) {
  std::string *arg1 = 0 ;
  libsumo::TraCIColor *arg2 = 0 ;
  double arg3 ;
  int arg4 ;
  double arg5 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  
  arg2 = (libsumo::TraCIColor *)(((std::shared_ptr< const libsumo::TraCIColor > *)jarg2) ? ((std::shared_ptr< const libsumo::TraCIColor > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIColor const & reference is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::POI::highlight((std::string const &)*arg1,(libsumo::TraCIColor const &)*arg2,arg3,arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POI_highlight__SWIG_2___(const char * jarg1, void * jarg2, double jarg3, int jarg4) {
  std::string *arg1 = 0 ;
  libsumo::TraCIColor *arg2 = 0 ;
  double arg3 ;
  int arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  
  arg2 = (libsumo::TraCIColor *)(((std::shared_ptr< const libsumo::TraCIColor > *)jarg2) ? ((std::shared_ptr< const libsumo::TraCIColor > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIColor const & reference is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (int)jarg4; 
  {
    try {
      libsumo::POI::highlight((std::string const &)*arg1,(libsumo::TraCIColor const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POI_highlight__SWIG_3___(const char * jarg1, void * jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  libsumo::TraCIColor *arg2 = 0 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  
  arg2 = (libsumo::TraCIColor *)(((std::shared_ptr< const libsumo::TraCIColor > *)jarg2) ? ((std::shared_ptr< const libsumo::TraCIColor > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIColor const & reference is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::POI::highlight((std::string const &)*arg1,(libsumo::TraCIColor const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POI_highlight__SWIG_4___(const char * jarg1, void * jarg2) {
  std::string *arg1 = 0 ;
  libsumo::TraCIColor *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  
  arg2 = (libsumo::TraCIColor *)(((std::shared_ptr< const libsumo::TraCIColor > *)jarg2) ? ((std::shared_ptr< const libsumo::TraCIColor > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIColor const & reference is null", 0);
    return ;
  } 
  {
    try {
      libsumo::POI::highlight((std::string const &)*arg1,(libsumo::TraCIColor const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POI_highlight__SWIG_5___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::POI::highlight((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_POI___(void * jarg1) {
  libsumo::POI *arg1 = (libsumo::POI *) 0 ;
  
  arg1 = (libsumo::POI *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Polygon_getType___(const char * jarg1) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Polygon::getType((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Polygon_getShape___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::TraCIPositionVector result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Polygon::getShape((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr<  libsumo::TraCIPositionVector >(new libsumo::TraCIPositionVector(result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Polygon_getColor___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::TraCIColor result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Polygon::getColor((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr<  libsumo::TraCIColor >(new libsumo::TraCIColor(result)); 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Polygon_getFilled___(const char * jarg1) {
  unsigned int jresult ;
  std::string *arg1 = 0 ;
  bool result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (bool)libsumo::Polygon::getFilled((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Polygon_getLineWidth___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Polygon::getLineWidth((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Polygon_getIDList___() {
  void * jresult ;
  std::vector< std::string > result;
  
  {
    try {
      result = libsumo::Polygon::getIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Polygon_getIDCount___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::Polygon::getIDCount();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Polygon_getParameter___(const char * jarg1, const char * jarg2) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = libsumo::Polygon::getParameter((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Polygon_getParameterWithKey___(const char * jarg1, const char * jarg2) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::pair< std::string,std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = libsumo::Polygon::getParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::pair< std::string,std::string >(result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Polygon_setParameter___(const char * jarg1, const char * jarg2, const char * jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  {
    try {
      libsumo::Polygon::setParameter((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Polygon_subscribe__SWIG_0___(const char * jarg1, void * jarg2, double jarg3, double jarg4, void * jarg5) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  libsumo::TraCIResults *arg5 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (libsumo::TraCIResults *)jarg5;
  if (!arg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIResults const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Polygon::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4,(std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > > const &)*arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Polygon_subscribe__SWIG_1___(const char * jarg1, void * jarg2, double jarg3, double jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Polygon::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Polygon_subscribe__SWIG_2___(const char * jarg1, void * jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Polygon::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Polygon_subscribe__SWIG_3___(const char * jarg1, void * jarg2) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Polygon::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Polygon_subscribe__SWIG_4___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::Polygon::subscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Polygon_unsubscribe___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::Polygon::unsubscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Polygon_subscribeContext__SWIG_0___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5, double jarg6, void * jarg7) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  libsumo::TraCIResults *arg7 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (libsumo::TraCIResults *)jarg7;
  if (!arg7) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIResults const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Polygon::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6,(std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > > const &)*arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Polygon_subscribeContext__SWIG_1___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5, double jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::Polygon::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Polygon_subscribeContext__SWIG_2___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::Polygon::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Polygon_subscribeContext__SWIG_3___(const char * jarg1, int jarg2, double jarg3, void * jarg4) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Polygon::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Polygon_subscribeContext__SWIG_4___(const char * jarg1, int jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Polygon::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Polygon_unsubscribeContext___(const char * jarg1, int jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Polygon::unsubscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Polygon_getAllSubscriptionResults___() {
  void * jresult ;
  libsumo::SubscriptionResults result;
  
  {
    try {
      result = libsumo::Polygon::getAllSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::SubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Polygon_getSubscriptionResults___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::TraCIResults result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Polygon::getSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::TraCIResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Polygon_getAllContextSubscriptionResults___() {
  void * jresult ;
  libsumo::ContextSubscriptionResults result;
  
  {
    try {
      result = libsumo::Polygon::getAllContextSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::ContextSubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Polygon_getContextSubscriptionResults___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::SubscriptionResults result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Polygon::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::SubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Polygon_subscribeParameterWithKey__SWIG_0___(const char * jarg1, const char * jarg2, double jarg3, double jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Polygon::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Polygon_subscribeParameterWithKey__SWIG_1___(const char * jarg1, const char * jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Polygon::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Polygon_subscribeParameterWithKey__SWIG_2___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::Polygon::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Polygon_DOMAIN_ID_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::Polygon::DOMAIN_ID;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Polygon_domainID___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::Polygon::domainID();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Polygon_setType___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::Polygon::setType((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Polygon_setShape___(const char * jarg1, void * jarg2) {
  std::string *arg1 = 0 ;
  libsumo::TraCIPositionVector *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  
  arg2 = (libsumo::TraCIPositionVector *)(((std::shared_ptr< const libsumo::TraCIPositionVector > *)jarg2) ? ((std::shared_ptr< const libsumo::TraCIPositionVector > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIPositionVector const & reference is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Polygon::setShape((std::string const &)*arg1,(libsumo::TraCIPositionVector const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Polygon_setColor___(const char * jarg1, void * jarg2) {
  std::string *arg1 = 0 ;
  libsumo::TraCIColor *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  
  arg2 = (libsumo::TraCIColor *)(((std::shared_ptr< const libsumo::TraCIColor > *)jarg2) ? ((std::shared_ptr< const libsumo::TraCIColor > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIColor const & reference is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Polygon::setColor((std::string const &)*arg1,(libsumo::TraCIColor const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Polygon_add__SWIG_0___(const char * jarg1, void * jarg2, void * jarg3, unsigned int jarg4, const char * jarg5, int jarg6, double jarg7) {
  std::string *arg1 = 0 ;
  libsumo::TraCIPositionVector *arg2 = 0 ;
  libsumo::TraCIColor *arg3 = 0 ;
  bool arg4 ;
  std::string *arg5 = 0 ;
  int arg6 ;
  double arg7 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  
  arg2 = (libsumo::TraCIPositionVector *)(((std::shared_ptr< const libsumo::TraCIPositionVector > *)jarg2) ? ((std::shared_ptr< const libsumo::TraCIPositionVector > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIPositionVector const & reference is null", 0);
    return ;
  } 
  
  arg3 = (libsumo::TraCIColor *)(((std::shared_ptr< const libsumo::TraCIColor > *)jarg3) ? ((std::shared_ptr< const libsumo::TraCIColor > *)jarg3)->get() : 0);
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIColor const & reference is null", 0);
    return ;
  } 
  arg4 = jarg4 ? true : false; 
  if (!jarg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg5_str(jarg5);
  arg5 = &arg5_str; 
  arg6 = (int)jarg6; 
  arg7 = (double)jarg7; 
  {
    try {
      libsumo::Polygon::add((std::string const &)*arg1,(libsumo::TraCIPositionVector const &)*arg2,(libsumo::TraCIColor const &)*arg3,arg4,(std::string const &)*arg5,arg6,arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Polygon_add__SWIG_1___(const char * jarg1, void * jarg2, void * jarg3, unsigned int jarg4, const char * jarg5, int jarg6) {
  std::string *arg1 = 0 ;
  libsumo::TraCIPositionVector *arg2 = 0 ;
  libsumo::TraCIColor *arg3 = 0 ;
  bool arg4 ;
  std::string *arg5 = 0 ;
  int arg6 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  
  arg2 = (libsumo::TraCIPositionVector *)(((std::shared_ptr< const libsumo::TraCIPositionVector > *)jarg2) ? ((std::shared_ptr< const libsumo::TraCIPositionVector > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIPositionVector const & reference is null", 0);
    return ;
  } 
  
  arg3 = (libsumo::TraCIColor *)(((std::shared_ptr< const libsumo::TraCIColor > *)jarg3) ? ((std::shared_ptr< const libsumo::TraCIColor > *)jarg3)->get() : 0);
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIColor const & reference is null", 0);
    return ;
  } 
  arg4 = jarg4 ? true : false; 
  if (!jarg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg5_str(jarg5);
  arg5 = &arg5_str; 
  arg6 = (int)jarg6; 
  {
    try {
      libsumo::Polygon::add((std::string const &)*arg1,(libsumo::TraCIPositionVector const &)*arg2,(libsumo::TraCIColor const &)*arg3,arg4,(std::string const &)*arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Polygon_add__SWIG_2___(const char * jarg1, void * jarg2, void * jarg3, unsigned int jarg4, const char * jarg5) {
  std::string *arg1 = 0 ;
  libsumo::TraCIPositionVector *arg2 = 0 ;
  libsumo::TraCIColor *arg3 = 0 ;
  bool arg4 ;
  std::string *arg5 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  
  arg2 = (libsumo::TraCIPositionVector *)(((std::shared_ptr< const libsumo::TraCIPositionVector > *)jarg2) ? ((std::shared_ptr< const libsumo::TraCIPositionVector > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIPositionVector const & reference is null", 0);
    return ;
  } 
  
  arg3 = (libsumo::TraCIColor *)(((std::shared_ptr< const libsumo::TraCIColor > *)jarg3) ? ((std::shared_ptr< const libsumo::TraCIColor > *)jarg3)->get() : 0);
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIColor const & reference is null", 0);
    return ;
  } 
  arg4 = jarg4 ? true : false; 
  if (!jarg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg5_str(jarg5);
  arg5 = &arg5_str; 
  {
    try {
      libsumo::Polygon::add((std::string const &)*arg1,(libsumo::TraCIPositionVector const &)*arg2,(libsumo::TraCIColor const &)*arg3,arg4,(std::string const &)*arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Polygon_add__SWIG_3___(const char * jarg1, void * jarg2, void * jarg3, unsigned int jarg4) {
  std::string *arg1 = 0 ;
  libsumo::TraCIPositionVector *arg2 = 0 ;
  libsumo::TraCIColor *arg3 = 0 ;
  bool arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  
  arg2 = (libsumo::TraCIPositionVector *)(((std::shared_ptr< const libsumo::TraCIPositionVector > *)jarg2) ? ((std::shared_ptr< const libsumo::TraCIPositionVector > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIPositionVector const & reference is null", 0);
    return ;
  } 
  
  arg3 = (libsumo::TraCIColor *)(((std::shared_ptr< const libsumo::TraCIColor > *)jarg3) ? ((std::shared_ptr< const libsumo::TraCIColor > *)jarg3)->get() : 0);
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIColor const & reference is null", 0);
    return ;
  } 
  arg4 = jarg4 ? true : false; 
  {
    try {
      libsumo::Polygon::add((std::string const &)*arg1,(libsumo::TraCIPositionVector const &)*arg2,(libsumo::TraCIColor const &)*arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Polygon_add__SWIG_4___(const char * jarg1, void * jarg2, void * jarg3) {
  std::string *arg1 = 0 ;
  libsumo::TraCIPositionVector *arg2 = 0 ;
  libsumo::TraCIColor *arg3 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  
  arg2 = (libsumo::TraCIPositionVector *)(((std::shared_ptr< const libsumo::TraCIPositionVector > *)jarg2) ? ((std::shared_ptr< const libsumo::TraCIPositionVector > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIPositionVector const & reference is null", 0);
    return ;
  } 
  
  arg3 = (libsumo::TraCIColor *)(((std::shared_ptr< const libsumo::TraCIColor > *)jarg3) ? ((std::shared_ptr< const libsumo::TraCIColor > *)jarg3)->get() : 0);
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIColor const & reference is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Polygon::add((std::string const &)*arg1,(libsumo::TraCIPositionVector const &)*arg2,(libsumo::TraCIColor const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Polygon_addDynamics__SWIG_0___(const char * jarg1, const char * jarg2, void * jarg3, void * jarg4, unsigned int jarg5, unsigned int jarg6) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::vector< double > *arg3 = 0 ;
  std::vector< double > *arg4 = 0 ;
  bool arg5 ;
  bool arg6 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (std::vector< double > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< double > const & is null", 0);
    return ;
  } 
  arg4 = (std::vector< double > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< double > const & is null", 0);
    return ;
  } 
  arg5 = jarg5 ? true : false; 
  arg6 = jarg6 ? true : false; 
  {
    try {
      libsumo::Polygon::addDynamics((std::string const &)*arg1,(std::string const &)*arg2,(std::vector< double > const &)*arg3,(std::vector< double > const &)*arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Polygon_addDynamics__SWIG_1___(const char * jarg1, const char * jarg2, void * jarg3, void * jarg4, unsigned int jarg5) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::vector< double > *arg3 = 0 ;
  std::vector< double > *arg4 = 0 ;
  bool arg5 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (std::vector< double > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< double > const & is null", 0);
    return ;
  } 
  arg4 = (std::vector< double > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< double > const & is null", 0);
    return ;
  } 
  arg5 = jarg5 ? true : false; 
  {
    try {
      libsumo::Polygon::addDynamics((std::string const &)*arg1,(std::string const &)*arg2,(std::vector< double > const &)*arg3,(std::vector< double > const &)*arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Polygon_addDynamics__SWIG_2___(const char * jarg1, const char * jarg2, void * jarg3, void * jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::vector< double > *arg3 = 0 ;
  std::vector< double > *arg4 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (std::vector< double > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< double > const & is null", 0);
    return ;
  } 
  arg4 = (std::vector< double > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< double > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Polygon::addDynamics((std::string const &)*arg1,(std::string const &)*arg2,(std::vector< double > const &)*arg3,(std::vector< double > const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Polygon_addDynamics__SWIG_3___(const char * jarg1, const char * jarg2, void * jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::vector< double > *arg3 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (std::vector< double > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< double > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Polygon::addDynamics((std::string const &)*arg1,(std::string const &)*arg2,(std::vector< double > const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Polygon_addDynamics__SWIG_4___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::Polygon::addDynamics((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Polygon_addDynamics__SWIG_5___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::Polygon::addDynamics((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Polygon_remove__SWIG_0___(const char * jarg1, int jarg2) {
  std::string *arg1 = 0 ;
  int arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  {
    try {
      libsumo::Polygon::remove((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Polygon_remove__SWIG_1___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::Polygon::remove((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Polygon_setFilled___(const char * jarg1, unsigned int jarg2) {
  std::string arg1 ;
  bool arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  (&arg1)->assign(jarg1); 
  arg2 = jarg2 ? true : false; 
  {
    try {
      libsumo::Polygon::setFilled(SWIG_STD_MOVE(arg1),arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Polygon_setLineWidth___(const char * jarg1, double jarg2) {
  std::string arg1 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  (&arg1)->assign(jarg1); 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Polygon::setLineWidth(SWIG_STD_MOVE(arg1),arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_Polygon___(void * jarg1) {
  libsumo::Polygon *arg1 = (libsumo::Polygon *) 0 ;
  
  arg1 = (libsumo::Polygon *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Route_getEdges___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Route::getEdges((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Route_getIDList___() {
  void * jresult ;
  std::vector< std::string > result;
  
  {
    try {
      result = libsumo::Route::getIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Route_getIDCount___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::Route::getIDCount();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Route_getParameter___(const char * jarg1, const char * jarg2) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = libsumo::Route::getParameter((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Route_getParameterWithKey___(const char * jarg1, const char * jarg2) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::pair< std::string,std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = libsumo::Route::getParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::pair< std::string,std::string >(result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Route_setParameter___(const char * jarg1, const char * jarg2, const char * jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  {
    try {
      libsumo::Route::setParameter((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Route_subscribe__SWIG_0___(const char * jarg1, void * jarg2, double jarg3, double jarg4, void * jarg5) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  libsumo::TraCIResults *arg5 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (libsumo::TraCIResults *)jarg5;
  if (!arg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIResults const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Route::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4,(std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > > const &)*arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Route_subscribe__SWIG_1___(const char * jarg1, void * jarg2, double jarg3, double jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Route::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Route_subscribe__SWIG_2___(const char * jarg1, void * jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Route::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Route_subscribe__SWIG_3___(const char * jarg1, void * jarg2) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Route::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Route_subscribe__SWIG_4___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::Route::subscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Route_unsubscribe___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::Route::unsubscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Route_subscribeContext__SWIG_0___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5, double jarg6, void * jarg7) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  libsumo::TraCIResults *arg7 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (libsumo::TraCIResults *)jarg7;
  if (!arg7) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIResults const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Route::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6,(std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > > const &)*arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Route_subscribeContext__SWIG_1___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5, double jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::Route::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Route_subscribeContext__SWIG_2___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::Route::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Route_subscribeContext__SWIG_3___(const char * jarg1, int jarg2, double jarg3, void * jarg4) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Route::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Route_subscribeContext__SWIG_4___(const char * jarg1, int jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Route::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Route_unsubscribeContext___(const char * jarg1, int jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Route::unsubscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Route_getAllSubscriptionResults___() {
  void * jresult ;
  libsumo::SubscriptionResults result;
  
  {
    try {
      result = libsumo::Route::getAllSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::SubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Route_getSubscriptionResults___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::TraCIResults result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Route::getSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::TraCIResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Route_getAllContextSubscriptionResults___() {
  void * jresult ;
  libsumo::ContextSubscriptionResults result;
  
  {
    try {
      result = libsumo::Route::getAllContextSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::ContextSubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Route_getContextSubscriptionResults___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::SubscriptionResults result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Route::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::SubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Route_subscribeParameterWithKey__SWIG_0___(const char * jarg1, const char * jarg2, double jarg3, double jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Route::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Route_subscribeParameterWithKey__SWIG_1___(const char * jarg1, const char * jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Route::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Route_subscribeParameterWithKey__SWIG_2___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::Route::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Route_DOMAIN_ID_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::Route::DOMAIN_ID;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Route_domainID___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::Route::domainID();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Route_add___(const char * jarg1, void * jarg2) {
  std::string *arg1 = 0 ;
  std::vector< std::string > *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< std::string > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::string > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Route::add((std::string const &)*arg1,(std::vector< std::string > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Route_remove___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::Route::remove((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_Route___(void * jarg1) {
  libsumo::Route *arg1 = (libsumo::Route *) 0 ;
  
  arg1 = (libsumo::Route *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_init__SWIG_0___(int jarg1, int jarg2, const char * jarg3, const char * jarg4, void * jarg5) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  FILE *arg5 = (FILE *) (FILE *)0 ;
  std::pair< int,std::string > result;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  if (!jarg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg4_str(jarg4);
  arg4 = &arg4_str; 
  arg5 = (FILE *)jarg5; 
  {
    try {
      result = libsumo::Simulation::init(arg1,arg2,(std::string const &)*arg3,(std::string const &)*arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::pair< int,std::string >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_init__SWIG_1___(int jarg1, int jarg2, const char * jarg3, const char * jarg4) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::pair< int,std::string > result;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  if (!jarg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg4_str(jarg4);
  arg4 = &arg4_str; 
  {
    try {
      result = libsumo::Simulation::init(arg1,arg2,(std::string const &)*arg3,(std::string const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::pair< int,std::string >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_init__SWIG_2___(int jarg1, int jarg2, const char * jarg3) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  std::string *arg3 = 0 ;
  std::pair< int,std::string > result;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  {
    try {
      result = libsumo::Simulation::init(arg1,arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::pair< int,std::string >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_init__SWIG_3___(int jarg1, int jarg2) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  std::pair< int,std::string > result;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      result = libsumo::Simulation::init(arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::pair< int,std::string >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_init__SWIG_4___(int jarg1) {
  void * jresult ;
  int arg1 ;
  std::pair< int,std::string > result;
  
  arg1 = (int)jarg1; 
  {
    try {
      result = libsumo::Simulation::init(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::pair< int,std::string >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_init__SWIG_5___() {
  void * jresult ;
  std::pair< int,std::string > result;
  
  {
    try {
      result = libsumo::Simulation::init();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::pair< int,std::string >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_start__SWIG_0___(void * jarg1, int jarg2, int jarg3, const char * jarg4, unsigned int jarg5, const char * jarg6, unsigned int jarg7, void * jarg8) {
  void * jresult ;
  std::vector< std::string > *arg1 = 0 ;
  int arg2 ;
  int arg3 ;
  std::string *arg4 = 0 ;
  bool arg5 ;
  std::string *arg6 = 0 ;
  bool arg7 ;
  void *arg8 = (void *) 0 ;
  std::pair< int,std::string > result;
  
  arg1 = (std::vector< std::string > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::string > const & is null", 0);
    return 0;
  } 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  if (!jarg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg4_str(jarg4);
  arg4 = &arg4_str; 
  arg5 = jarg5 ? true : false; 
  if (!jarg6) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg6_str(jarg6);
  arg6 = &arg6_str; 
  arg7 = jarg7 ? true : false; 
  arg8 = (void *)jarg8; 
  {
    try {
      result = libsumo::Simulation::start((std::vector< std::string > const &)*arg1,arg2,arg3,(std::string const &)*arg4,arg5,(std::string const &)*arg6,arg7,arg8);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::pair< int,std::string >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_start__SWIG_1___(void * jarg1, int jarg2, int jarg3, const char * jarg4, unsigned int jarg5, const char * jarg6, unsigned int jarg7) {
  void * jresult ;
  std::vector< std::string > *arg1 = 0 ;
  int arg2 ;
  int arg3 ;
  std::string *arg4 = 0 ;
  bool arg5 ;
  std::string *arg6 = 0 ;
  bool arg7 ;
  std::pair< int,std::string > result;
  
  arg1 = (std::vector< std::string > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::string > const & is null", 0);
    return 0;
  } 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  if (!jarg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg4_str(jarg4);
  arg4 = &arg4_str; 
  arg5 = jarg5 ? true : false; 
  if (!jarg6) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg6_str(jarg6);
  arg6 = &arg6_str; 
  arg7 = jarg7 ? true : false; 
  {
    try {
      result = libsumo::Simulation::start((std::vector< std::string > const &)*arg1,arg2,arg3,(std::string const &)*arg4,arg5,(std::string const &)*arg6,arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::pair< int,std::string >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_start__SWIG_2___(void * jarg1, int jarg2, int jarg3, const char * jarg4, unsigned int jarg5, const char * jarg6) {
  void * jresult ;
  std::vector< std::string > *arg1 = 0 ;
  int arg2 ;
  int arg3 ;
  std::string *arg4 = 0 ;
  bool arg5 ;
  std::string *arg6 = 0 ;
  std::pair< int,std::string > result;
  
  arg1 = (std::vector< std::string > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::string > const & is null", 0);
    return 0;
  } 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  if (!jarg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg4_str(jarg4);
  arg4 = &arg4_str; 
  arg5 = jarg5 ? true : false; 
  if (!jarg6) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg6_str(jarg6);
  arg6 = &arg6_str; 
  {
    try {
      result = libsumo::Simulation::start((std::vector< std::string > const &)*arg1,arg2,arg3,(std::string const &)*arg4,arg5,(std::string const &)*arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::pair< int,std::string >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_start__SWIG_3___(void * jarg1, int jarg2, int jarg3, const char * jarg4, unsigned int jarg5) {
  void * jresult ;
  std::vector< std::string > *arg1 = 0 ;
  int arg2 ;
  int arg3 ;
  std::string *arg4 = 0 ;
  bool arg5 ;
  std::pair< int,std::string > result;
  
  arg1 = (std::vector< std::string > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::string > const & is null", 0);
    return 0;
  } 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  if (!jarg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg4_str(jarg4);
  arg4 = &arg4_str; 
  arg5 = jarg5 ? true : false; 
  {
    try {
      result = libsumo::Simulation::start((std::vector< std::string > const &)*arg1,arg2,arg3,(std::string const &)*arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::pair< int,std::string >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_start__SWIG_4___(void * jarg1, int jarg2, int jarg3, const char * jarg4) {
  void * jresult ;
  std::vector< std::string > *arg1 = 0 ;
  int arg2 ;
  int arg3 ;
  std::string *arg4 = 0 ;
  std::pair< int,std::string > result;
  
  arg1 = (std::vector< std::string > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::string > const & is null", 0);
    return 0;
  } 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  if (!jarg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg4_str(jarg4);
  arg4 = &arg4_str; 
  {
    try {
      result = libsumo::Simulation::start((std::vector< std::string > const &)*arg1,arg2,arg3,(std::string const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::pair< int,std::string >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_start__SWIG_5___(void * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  std::vector< std::string > *arg1 = 0 ;
  int arg2 ;
  int arg3 ;
  std::pair< int,std::string > result;
  
  arg1 = (std::vector< std::string > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::string > const & is null", 0);
    return 0;
  } 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      result = libsumo::Simulation::start((std::vector< std::string > const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::pair< int,std::string >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_start__SWIG_6___(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< std::string > *arg1 = 0 ;
  int arg2 ;
  std::pair< int,std::string > result;
  
  arg1 = (std::vector< std::string > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::string > const & is null", 0);
    return 0;
  } 
  arg2 = (int)jarg2; 
  {
    try {
      result = libsumo::Simulation::start((std::vector< std::string > const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::pair< int,std::string >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_start__SWIG_7___(void * jarg1) {
  void * jresult ;
  std::vector< std::string > *arg1 = 0 ;
  std::pair< int,std::string > result;
  
  arg1 = (std::vector< std::string > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::string > const & is null", 0);
    return 0;
  } 
  {
    try {
      result = libsumo::Simulation::start((std::vector< std::string > const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::pair< int,std::string >(result); 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_isLibsumo___() {
  unsigned int jresult ;
  bool result;
  
  {
    try {
      result = (bool)libsumo::Simulation::isLibsumo();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_switchConnection___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::Simulation::switchConnection((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_getLabel___() {
  const char * jresult ;
  std::string *result = 0 ;
  
  {
    try {
      result = (std::string *) &libsumo::Simulation::getLabel();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_setOrder___(int jarg1) {
  int arg1 ;
  
  arg1 = (int)jarg1; 
  {
    try {
      libsumo::Simulation::setOrder(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_load___(void * jarg1) {
  std::vector< std::string > *arg1 = 0 ;
  
  arg1 = (std::vector< std::string > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::string > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Simulation::load((std::vector< std::string > const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_hasGUI___() {
  unsigned int jresult ;
  bool result;
  
  {
    try {
      result = (bool)libsumo::Simulation::hasGUI();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_isLoaded___() {
  unsigned int jresult ;
  bool result;
  
  {
    try {
      result = (bool)libsumo::Simulation::isLoaded();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_step__SWIG_0___(double jarg1) {
  double arg1 ;
  
  arg1 = (double)jarg1; 
  {
    try {
      libsumo::Simulation::step(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_step__SWIG_1___() {
  {
    try {
      libsumo::Simulation::step();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_executeMove___() {
  {
    try {
      libsumo::Simulation::executeMove();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_close__SWIG_0___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::Simulation::close((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_close__SWIG_1___() {
  {
    try {
      libsumo::Simulation::close();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_getVersion___() {
  void * jresult ;
  std::pair< int,std::string > result;
  
  {
    try {
      result = libsumo::Simulation::getVersion();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::pair< int,std::string >(result); 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_getOption___(const char * jarg1) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Simulation::getOption((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_getCurrentTime___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::Simulation::getCurrentTime();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_getTime___() {
  double jresult ;
  double result;
  
  {
    try {
      result = (double)libsumo::Simulation::getTime();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_getEndTime___() {
  double jresult ;
  double result;
  
  {
    try {
      result = (double)libsumo::Simulation::getEndTime();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_getLoadedNumber___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::Simulation::getLoadedNumber();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_getLoadedIDList___() {
  void * jresult ;
  std::vector< std::string > result;
  
  {
    try {
      result = libsumo::Simulation::getLoadedIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_getDepartedNumber___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::Simulation::getDepartedNumber();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_getDepartedIDList___() {
  void * jresult ;
  std::vector< std::string > result;
  
  {
    try {
      result = libsumo::Simulation::getDepartedIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_getArrivedNumber___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::Simulation::getArrivedNumber();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_getArrivedIDList___() {
  void * jresult ;
  std::vector< std::string > result;
  
  {
    try {
      result = libsumo::Simulation::getArrivedIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_getParkingStartingVehiclesNumber___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::Simulation::getParkingStartingVehiclesNumber();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_getParkingStartingVehiclesIDList___() {
  void * jresult ;
  std::vector< std::string > result;
  
  {
    try {
      result = libsumo::Simulation::getParkingStartingVehiclesIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_getParkingEndingVehiclesNumber___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::Simulation::getParkingEndingVehiclesNumber();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_getParkingEndingVehiclesIDList___() {
  void * jresult ;
  std::vector< std::string > result;
  
  {
    try {
      result = libsumo::Simulation::getParkingEndingVehiclesIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_getStopStartingVehiclesNumber___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::Simulation::getStopStartingVehiclesNumber();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_getStopStartingVehiclesIDList___() {
  void * jresult ;
  std::vector< std::string > result;
  
  {
    try {
      result = libsumo::Simulation::getStopStartingVehiclesIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_getStopEndingVehiclesNumber___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::Simulation::getStopEndingVehiclesNumber();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_getStopEndingVehiclesIDList___() {
  void * jresult ;
  std::vector< std::string > result;
  
  {
    try {
      result = libsumo::Simulation::getStopEndingVehiclesIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_getCollidingVehiclesNumber___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::Simulation::getCollidingVehiclesNumber();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_getCollidingVehiclesIDList___() {
  void * jresult ;
  std::vector< std::string > result;
  
  {
    try {
      result = libsumo::Simulation::getCollidingVehiclesIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_getEmergencyStoppingVehiclesNumber___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::Simulation::getEmergencyStoppingVehiclesNumber();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_getEmergencyStoppingVehiclesIDList___() {
  void * jresult ;
  std::vector< std::string > result;
  
  {
    try {
      result = libsumo::Simulation::getEmergencyStoppingVehiclesIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_getStartingTeleportNumber___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::Simulation::getStartingTeleportNumber();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_getStartingTeleportIDList___() {
  void * jresult ;
  std::vector< std::string > result;
  
  {
    try {
      result = libsumo::Simulation::getStartingTeleportIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_getEndingTeleportNumber___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::Simulation::getEndingTeleportNumber();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_getEndingTeleportIDList___() {
  void * jresult ;
  std::vector< std::string > result;
  
  {
    try {
      result = libsumo::Simulation::getEndingTeleportIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_getDepartedPersonNumber___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::Simulation::getDepartedPersonNumber();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_getDepartedPersonIDList___() {
  void * jresult ;
  std::vector< std::string > result;
  
  {
    try {
      result = libsumo::Simulation::getDepartedPersonIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_getArrivedPersonNumber___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::Simulation::getArrivedPersonNumber();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_getArrivedPersonIDList___() {
  void * jresult ;
  std::vector< std::string > result;
  
  {
    try {
      result = libsumo::Simulation::getArrivedPersonIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_getBusStopIDList___() {
  void * jresult ;
  std::vector< std::string > result;
  
  {
    try {
      result = libsumo::Simulation::getBusStopIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_getBusStopWaiting___(const char * jarg1) {
  int jresult ;
  std::string *arg1 = 0 ;
  int result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (int)libsumo::Simulation::getBusStopWaiting((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_getBusStopWaitingIDList___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Simulation::getBusStopWaitingIDList((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_getPendingVehicles___() {
  void * jresult ;
  std::vector< std::string > result;
  
  {
    try {
      result = libsumo::Simulation::getPendingVehicles();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_getCollisions___() {
  void * jresult ;
  std::vector< libsumo::TraCICollision > result;
  
  {
    try {
      result = libsumo::Simulation::getCollisions();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< libsumo::TraCICollision >(result); 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_getScale___() {
  double jresult ;
  double result;
  
  {
    try {
      result = (double)libsumo::Simulation::getScale();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_getDeltaT___() {
  double jresult ;
  double result;
  
  {
    try {
      result = (double)libsumo::Simulation::getDeltaT();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_getNetBoundary___() {
  void * jresult ;
  libsumo::TraCIPositionVector result;
  
  {
    try {
      result = libsumo::Simulation::getNetBoundary();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr<  libsumo::TraCIPositionVector >(new libsumo::TraCIPositionVector(result)); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_getMinExpectedNumber___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::Simulation::getMinExpectedNumber();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_convert2D__SWIG_0___(const char * jarg1, double jarg2, int jarg3, unsigned int jarg4) {
  void * jresult ;
  std::string *arg1 = 0 ;
  double arg2 ;
  int arg3 ;
  bool arg4 ;
  libsumo::TraCIPosition result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = jarg4 ? true : false; 
  {
    try {
      result = libsumo::Simulation::convert2D((std::string const &)*arg1,arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr<  libsumo::TraCIPosition >(new libsumo::TraCIPosition(result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_convert2D__SWIG_1___(const char * jarg1, double jarg2, int jarg3) {
  void * jresult ;
  std::string *arg1 = 0 ;
  double arg2 ;
  int arg3 ;
  libsumo::TraCIPosition result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      result = libsumo::Simulation::convert2D((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr<  libsumo::TraCIPosition >(new libsumo::TraCIPosition(result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_convert2D__SWIG_2___(const char * jarg1, double jarg2) {
  void * jresult ;
  std::string *arg1 = 0 ;
  double arg2 ;
  libsumo::TraCIPosition result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      result = libsumo::Simulation::convert2D((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr<  libsumo::TraCIPosition >(new libsumo::TraCIPosition(result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_convert3D__SWIG_0___(const char * jarg1, double jarg2, int jarg3, unsigned int jarg4) {
  void * jresult ;
  std::string *arg1 = 0 ;
  double arg2 ;
  int arg3 ;
  bool arg4 ;
  libsumo::TraCIPosition result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = jarg4 ? true : false; 
  {
    try {
      result = libsumo::Simulation::convert3D((std::string const &)*arg1,arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr<  libsumo::TraCIPosition >(new libsumo::TraCIPosition(result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_convert3D__SWIG_1___(const char * jarg1, double jarg2, int jarg3) {
  void * jresult ;
  std::string *arg1 = 0 ;
  double arg2 ;
  int arg3 ;
  libsumo::TraCIPosition result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      result = libsumo::Simulation::convert3D((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr<  libsumo::TraCIPosition >(new libsumo::TraCIPosition(result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_convert3D__SWIG_2___(const char * jarg1, double jarg2) {
  void * jresult ;
  std::string *arg1 = 0 ;
  double arg2 ;
  libsumo::TraCIPosition result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      result = libsumo::Simulation::convert3D((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr<  libsumo::TraCIPosition >(new libsumo::TraCIPosition(result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_convertRoad__SWIG_0___(double jarg1, double jarg2, unsigned int jarg3, const char * jarg4) {
  void * jresult ;
  double arg1 ;
  double arg2 ;
  bool arg3 ;
  std::string *arg4 = 0 ;
  libsumo::TraCIRoadPosition result;
  
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = jarg3 ? true : false; 
  if (!jarg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg4_str(jarg4);
  arg4 = &arg4_str; 
  {
    try {
      result = libsumo::Simulation::convertRoad(arg1,arg2,arg3,(std::string const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr<  libsumo::TraCIRoadPosition >(new libsumo::TraCIRoadPosition(result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_convertRoad__SWIG_1___(double jarg1, double jarg2, unsigned int jarg3) {
  void * jresult ;
  double arg1 ;
  double arg2 ;
  bool arg3 ;
  libsumo::TraCIRoadPosition result;
  
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = jarg3 ? true : false; 
  {
    try {
      result = libsumo::Simulation::convertRoad(arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr<  libsumo::TraCIRoadPosition >(new libsumo::TraCIRoadPosition(result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_convertRoad__SWIG_2___(double jarg1, double jarg2) {
  void * jresult ;
  double arg1 ;
  double arg2 ;
  libsumo::TraCIRoadPosition result;
  
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  {
    try {
      result = libsumo::Simulation::convertRoad(arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr<  libsumo::TraCIRoadPosition >(new libsumo::TraCIRoadPosition(result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_convertGeo__SWIG_0___(double jarg1, double jarg2, unsigned int jarg3) {
  void * jresult ;
  double arg1 ;
  double arg2 ;
  bool arg3 ;
  libsumo::TraCIPosition result;
  
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = jarg3 ? true : false; 
  {
    try {
      result = libsumo::Simulation::convertGeo(arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr<  libsumo::TraCIPosition >(new libsumo::TraCIPosition(result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_convertGeo__SWIG_1___(double jarg1, double jarg2) {
  void * jresult ;
  double arg1 ;
  double arg2 ;
  libsumo::TraCIPosition result;
  
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  {
    try {
      result = libsumo::Simulation::convertGeo(arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr<  libsumo::TraCIPosition >(new libsumo::TraCIPosition(result)); 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_getDistance2D__SWIG_0___(double jarg1, double jarg2, double jarg3, double jarg4, unsigned int jarg5, unsigned int jarg6) {
  double jresult ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  bool arg5 ;
  bool arg6 ;
  double result;
  
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = jarg5 ? true : false; 
  arg6 = jarg6 ? true : false; 
  {
    try {
      result = (double)libsumo::Simulation::getDistance2D(arg1,arg2,arg3,arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_getDistance2D__SWIG_1___(double jarg1, double jarg2, double jarg3, double jarg4, unsigned int jarg5) {
  double jresult ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  bool arg5 ;
  double result;
  
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = jarg5 ? true : false; 
  {
    try {
      result = (double)libsumo::Simulation::getDistance2D(arg1,arg2,arg3,arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_getDistance2D__SWIG_2___(double jarg1, double jarg2, double jarg3, double jarg4) {
  double jresult ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double result;
  
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      result = (double)libsumo::Simulation::getDistance2D(arg1,arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_getDistanceRoad__SWIG_0___(const char * jarg1, double jarg2, const char * jarg3, double jarg4, unsigned int jarg5) {
  double jresult ;
  std::string *arg1 = 0 ;
  double arg2 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  bool arg5 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  arg4 = (double)jarg4; 
  arg5 = jarg5 ? true : false; 
  {
    try {
      result = (double)libsumo::Simulation::getDistanceRoad((std::string const &)*arg1,arg2,(std::string const &)*arg3,arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_getDistanceRoad__SWIG_1___(const char * jarg1, double jarg2, const char * jarg3, double jarg4) {
  double jresult ;
  std::string *arg1 = 0 ;
  double arg2 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  arg4 = (double)jarg4; 
  {
    try {
      result = (double)libsumo::Simulation::getDistanceRoad((std::string const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_findRoute__SWIG_0___(const char * jarg1, const char * jarg2, const char * jarg3, double jarg4, int jarg5) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  libsumo::TraCIStage result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  arg4 = (double)jarg4; 
  arg5 = (int)jarg5; 
  {
    try {
      result = libsumo::Simulation::findRoute((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr<  libsumo::TraCIStage >(new libsumo::TraCIStage(result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_findRoute__SWIG_1___(const char * jarg1, const char * jarg2, const char * jarg3, double jarg4) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  libsumo::TraCIStage result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  arg4 = (double)jarg4; 
  {
    try {
      result = libsumo::Simulation::findRoute((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr<  libsumo::TraCIStage >(new libsumo::TraCIStage(result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_findRoute__SWIG_2___(const char * jarg1, const char * jarg2, const char * jarg3) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  libsumo::TraCIStage result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  {
    try {
      result = libsumo::Simulation::findRoute((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr<  libsumo::TraCIStage >(new libsumo::TraCIStage(result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_findRoute__SWIG_3___(const char * jarg1, const char * jarg2) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  libsumo::TraCIStage result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = libsumo::Simulation::findRoute((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr<  libsumo::TraCIStage >(new libsumo::TraCIStage(result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_findIntermodalRoute__SWIG_0___(const char * jarg1, const char * jarg2, const char * jarg3, double jarg4, int jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10, const char * jarg11, const char * jarg12, const char * jarg13) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  double arg9 ;
  double arg10 ;
  std::string *arg11 = 0 ;
  std::string *arg12 = 0 ;
  std::string *arg13 = 0 ;
  std::vector< libsumo::TraCIStage > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  arg4 = (double)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  arg8 = (double)jarg8; 
  arg9 = (double)jarg9; 
  arg10 = (double)jarg10; 
  if (!jarg11) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg11_str(jarg11);
  arg11 = &arg11_str; 
  if (!jarg12) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg12_str(jarg12);
  arg12 = &arg12_str; 
  if (!jarg13) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg13_str(jarg13);
  arg13 = &arg13_str; 
  {
    try {
      result = libsumo::Simulation::findIntermodalRoute((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,(std::string const &)*arg11,(std::string const &)*arg12,(std::string const &)*arg13);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< libsumo::TraCIStage >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_findIntermodalRoute__SWIG_1___(const char * jarg1, const char * jarg2, const char * jarg3, double jarg4, int jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10, const char * jarg11, const char * jarg12) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  double arg9 ;
  double arg10 ;
  std::string *arg11 = 0 ;
  std::string *arg12 = 0 ;
  std::vector< libsumo::TraCIStage > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  arg4 = (double)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  arg8 = (double)jarg8; 
  arg9 = (double)jarg9; 
  arg10 = (double)jarg10; 
  if (!jarg11) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg11_str(jarg11);
  arg11 = &arg11_str; 
  if (!jarg12) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg12_str(jarg12);
  arg12 = &arg12_str; 
  {
    try {
      result = libsumo::Simulation::findIntermodalRoute((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,(std::string const &)*arg11,(std::string const &)*arg12);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< libsumo::TraCIStage >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_findIntermodalRoute__SWIG_2___(const char * jarg1, const char * jarg2, const char * jarg3, double jarg4, int jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10, const char * jarg11) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  double arg9 ;
  double arg10 ;
  std::string *arg11 = 0 ;
  std::vector< libsumo::TraCIStage > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  arg4 = (double)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  arg8 = (double)jarg8; 
  arg9 = (double)jarg9; 
  arg10 = (double)jarg10; 
  if (!jarg11) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg11_str(jarg11);
  arg11 = &arg11_str; 
  {
    try {
      result = libsumo::Simulation::findIntermodalRoute((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,(std::string const &)*arg11);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< libsumo::TraCIStage >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_findIntermodalRoute__SWIG_3___(const char * jarg1, const char * jarg2, const char * jarg3, double jarg4, int jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  double arg9 ;
  double arg10 ;
  std::vector< libsumo::TraCIStage > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  arg4 = (double)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  arg8 = (double)jarg8; 
  arg9 = (double)jarg9; 
  arg10 = (double)jarg10; 
  {
    try {
      result = libsumo::Simulation::findIntermodalRoute((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< libsumo::TraCIStage >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_findIntermodalRoute__SWIG_4___(const char * jarg1, const char * jarg2, const char * jarg3, double jarg4, int jarg5, double jarg6, double jarg7, double jarg8, double jarg9) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  double arg9 ;
  std::vector< libsumo::TraCIStage > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  arg4 = (double)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  arg8 = (double)jarg8; 
  arg9 = (double)jarg9; 
  {
    try {
      result = libsumo::Simulation::findIntermodalRoute((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,arg4,arg5,arg6,arg7,arg8,arg9);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< libsumo::TraCIStage >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_findIntermodalRoute__SWIG_5___(const char * jarg1, const char * jarg2, const char * jarg3, double jarg4, int jarg5, double jarg6, double jarg7, double jarg8) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  std::vector< libsumo::TraCIStage > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  arg4 = (double)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  arg8 = (double)jarg8; 
  {
    try {
      result = libsumo::Simulation::findIntermodalRoute((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,arg4,arg5,arg6,arg7,arg8);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< libsumo::TraCIStage >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_findIntermodalRoute__SWIG_6___(const char * jarg1, const char * jarg2, const char * jarg3, double jarg4, int jarg5, double jarg6, double jarg7) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  double arg6 ;
  double arg7 ;
  std::vector< libsumo::TraCIStage > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  arg4 = (double)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (double)jarg7; 
  {
    try {
      result = libsumo::Simulation::findIntermodalRoute((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,arg4,arg5,arg6,arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< libsumo::TraCIStage >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_findIntermodalRoute__SWIG_7___(const char * jarg1, const char * jarg2, const char * jarg3, double jarg4, int jarg5, double jarg6) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  double arg6 ;
  std::vector< libsumo::TraCIStage > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  arg4 = (double)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      result = libsumo::Simulation::findIntermodalRoute((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< libsumo::TraCIStage >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_findIntermodalRoute__SWIG_8___(const char * jarg1, const char * jarg2, const char * jarg3, double jarg4, int jarg5) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  std::vector< libsumo::TraCIStage > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  arg4 = (double)jarg4; 
  arg5 = (int)jarg5; 
  {
    try {
      result = libsumo::Simulation::findIntermodalRoute((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< libsumo::TraCIStage >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_findIntermodalRoute__SWIG_9___(const char * jarg1, const char * jarg2, const char * jarg3, double jarg4) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  std::vector< libsumo::TraCIStage > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  arg4 = (double)jarg4; 
  {
    try {
      result = libsumo::Simulation::findIntermodalRoute((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< libsumo::TraCIStage >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_findIntermodalRoute__SWIG_10___(const char * jarg1, const char * jarg2, const char * jarg3) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::vector< libsumo::TraCIStage > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  {
    try {
      result = libsumo::Simulation::findIntermodalRoute((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< libsumo::TraCIStage >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_findIntermodalRoute__SWIG_11___(const char * jarg1, const char * jarg2) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::vector< libsumo::TraCIStage > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = libsumo::Simulation::findIntermodalRoute((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< libsumo::TraCIStage >(result); 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_getParameter___(const char * jarg1, const char * jarg2) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = libsumo::Simulation::getParameter((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_getParameterWithKey___(const char * jarg1, const char * jarg2) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::pair< std::string,std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = libsumo::Simulation::getParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::pair< std::string,std::string >(result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_setParameter___(const char * jarg1, const char * jarg2, const char * jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  {
    try {
      libsumo::Simulation::setParameter((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_setScale___(double jarg1) {
  double arg1 ;
  
  arg1 = (double)jarg1; 
  {
    try {
      libsumo::Simulation::setScale(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_clearPending__SWIG_0___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::Simulation::clearPending((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_clearPending__SWIG_1___() {
  {
    try {
      libsumo::Simulation::clearPending();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_saveState___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::Simulation::saveState((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_loadState___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Simulation::loadState((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_writeMessage___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::Simulation::writeMessage((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_subscribe__SWIG_0___(const char * jarg1, void * jarg2, double jarg3, double jarg4, void * jarg5) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  libsumo::TraCIResults *arg5 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (libsumo::TraCIResults *)jarg5;
  if (!arg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIResults const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Simulation::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4,(std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > > const &)*arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_subscribe__SWIG_1___(const char * jarg1, void * jarg2, double jarg3, double jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Simulation::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_subscribe__SWIG_2___(const char * jarg1, void * jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Simulation::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_subscribe__SWIG_3___(const char * jarg1, void * jarg2) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Simulation::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_subscribe__SWIG_4___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::Simulation::subscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_unsubscribe___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::Simulation::unsubscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_subscribeContext__SWIG_0___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5, double jarg6, void * jarg7) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  libsumo::TraCIResults *arg7 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (libsumo::TraCIResults *)jarg7;
  if (!arg7) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIResults const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Simulation::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6,(std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > > const &)*arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_subscribeContext__SWIG_1___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5, double jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::Simulation::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_subscribeContext__SWIG_2___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::Simulation::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_subscribeContext__SWIG_3___(const char * jarg1, int jarg2, double jarg3, void * jarg4) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Simulation::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_subscribeContext__SWIG_4___(const char * jarg1, int jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Simulation::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_unsubscribeContext___(const char * jarg1, int jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Simulation::unsubscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_getAllSubscriptionResults___() {
  void * jresult ;
  libsumo::SubscriptionResults result;
  
  {
    try {
      result = libsumo::Simulation::getAllSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::SubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_getSubscriptionResults__SWIG_0___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::TraCIResults result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Simulation::getSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::TraCIResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_getAllContextSubscriptionResults___() {
  void * jresult ;
  libsumo::ContextSubscriptionResults result;
  
  {
    try {
      result = libsumo::Simulation::getAllContextSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::ContextSubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_getContextSubscriptionResults___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::SubscriptionResults result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Simulation::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::SubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_subscribeParameterWithKey__SWIG_0___(const char * jarg1, const char * jarg2, double jarg3, double jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Simulation::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_subscribeParameterWithKey__SWIG_1___(const char * jarg1, const char * jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Simulation::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_subscribeParameterWithKey__SWIG_2___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::Simulation::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_DOMAIN_ID_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::Simulation::DOMAIN_ID;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_domainID___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::Simulation::domainID();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_subscribe__SWIG_5___(void * jarg1, double jarg2, double jarg3, void * jarg4) {
  std::vector< int > *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  libsumo::TraCIResults *arg4 = 0 ;
  
  arg1 = (std::vector< int > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (libsumo::TraCIResults *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIResults const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Simulation::subscribe((std::vector< int > const &)*arg1,arg2,arg3,(std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > > const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_subscribe__SWIG_6___(void * jarg1, double jarg2, double jarg3) {
  std::vector< int > *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  
  arg1 = (std::vector< int > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Simulation::subscribe((std::vector< int > const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_subscribe__SWIG_7___(void * jarg1, double jarg2) {
  std::vector< int > *arg1 = 0 ;
  double arg2 ;
  
  arg1 = (std::vector< int > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Simulation::subscribe((std::vector< int > const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_subscribe__SWIG_8___(void * jarg1) {
  std::vector< int > *arg1 = 0 ;
  
  arg1 = (std::vector< int > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Simulation::subscribe((std::vector< int > const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_subscribe__SWIG_9___() {
  {
    try {
      libsumo::Simulation::subscribe();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Simulation_getSubscriptionResults__SWIG_1___() {
  void * jresult ;
  libsumo::TraCIResults result;
  
  {
    try {
      result = libsumo::Simulation::getSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::TraCIResults(result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_Simulation___(void * jarg1) {
  libsumo::Simulation *arg1 = (libsumo::Simulation *) 0 ;
  
  arg1 = (libsumo::Simulation *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TRACI_VERSION_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::TRACI_VERSION;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_GETVERSION_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_GETVERSION;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_LOAD_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_LOAD;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_EXECUTEMOVE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_EXECUTEMOVE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SIMSTEP_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SIMSTEP;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SETORDER_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SETORDER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_STOP_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_STOP;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_REROUTE_TO_PARKING_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_REROUTE_TO_PARKING;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_RESUME_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_RESUME;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_CHANGELANE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_CHANGELANE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SLOWDOWN_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SLOWDOWN;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_CHANGESUBLANE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_CHANGESUBLANE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_OPENGAP_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_OPENGAP;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_REPLACE_STOP_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_REPLACE_STOP;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_INSERT_STOP_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_INSERT_STOP;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_TAXI_FLEET_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_TAXI_FLEET;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_TAXI_DISPATCH_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_TAXI_DISPATCH;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_CHANGETARGET_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_CHANGETARGET;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_CLOSE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_CLOSE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_ADD_SUBSCRIPTION_FILTER_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_ADD_SUBSCRIPTION_FILTER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SUBSCRIBE_INDUCTIONLOOP_CONTEXT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SUBSCRIBE_INDUCTIONLOOP_CONTEXT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_SUBSCRIBE_INDUCTIONLOOP_CONTEXT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_INDUCTIONLOOP_CONTEXT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_GET_INDUCTIONLOOP_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_GET_INDUCTIONLOOP_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_GET_INDUCTIONLOOP_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_GET_INDUCTIONLOOP_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SET_INDUCTIONLOOP_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SET_INDUCTIONLOOP_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SUBSCRIBE_INDUCTIONLOOP_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SUBSCRIBE_INDUCTIONLOOP_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_SUBSCRIBE_INDUCTIONLOOP_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_INDUCTIONLOOP_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SUBSCRIBE_MULTIENTRYEXIT_CONTEXT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SUBSCRIBE_MULTIENTRYEXIT_CONTEXT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_SUBSCRIBE_MULTIENTRYEXIT_CONTEXT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_MULTIENTRYEXIT_CONTEXT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_GET_MULTIENTRYEXIT_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_GET_MULTIENTRYEXIT_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_GET_MULTIENTRYEXIT_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_GET_MULTIENTRYEXIT_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SET_MULTIENTRYEXIT_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SET_MULTIENTRYEXIT_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SUBSCRIBE_MULTIENTRYEXIT_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SUBSCRIBE_MULTIENTRYEXIT_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_SUBSCRIBE_MULTIENTRYEXIT_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_MULTIENTRYEXIT_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SUBSCRIBE_TL_CONTEXT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SUBSCRIBE_TL_CONTEXT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_SUBSCRIBE_TL_CONTEXT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_TL_CONTEXT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_GET_TL_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_GET_TL_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_GET_TL_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_GET_TL_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SET_TL_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SET_TL_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SUBSCRIBE_TL_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SUBSCRIBE_TL_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_SUBSCRIBE_TL_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_TL_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SUBSCRIBE_LANE_CONTEXT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SUBSCRIBE_LANE_CONTEXT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_SUBSCRIBE_LANE_CONTEXT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_LANE_CONTEXT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_GET_LANE_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_GET_LANE_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_GET_LANE_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_GET_LANE_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SET_LANE_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SET_LANE_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SUBSCRIBE_LANE_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SUBSCRIBE_LANE_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_SUBSCRIBE_LANE_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_LANE_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SUBSCRIBE_VEHICLE_CONTEXT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SUBSCRIBE_VEHICLE_CONTEXT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_SUBSCRIBE_VEHICLE_CONTEXT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_VEHICLE_CONTEXT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_GET_VEHICLE_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_GET_VEHICLE_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_GET_VEHICLE_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_GET_VEHICLE_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SET_VEHICLE_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SET_VEHICLE_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SUBSCRIBE_VEHICLE_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SUBSCRIBE_VEHICLE_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_SUBSCRIBE_VEHICLE_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_VEHICLE_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SUBSCRIBE_VEHICLETYPE_CONTEXT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SUBSCRIBE_VEHICLETYPE_CONTEXT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_SUBSCRIBE_VEHICLETYPE_CONTEXT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_VEHICLETYPE_CONTEXT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_GET_VEHICLETYPE_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_GET_VEHICLETYPE_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_GET_VEHICLETYPE_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_GET_VEHICLETYPE_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SET_VEHICLETYPE_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SET_VEHICLETYPE_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SUBSCRIBE_VEHICLETYPE_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SUBSCRIBE_VEHICLETYPE_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_SUBSCRIBE_VEHICLETYPE_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_VEHICLETYPE_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SUBSCRIBE_ROUTE_CONTEXT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SUBSCRIBE_ROUTE_CONTEXT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_SUBSCRIBE_ROUTE_CONTEXT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_ROUTE_CONTEXT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_GET_ROUTE_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_GET_ROUTE_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_GET_ROUTE_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_GET_ROUTE_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SET_ROUTE_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SET_ROUTE_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SUBSCRIBE_ROUTE_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SUBSCRIBE_ROUTE_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_SUBSCRIBE_ROUTE_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_ROUTE_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SUBSCRIBE_POI_CONTEXT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SUBSCRIBE_POI_CONTEXT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_SUBSCRIBE_POI_CONTEXT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_POI_CONTEXT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_GET_POI_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_GET_POI_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_GET_POI_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_GET_POI_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SET_POI_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SET_POI_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SUBSCRIBE_POI_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SUBSCRIBE_POI_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_SUBSCRIBE_POI_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_POI_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SUBSCRIBE_POLYGON_CONTEXT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SUBSCRIBE_POLYGON_CONTEXT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_SUBSCRIBE_POLYGON_CONTEXT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_POLYGON_CONTEXT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_GET_POLYGON_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_GET_POLYGON_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_GET_POLYGON_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_GET_POLYGON_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SET_POLYGON_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SET_POLYGON_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SUBSCRIBE_POLYGON_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SUBSCRIBE_POLYGON_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_SUBSCRIBE_POLYGON_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_POLYGON_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SUBSCRIBE_JUNCTION_CONTEXT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SUBSCRIBE_JUNCTION_CONTEXT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_SUBSCRIBE_JUNCTION_CONTEXT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_JUNCTION_CONTEXT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_GET_JUNCTION_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_GET_JUNCTION_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_GET_JUNCTION_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_GET_JUNCTION_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SET_JUNCTION_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SET_JUNCTION_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SUBSCRIBE_JUNCTION_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SUBSCRIBE_JUNCTION_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_SUBSCRIBE_JUNCTION_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_JUNCTION_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SUBSCRIBE_EDGE_CONTEXT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SUBSCRIBE_EDGE_CONTEXT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_SUBSCRIBE_EDGE_CONTEXT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_EDGE_CONTEXT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_GET_EDGE_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_GET_EDGE_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_GET_EDGE_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_GET_EDGE_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SET_EDGE_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SET_EDGE_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SUBSCRIBE_EDGE_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SUBSCRIBE_EDGE_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_SUBSCRIBE_EDGE_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_EDGE_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SUBSCRIBE_SIM_CONTEXT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SUBSCRIBE_SIM_CONTEXT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_SUBSCRIBE_SIM_CONTEXT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_SIM_CONTEXT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_GET_SIM_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_GET_SIM_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_GET_SIM_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_GET_SIM_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SET_SIM_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SET_SIM_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SUBSCRIBE_SIM_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SUBSCRIBE_SIM_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_SUBSCRIBE_SIM_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_SIM_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SUBSCRIBE_GUI_CONTEXT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SUBSCRIBE_GUI_CONTEXT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_SUBSCRIBE_GUI_CONTEXT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_GUI_CONTEXT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_GET_GUI_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_GET_GUI_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_GET_GUI_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_GET_GUI_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SET_GUI_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SET_GUI_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SUBSCRIBE_GUI_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SUBSCRIBE_GUI_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_SUBSCRIBE_GUI_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_GUI_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SUBSCRIBE_LANEAREA_CONTEXT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SUBSCRIBE_LANEAREA_CONTEXT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_SUBSCRIBE_LANEAREA_CONTEXT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_LANEAREA_CONTEXT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_GET_LANEAREA_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_GET_LANEAREA_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_GET_LANEAREA_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_GET_LANEAREA_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SET_LANEAREA_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SET_LANEAREA_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SUBSCRIBE_LANEAREA_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SUBSCRIBE_LANEAREA_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_SUBSCRIBE_LANEAREA_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_LANEAREA_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SUBSCRIBE_PERSON_CONTEXT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SUBSCRIBE_PERSON_CONTEXT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_SUBSCRIBE_PERSON_CONTEXT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_PERSON_CONTEXT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_GET_PERSON_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_GET_PERSON_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_GET_PERSON_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_GET_PERSON_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SET_PERSON_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SET_PERSON_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SUBSCRIBE_PERSON_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SUBSCRIBE_PERSON_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_SUBSCRIBE_PERSON_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_PERSON_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SUBSCRIBE_BUSSTOP_CONTEXT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SUBSCRIBE_BUSSTOP_CONTEXT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_SUBSCRIBE_BUSSTOP_CONTEXT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_BUSSTOP_CONTEXT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_GET_BUSSTOP_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_GET_BUSSTOP_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_GET_BUSSTOP_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_GET_BUSSTOP_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SET_BUSSTOP_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SET_BUSSTOP_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SUBSCRIBE_BUSSTOP_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SUBSCRIBE_BUSSTOP_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_SUBSCRIBE_BUSSTOP_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_BUSSTOP_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SUBSCRIBE_PARKINGAREA_CONTEXT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SUBSCRIBE_PARKINGAREA_CONTEXT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_SUBSCRIBE_PARKINGAREA_CONTEXT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_PARKINGAREA_CONTEXT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_GET_PARKINGAREA_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_GET_PARKINGAREA_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_GET_PARKINGAREA_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_GET_PARKINGAREA_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SET_PARKINGAREA_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SET_PARKINGAREA_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SUBSCRIBE_PARKINGAREA_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SUBSCRIBE_PARKINGAREA_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_SUBSCRIBE_PARKINGAREA_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_PARKINGAREA_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SUBSCRIBE_CHARGINGSTATION_CONTEXT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SUBSCRIBE_CHARGINGSTATION_CONTEXT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_SUBSCRIBE_CHARGINGSTATION_CONTEXT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_CHARGINGSTATION_CONTEXT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_GET_CHARGINGSTATION_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_GET_CHARGINGSTATION_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_GET_CHARGINGSTATION_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_GET_CHARGINGSTATION_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SET_CHARGINGSTATION_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SET_CHARGINGSTATION_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SUBSCRIBE_CHARGINGSTATION_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SUBSCRIBE_CHARGINGSTATION_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_SUBSCRIBE_CHARGINGSTATION_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_CHARGINGSTATION_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SUBSCRIBE_ROUTEPROBE_CONTEXT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SUBSCRIBE_ROUTEPROBE_CONTEXT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_SUBSCRIBE_ROUTEPROBE_CONTEXT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_ROUTEPROBE_CONTEXT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_GET_ROUTEPROBE_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_GET_ROUTEPROBE_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_GET_ROUTEPROBE_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_GET_ROUTEPROBE_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SET_ROUTEPROBE_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SET_ROUTEPROBE_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SUBSCRIBE_ROUTEPROBE_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SUBSCRIBE_ROUTEPROBE_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_SUBSCRIBE_ROUTEPROBE_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_ROUTEPROBE_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SUBSCRIBE_CALIBRATOR_CONTEXT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SUBSCRIBE_CALIBRATOR_CONTEXT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_SUBSCRIBE_CALIBRATOR_CONTEXT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_CALIBRATOR_CONTEXT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_GET_CALIBRATOR_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_GET_CALIBRATOR_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_GET_CALIBRATOR_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_GET_CALIBRATOR_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SET_CALIBRATOR_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SET_CALIBRATOR_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SUBSCRIBE_CALIBRATOR_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SUBSCRIBE_CALIBRATOR_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_SUBSCRIBE_CALIBRATOR_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_CALIBRATOR_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SUBSCRIBE_REROUTER_CONTEXT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SUBSCRIBE_REROUTER_CONTEXT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_SUBSCRIBE_REROUTER_CONTEXT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_REROUTER_CONTEXT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_GET_REROUTER_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_GET_REROUTER_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_GET_REROUTER_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_GET_REROUTER_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SET_REROUTER_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SET_REROUTER_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SUBSCRIBE_REROUTER_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SUBSCRIBE_REROUTER_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_SUBSCRIBE_REROUTER_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_REROUTER_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SUBSCRIBE_VARIABLESPEEDSIGN_CONTEXT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SUBSCRIBE_VARIABLESPEEDSIGN_CONTEXT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_SUBSCRIBE_VARIABLESPEEDSIGN_CONTEXT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_VARIABLESPEEDSIGN_CONTEXT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_GET_VARIABLESPEEDSIGN_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_GET_VARIABLESPEEDSIGN_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_GET_VARIABLESPEEDSIGN_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_GET_VARIABLESPEEDSIGN_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SET_VARIABLESPEEDSIGN_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SET_VARIABLESPEEDSIGN_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SUBSCRIBE_VARIABLESPEEDSIGN_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SUBSCRIBE_VARIABLESPEEDSIGN_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_SUBSCRIBE_VARIABLESPEEDSIGN_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_VARIABLESPEEDSIGN_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SUBSCRIBE_MEANDATA_CONTEXT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SUBSCRIBE_MEANDATA_CONTEXT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_SUBSCRIBE_MEANDATA_CONTEXT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_MEANDATA_CONTEXT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_GET_MEANDATA_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_GET_MEANDATA_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_GET_MEANDATA_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_GET_MEANDATA_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SET_MEANDATA_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SET_MEANDATA_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SUBSCRIBE_MEANDATA_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SUBSCRIBE_MEANDATA_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_SUBSCRIBE_MEANDATA_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_MEANDATA_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SUBSCRIBE_OVERHEADWIRE_CONTEXT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SUBSCRIBE_OVERHEADWIRE_CONTEXT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_SUBSCRIBE_OVERHEADWIRE_CONTEXT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_OVERHEADWIRE_CONTEXT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_GET_OVERHEADWIRE_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_GET_OVERHEADWIRE_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_GET_OVERHEADWIRE_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_GET_OVERHEADWIRE_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SET_OVERHEADWIRE_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SET_OVERHEADWIRE_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SUBSCRIBE_OVERHEADWIRE_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SUBSCRIBE_OVERHEADWIRE_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RESPONSE_SUBSCRIBE_OVERHEADWIRE_VARIABLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RESPONSE_SUBSCRIBE_OVERHEADWIRE_VARIABLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POSITION_LON_LAT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::POSITION_LON_LAT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POSITION_2D_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::POSITION_2D;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POSITION_LON_LAT_ALT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::POSITION_LON_LAT_ALT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POSITION_3D_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::POSITION_3D;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POSITION_ROADMAP_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::POSITION_ROADMAP;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TYPE_POLYGON_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::TYPE_POLYGON;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TYPE_UBYTE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::TYPE_UBYTE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TYPE_BYTE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::TYPE_BYTE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TYPE_INTEGER_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::TYPE_INTEGER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TYPE_DOUBLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::TYPE_DOUBLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TYPE_STRING_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::TYPE_STRING;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TYPE_STRINGLIST_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::TYPE_STRINGLIST;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TYPE_COMPOUND_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::TYPE_COMPOUND;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TYPE_DOUBLELIST_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::TYPE_DOUBLELIST;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TYPE_COLOR_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::TYPE_COLOR;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RTYPE_OK_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RTYPE_OK;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RTYPE_NOTIMPLEMENTED_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RTYPE_NOTIMPLEMENTED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RTYPE_ERR_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RTYPE_ERR;
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_INVALID_DOUBLE_VALUE_get___() {
  double jresult ;
  double result;
  
  result = (double)(double)libsumo::INVALID_DOUBLE_VALUE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_INVALID_INT_VALUE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::INVALID_INT_VALUE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MAX_ORDER_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::MAX_ORDER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_DEFAULT_NUM_RETRIES_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::DEFAULT_NUM_RETRIES;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_REQUEST_AIRDIST_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::REQUEST_AIRDIST;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_REQUEST_DRIVINGDIST_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::REQUEST_DRIVINGDIST;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_REMOVE_TELEPORT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::REMOVE_TELEPORT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_REMOVE_PARKING_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::REMOVE_PARKING;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_REMOVE_ARRIVED_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::REMOVE_ARRIVED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_REMOVE_VAPORIZED_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::REMOVE_VAPORIZED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_REMOVE_TELEPORT_ARRIVED_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::REMOVE_TELEPORT_ARRIVED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MOVE_AUTOMATIC_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::MOVE_AUTOMATIC;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MOVE_TELEPORT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::MOVE_TELEPORT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MOVE_NORMAL_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::MOVE_NORMAL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_STAGE_WAITING_FOR_DEPART_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::STAGE_WAITING_FOR_DEPART;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_STAGE_WAITING_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::STAGE_WAITING;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_STAGE_WALKING_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::STAGE_WALKING;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_STAGE_DRIVING_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::STAGE_DRIVING;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_STAGE_ACCESS_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::STAGE_ACCESS;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_STAGE_TRIP_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::STAGE_TRIP;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_STAGE_TRANSHIP_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::STAGE_TRANSHIP;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_STOP_DEFAULT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::STOP_DEFAULT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_STOP_PARKING_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::STOP_PARKING;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_STOP_TRIGGERED_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::STOP_TRIGGERED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_STOP_CONTAINER_TRIGGERED_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::STOP_CONTAINER_TRIGGERED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_STOP_BUS_STOP_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::STOP_BUS_STOP;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_STOP_CONTAINER_STOP_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::STOP_CONTAINER_STOP;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_STOP_CHARGING_STATION_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::STOP_CHARGING_STATION;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_STOP_PARKING_AREA_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::STOP_PARKING_AREA;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_STOP_OVERHEAD_WIRE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::STOP_OVERHEAD_WIRE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_DEPARTFLAG_TRIGGERED_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::DEPARTFLAG_TRIGGERED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_DEPARTFLAG_CONTAINER_TRIGGERED_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::DEPARTFLAG_CONTAINER_TRIGGERED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_DEPARTFLAG_NOW_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::DEPARTFLAG_NOW;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_DEPARTFLAG_SPLIT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::DEPARTFLAG_SPLIT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_DEPARTFLAG_BEGIN_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::DEPARTFLAG_BEGIN;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_DEPARTFLAG_SPEED_RANDOM_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::DEPARTFLAG_SPEED_RANDOM;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_DEPARTFLAG_SPEED_MAX_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::DEPARTFLAG_SPEED_MAX;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_DEPARTFLAG_LANE_RANDOM_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::DEPARTFLAG_LANE_RANDOM;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_DEPARTFLAG_LANE_FREE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::DEPARTFLAG_LANE_FREE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_DEPARTFLAG_LANE_ALLOWED_FREE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::DEPARTFLAG_LANE_ALLOWED_FREE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_DEPARTFLAG_LANE_BEST_FREE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::DEPARTFLAG_LANE_BEST_FREE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_DEPARTFLAG_LANE_FIRST_ALLOWED_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::DEPARTFLAG_LANE_FIRST_ALLOWED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_DEPARTFLAG_POS_RANDOM_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::DEPARTFLAG_POS_RANDOM;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_DEPARTFLAG_POS_FREE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::DEPARTFLAG_POS_FREE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_DEPARTFLAG_POS_BASE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::DEPARTFLAG_POS_BASE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_DEPARTFLAG_POS_LAST_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::DEPARTFLAG_POS_LAST;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_DEPARTFLAG_POS_RANDOM_FREE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::DEPARTFLAG_POS_RANDOM_FREE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ARRIVALFLAG_LANE_CURRENT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::ARRIVALFLAG_LANE_CURRENT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ARRIVALFLAG_SPEED_CURRENT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::ARRIVALFLAG_SPEED_CURRENT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ARRIVALFLAG_POS_RANDOM_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::ARRIVALFLAG_POS_RANDOM;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ARRIVALFLAG_POS_MAX_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::ARRIVALFLAG_POS_MAX;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ROUTING_MODE_DEFAULT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::ROUTING_MODE_DEFAULT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ROUTING_MODE_AGGREGATED_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::ROUTING_MODE_AGGREGATED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ROUTING_MODE_EFFORT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::ROUTING_MODE_EFFORT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ROUTING_MODE_COMBINED_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::ROUTING_MODE_COMBINED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ROUTING_MODE_AGGREGATED_CUSTOM_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::ROUTING_MODE_AGGREGATED_CUSTOM;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ROUTING_MODE_IGNORE_TRANSIENT_PERMISSIONS_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::ROUTING_MODE_IGNORE_TRANSIENT_PERMISSIONS;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TRAFFICLIGHT_TYPE_STATIC_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::TRAFFICLIGHT_TYPE_STATIC;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TRAFFICLIGHT_TYPE_ACTUATED_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::TRAFFICLIGHT_TYPE_ACTUATED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TRAFFICLIGHT_TYPE_NEMA_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::TRAFFICLIGHT_TYPE_NEMA;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TRAFFICLIGHT_TYPE_DELAYBASED_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::TRAFFICLIGHT_TYPE_DELAYBASED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LANECHANGE_LEFT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::LANECHANGE_LEFT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LANECHANGE_RIGHT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::LANECHANGE_RIGHT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_FILTER_TYPE_NONE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::FILTER_TYPE_NONE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_FILTER_TYPE_LANES_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::FILTER_TYPE_LANES;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_FILTER_TYPE_NOOPPOSITE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::FILTER_TYPE_NOOPPOSITE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_FILTER_TYPE_DOWNSTREAM_DIST_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::FILTER_TYPE_DOWNSTREAM_DIST;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_FILTER_TYPE_UPSTREAM_DIST_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::FILTER_TYPE_UPSTREAM_DIST;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_FILTER_TYPE_LEAD_FOLLOW_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::FILTER_TYPE_LEAD_FOLLOW;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_FILTER_TYPE_TURN_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::FILTER_TYPE_TURN;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_FILTER_TYPE_VCLASS_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::FILTER_TYPE_VCLASS;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_FILTER_TYPE_VTYPE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::FILTER_TYPE_VTYPE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_FILTER_TYPE_FIELD_OF_VISION_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::FILTER_TYPE_FIELD_OF_VISION;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_FILTER_TYPE_LATERAL_DIST_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::FILTER_TYPE_LATERAL_DIST;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TRACI_ID_LIST_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::TRACI_ID_LIST;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ID_COUNT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::ID_COUNT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_AUTOMATIC_VARIABLES_SUBSCRIPTION_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::AUTOMATIC_VARIABLES_SUBSCRIPTION;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_AUTOMATIC_CONTEXT_SUBSCRIPTION_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::AUTOMATIC_CONTEXT_SUBSCRIPTION;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_GENERIC_ATTRIBUTE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::GENERIC_ATTRIBUTE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LAST_STEP_VEHICLE_NUMBER_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::LAST_STEP_VEHICLE_NUMBER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LAST_STEP_MEAN_SPEED_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::LAST_STEP_MEAN_SPEED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LAST_STEP_VEHICLE_ID_LIST_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::LAST_STEP_VEHICLE_ID_LIST;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LAST_STEP_OCCUPANCY_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::LAST_STEP_OCCUPANCY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LAST_STEP_VEHICLE_HALTING_NUMBER_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::LAST_STEP_VEHICLE_HALTING_NUMBER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_FROM_JUNCTION_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::FROM_JUNCTION;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TO_JUNCTION_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::TO_JUNCTION;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_INCOMING_EDGES_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::INCOMING_EDGES;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_OUTGOING_EDGES_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::OUTGOING_EDGES;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_BIDI_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_BIDI;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LAST_STEP_LENGTH_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::LAST_STEP_LENGTH;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LAST_STEP_TIME_SINCE_DETECTION_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::LAST_STEP_TIME_SINCE_DETECTION;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LAST_STEP_VEHICLE_DATA_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::LAST_STEP_VEHICLE_DATA;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_INTERVAL_OCCUPANCY_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_INTERVAL_OCCUPANCY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_INTERVAL_SPEED_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_INTERVAL_SPEED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_INTERVAL_NUMBER_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_INTERVAL_NUMBER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_INTERVAL_IDS_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_INTERVAL_IDS;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_INTERVAL_TIMELOSS_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_INTERVAL_TIMELOSS;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_LAST_INTERVAL_OCCUPANCY_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_LAST_INTERVAL_OCCUPANCY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_LAST_INTERVAL_SPEED_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_LAST_INTERVAL_SPEED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_LAST_INTERVAL_NUMBER_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_LAST_INTERVAL_NUMBER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_LAST_INTERVAL_IDS_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_LAST_INTERVAL_IDS;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_JAM_LENGTH_VEHICLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::JAM_LENGTH_VEHICLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_JAM_LENGTH_METERS_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::JAM_LENGTH_METERS;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_INTERVAL_MAX_JAM_LENGTH_METERS_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_INTERVAL_MAX_JAM_LENGTH_METERS;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_LAST_INTERVAL_MAX_JAM_LENGTH_METERS_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_LAST_INTERVAL_MAX_JAM_LENGTH_METERS;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_LAST_INTERVAL_TRAVELTIME_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_LAST_INTERVAL_TRAVELTIME;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_LAST_INTERVAL_MEAN_HALTING_NUMBER_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_LAST_INTERVAL_MEAN_HALTING_NUMBER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_LAST_INTERVAL_VEHICLE_NUMBER_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_LAST_INTERVAL_VEHICLE_NUMBER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_LAST_INTERVAL_TIMELOSS_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_LAST_INTERVAL_TIMELOSS;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_VIRTUAL_DETECTION_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_VIRTUAL_DETECTION;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LAST_STEP_PERSON_ID_LIST_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::LAST_STEP_PERSON_ID_LIST;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_NAME_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_NAME;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_FOLLOW_SPEED_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_FOLLOW_SPEED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_STOP_SPEED_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_STOP_SPEED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_SECURE_GAP_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_SECURE_GAP;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_STOP_DELAY_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_STOP_DELAY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_STOP_ARRIVALDELAY_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_STOP_ARRIVALDELAY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_TIMELOSS_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_TIMELOSS;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_BEGIN_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_BEGIN;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_END_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_END;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_VTYPES_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_VTYPES;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_VEHSPERHOUR_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_VEHSPERHOUR;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_PASSED_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_PASSED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_INSERTED_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_INSERTED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_REMOVED_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_REMOVED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_ROUTE_PROBE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_ROUTE_PROBE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SET_FLOW_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SET_FLOW;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TL_RED_YELLOW_GREEN_STATE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::TL_RED_YELLOW_GREEN_STATE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TL_PHASE_INDEX_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::TL_PHASE_INDEX;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TL_PROGRAM_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::TL_PROGRAM;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TL_PHASE_DURATION_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::TL_PHASE_DURATION;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TL_BLOCKING_VEHICLES_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::TL_BLOCKING_VEHICLES;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TL_CONTROLLED_LANES_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::TL_CONTROLLED_LANES;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TL_CONTROLLED_LINKS_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::TL_CONTROLLED_LINKS;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TL_CURRENT_PHASE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::TL_CURRENT_PHASE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TL_CURRENT_PROGRAM_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::TL_CURRENT_PROGRAM;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TL_RIVAL_VEHICLES_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::TL_RIVAL_VEHICLES;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TL_PRIORITY_VEHICLES_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::TL_PRIORITY_VEHICLES;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TL_CONTROLLED_JUNCTIONS_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::TL_CONTROLLED_JUNCTIONS;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TL_COMPLETE_DEFINITION_RYG_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::TL_COMPLETE_DEFINITION_RYG;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TL_COMPLETE_PROGRAM_RYG_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::TL_COMPLETE_PROGRAM_RYG;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TL_NEXT_SWITCH_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::TL_NEXT_SWITCH;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TL_CONSTRAINT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::TL_CONSTRAINT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TL_CONSTRAINT_SWAP_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::TL_CONSTRAINT_SWAP;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TL_CONSTRAINT_BYFOE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::TL_CONSTRAINT_BYFOE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TL_CONSTRAINT_REMOVE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::TL_CONSTRAINT_REMOVE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TL_CONSTRAINT_UPDATE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::TL_CONSTRAINT_UPDATE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TL_CONSTRAINT_ADD_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::TL_CONSTRAINT_ADD;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TL_SPENT_DURATION_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::TL_SPENT_DURATION;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LANE_LINK_NUMBER_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::LANE_LINK_NUMBER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LANE_EDGE_ID_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::LANE_EDGE_ID;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LANE_LINKS_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::LANE_LINKS;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LANE_ALLOWED_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::LANE_ALLOWED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LANE_DISALLOWED_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::LANE_DISALLOWED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_LANE_CHANGES_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::LANE_CHANGES;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_FOES_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_FOES;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_SLOPE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_SLOPE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_SPEED_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_SPEED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_PREV_SPEED_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_PREV_SPEED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_FRICTION_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_FRICTION;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_SPEED_LAT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_SPEED_LAT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_MAXSPEED_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_MAXSPEED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_POSITION_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_POSITION;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_EXIT_POSITIONS_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_EXIT_POSITIONS;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_POSITION3D_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_POSITION3D;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_ANGLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_ANGLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_LENGTH_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_LENGTH;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_COLOR_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_COLOR;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_ACCEL_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_ACCEL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_DECEL_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_DECEL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_EMERGENCY_DECEL_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_EMERGENCY_DECEL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_APPARENT_DECEL_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_APPARENT_DECEL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_ACTIONSTEPLENGTH_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_ACTIONSTEPLENGTH;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_LASTACTIONTIME_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_LASTACTIONTIME;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_TAU_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_TAU;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_VEHICLECLASS_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_VEHICLECLASS;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_EMISSIONCLASS_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_EMISSIONCLASS;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_SHAPECLASS_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_SHAPECLASS;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_MINGAP_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_MINGAP;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_WIDTH_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_WIDTH;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_SHAPE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_SHAPE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_TYPE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_TYPE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_ROAD_ID_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_ROAD_ID;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_LANE_ID_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_LANE_ID;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_LANE_INDEX_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_LANE_INDEX;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_SEGMENT_ID_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_SEGMENT_ID;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_SEGMENT_INDEX_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_SEGMENT_INDEX;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_ROUTE_ID_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_ROUTE_ID;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_EDGES_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_EDGES;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_STOP_PARAMETER_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_STOP_PARAMETER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_LANES_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_LANES;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_EXIT_LANES_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_EXIT_LANES;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_UPDATE_BESTLANES_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_UPDATE_BESTLANES;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_FILL_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_FILL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_IMAGEFILE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_IMAGEFILE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_LANEPOSITION_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_LANEPOSITION;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_ROUTE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_ROUTE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_EDGE_TRAVELTIME_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_EDGE_TRAVELTIME;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_EDGE_EFFORT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_EDGE_EFFORT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_CURRENT_TRAVELTIME_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_CURRENT_TRAVELTIME;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_SIGNALS_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_SIGNALS;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_MOVE_TO_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_MOVE_TO;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_ADD_DYNAMICS_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_ADD_DYNAMICS;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_HIGHLIGHT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_HIGHLIGHT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_IMPERFECTION_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_IMPERFECTION;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_SPEED_FACTOR_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_SPEED_FACTOR;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_SPEED_DEVIATION_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_SPEED_DEVIATION;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_ROUTING_MODE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_ROUTING_MODE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_SPEED_WITHOUT_TRACI_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_SPEED_WITHOUT_TRACI;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_BEST_LANES_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_BEST_LANES;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_SPEEDSETMODE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_SPEEDSETMODE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MOVE_TO_XY_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::MOVE_TO_XY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_STOPSTATE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_STOPSTATE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_LANECHANGE_MODE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_LANECHANGE_MODE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_ALLOWED_SPEED_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_ALLOWED_SPEED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_LANEPOSITION_LAT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_LANEPOSITION_LAT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_LATALIGNMENT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_LATALIGNMENT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_MAXSPEED_LAT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_MAXSPEED_LAT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_MINGAP_LAT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_MINGAP_LAT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_HEIGHT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_HEIGHT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_MASS_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_MASS;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_LINE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_LINE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_VIA_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_VIA;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_NEIGHBORS_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_NEIGHBORS;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_CO2EMISSION_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_CO2EMISSION;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_COEMISSION_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_COEMISSION;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_HCEMISSION_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_HCEMISSION;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_PMXEMISSION_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_PMXEMISSION;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_NOXEMISSION_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_NOXEMISSION;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_FUELCONSUMPTION_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_FUELCONSUMPTION;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_NOISEEMISSION_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_NOISEEMISSION;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_PERSON_NUMBER_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_PERSON_NUMBER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_PERSON_CAPACITY_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_PERSON_CAPACITY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_DEPARTURE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_DEPARTURE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_DEPART_DELAY_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_DEPART_DELAY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_BOARDING_DURATION_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_BOARDING_DURATION;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_IMPATIENCE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_IMPATIENCE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_BUS_STOP_ID_LIST_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_BUS_STOP_ID_LIST;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_BUS_STOP_WAITING_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_BUS_STOP_WAITING;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_BUS_STOP_WAITING_IDS_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_BUS_STOP_WAITING_IDS;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_LEADER_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_LEADER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_FOLLOWER_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_FOLLOWER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_ROUTE_INDEX_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_ROUTE_INDEX;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_WAITING_TIME_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_WAITING_TIME;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_ACCUMULATED_WAITING_TIME_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_ACCUMULATED_WAITING_TIME;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_NEXT_TLS_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_NEXT_TLS;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_NEXT_STOPS_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_NEXT_STOPS;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_NEXT_STOPS2_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_NEXT_STOPS2;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_NEXT_LINKS_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_NEXT_LINKS;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_ACCELERATION_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_ACCELERATION;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_ARRIVALPOS_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_ARRIVALPOS;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_ARRIVALLANE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_ARRIVALLANE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_ARRIVALSPEED_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_ARRIVALSPEED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_MESSAGE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_MESSAGE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_TIME_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_TIME;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_TIME_STEP_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_TIME_STEP;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_ELECTRICITYCONSUMPTION_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_ELECTRICITYCONSUMPTION;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_LOADED_VEHICLES_NUMBER_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_LOADED_VEHICLES_NUMBER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_LOADED_VEHICLES_IDS_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_LOADED_VEHICLES_IDS;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_DEPARTED_VEHICLES_NUMBER_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_DEPARTED_VEHICLES_NUMBER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_DEPARTED_VEHICLES_IDS_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_DEPARTED_VEHICLES_IDS;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_TELEPORT_STARTING_VEHICLES_NUMBER_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_TELEPORT_STARTING_VEHICLES_NUMBER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_TELEPORT_STARTING_VEHICLES_IDS_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_TELEPORT_STARTING_VEHICLES_IDS;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_TELEPORT_ENDING_VEHICLES_NUMBER_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_TELEPORT_ENDING_VEHICLES_NUMBER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_TELEPORT_ENDING_VEHICLES_IDS_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_TELEPORT_ENDING_VEHICLES_IDS;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_ARRIVED_VEHICLES_NUMBER_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_ARRIVED_VEHICLES_NUMBER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_ARRIVED_VEHICLES_IDS_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_ARRIVED_VEHICLES_IDS;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_DELTA_T_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_DELTA_T;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_NET_BOUNDING_BOX_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_NET_BOUNDING_BOX;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_MIN_EXPECTED_VEHICLES_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_MIN_EXPECTED_VEHICLES;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_DEPARTED_PERSONS_NUMBER_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_DEPARTED_PERSONS_NUMBER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_DEPARTED_PERSONS_IDS_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_DEPARTED_PERSONS_IDS;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_ARRIVED_PERSONS_NUMBER_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_ARRIVED_PERSONS_NUMBER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_ARRIVED_PERSONS_IDS_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_ARRIVED_PERSONS_IDS;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_STOP_STARTING_VEHICLES_NUMBER_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_STOP_STARTING_VEHICLES_NUMBER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_STOP_STARTING_VEHICLES_IDS_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_STOP_STARTING_VEHICLES_IDS;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_STOP_ENDING_VEHICLES_NUMBER_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_STOP_ENDING_VEHICLES_NUMBER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_STOP_ENDING_VEHICLES_IDS_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_STOP_ENDING_VEHICLES_IDS;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_PARKING_STARTING_VEHICLES_NUMBER_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_PARKING_STARTING_VEHICLES_NUMBER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_PARKING_STARTING_VEHICLES_IDS_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_PARKING_STARTING_VEHICLES_IDS;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_PARKING_MANEUVERING_VEHICLES_NUMBER_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_PARKING_MANEUVERING_VEHICLES_NUMBER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_PARKING_MANEUVERING_VEHICLES_IDS_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_PARKING_MANEUVERING_VEHICLES_IDS;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_PARKING_ENDING_VEHICLES_NUMBER_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_PARKING_ENDING_VEHICLES_NUMBER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_PARKING_ENDING_VEHICLES_IDS_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_PARKING_ENDING_VEHICLES_IDS;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_COLLIDING_VEHICLES_NUMBER_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_COLLIDING_VEHICLES_NUMBER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_COLLIDING_VEHICLES_IDS_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_COLLIDING_VEHICLES_IDS;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_EMERGENCYSTOPPING_VEHICLES_NUMBER_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_EMERGENCYSTOPPING_VEHICLES_NUMBER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_EMERGENCYSTOPPING_VEHICLES_IDS_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_EMERGENCYSTOPPING_VEHICLES_IDS;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_SCALE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_SCALE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_CLEAR_PENDING_VEHICLES_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_CLEAR_PENDING_VEHICLES;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_PENDING_VEHICLES_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_PENDING_VEHICLES;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_OPTION_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_OPTION;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_SAVE_SIMSTATE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_SAVE_SIMSTATE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_LOAD_SIMSTATE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_LOAD_SIMSTATE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_COLLISIONS_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_COLLISIONS;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_LOADED_LIST_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_LOADED_LIST;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_TELEPORTING_LIST_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_TELEPORTING_LIST;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_PARAMETER_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_PARAMETER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_PARAMETER_WITH_KEY_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_PARAMETER_WITH_KEY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ADD_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::ADD;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_REMOVE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::REMOVE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_COPY_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::COPY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_POSITION_CONVERSION_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::POSITION_CONVERSION;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_DISTANCE_REQUEST_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::DISTANCE_REQUEST;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_DISTANCE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_DISTANCE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ADD_FULL_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::ADD_FULL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_FIND_ROUTE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::FIND_ROUTE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_FIND_INTERMODAL_ROUTE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::FIND_INTERMODAL_ROUTE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_REROUTE_TRAVELTIME_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_REROUTE_TRAVELTIME;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_CMD_REROUTE_EFFORT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::CMD_REROUTE_EFFORT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_ROUTE_VALID_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_ROUTE_VALID;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_STAGE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_STAGE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_NEXT_EDGE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_NEXT_EDGE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_STAGES_REMAINING_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_STAGES_REMAINING;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_VEHICLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_VEHICLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_APPEND_STAGE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::APPEND_STAGE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_REPLACE_STAGE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::REPLACE_STAGE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_REMOVE_STAGE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::REMOVE_STAGE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_TAXI_RESERVATIONS_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_TAXI_RESERVATIONS;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_SPLIT_TAXI_RESERVATIONS_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::SPLIT_TAXI_RESERVATIONS;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_SAMPLE_LAST_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_SAMPLE_LAST;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_SAMPLE_CURRENT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_SAMPLE_CURRENT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_VIEW_ZOOM_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_VIEW_ZOOM;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_VIEW_OFFSET_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_VIEW_OFFSET;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_VIEW_SCHEMA_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_VIEW_SCHEMA;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_VIEW_BOUNDARY_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_VIEW_BOUNDARY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_SELECT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_SELECT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_SCREENSHOT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_SCREENSHOT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_TRACK_VEHICLE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_TRACK_VEHICLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_HAS_VIEW_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_HAS_VIEW;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_CS_POWER_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_CS_POWER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_CS_EFFICIENCY_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_CS_EFFICIENCY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_CS_CHARGE_IN_TRANSIT_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_CS_CHARGE_IN_TRANSIT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_CS_CHARGE_DELAY_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_CS_CHARGE_DELAY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VAR_ACCESS_BADGE_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VAR_ACCESS_BADGE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_getRedYellowGreenState___(const char * jarg1) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::TrafficLight::getRedYellowGreenState((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_getAllProgramLogics___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::vector< libsumo::TraCILogic > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::TrafficLight::getAllProgramLogics((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< libsumo::TraCILogic >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_getControlledJunctions___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::TrafficLight::getControlledJunctions((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_getControlledLanes___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::TrafficLight::getControlledLanes((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_getControlledLinks___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::vector< std::vector< libsumo::TraCILink > > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::TrafficLight::getControlledLinks((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::vector< libsumo::TraCILink > >(result); 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_getProgram___(const char * jarg1) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::TrafficLight::getProgram((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_getPhase___(const char * jarg1) {
  int jresult ;
  std::string *arg1 = 0 ;
  int result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (int)libsumo::TrafficLight::getPhase((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_getPhaseName___(const char * jarg1) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::TrafficLight::getPhaseName((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_getPhaseDuration___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::TrafficLight::getPhaseDuration((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_getNextSwitch___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::TrafficLight::getNextSwitch((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_getSpentDuration___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::TrafficLight::getSpentDuration((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_getServedPersonCount___(const char * jarg1, int jarg2) {
  int jresult ;
  std::string *arg1 = 0 ;
  int arg2 ;
  int result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  {
    try {
      result = (int)libsumo::TrafficLight::getServedPersonCount((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_getBlockingVehicles___(const char * jarg1, int jarg2) {
  void * jresult ;
  std::string *arg1 = 0 ;
  int arg2 ;
  std::vector< std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  {
    try {
      result = libsumo::TrafficLight::getBlockingVehicles((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_getRivalVehicles___(const char * jarg1, int jarg2) {
  void * jresult ;
  std::string *arg1 = 0 ;
  int arg2 ;
  std::vector< std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  {
    try {
      result = libsumo::TrafficLight::getRivalVehicles((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_getPriorityVehicles___(const char * jarg1, int jarg2) {
  void * jresult ;
  std::string *arg1 = 0 ;
  int arg2 ;
  std::vector< std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  {
    try {
      result = libsumo::TrafficLight::getPriorityVehicles((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_getConstraints__SWIG_0___(const char * jarg1, const char * jarg2) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::vector< libsumo::TraCISignalConstraint > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = libsumo::TrafficLight::getConstraints((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< libsumo::TraCISignalConstraint >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_getConstraints__SWIG_1___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::vector< libsumo::TraCISignalConstraint > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::TrafficLight::getConstraints((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< libsumo::TraCISignalConstraint >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_getConstraintsByFoe__SWIG_0___(const char * jarg1, const char * jarg2) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::vector< libsumo::TraCISignalConstraint > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = libsumo::TrafficLight::getConstraintsByFoe((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< libsumo::TraCISignalConstraint >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_getConstraintsByFoe__SWIG_1___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::vector< libsumo::TraCISignalConstraint > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::TrafficLight::getConstraintsByFoe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< libsumo::TraCISignalConstraint >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_getIDList___() {
  void * jresult ;
  std::vector< std::string > result;
  
  {
    try {
      result = libsumo::TrafficLight::getIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_getIDCount___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::TrafficLight::getIDCount();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_getParameter___(const char * jarg1, const char * jarg2) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = libsumo::TrafficLight::getParameter((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_getParameterWithKey___(const char * jarg1, const char * jarg2) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::pair< std::string,std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = libsumo::TrafficLight::getParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::pair< std::string,std::string >(result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_setParameter___(const char * jarg1, const char * jarg2, const char * jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  {
    try {
      libsumo::TrafficLight::setParameter((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_subscribe__SWIG_0___(const char * jarg1, void * jarg2, double jarg3, double jarg4, void * jarg5) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  libsumo::TraCIResults *arg5 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (libsumo::TraCIResults *)jarg5;
  if (!arg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIResults const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::TrafficLight::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4,(std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > > const &)*arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_subscribe__SWIG_1___(const char * jarg1, void * jarg2, double jarg3, double jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::TrafficLight::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_subscribe__SWIG_2___(const char * jarg1, void * jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::TrafficLight::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_subscribe__SWIG_3___(const char * jarg1, void * jarg2) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::TrafficLight::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_subscribe__SWIG_4___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::TrafficLight::subscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_unsubscribe___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::TrafficLight::unsubscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_subscribeContext__SWIG_0___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5, double jarg6, void * jarg7) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  libsumo::TraCIResults *arg7 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (libsumo::TraCIResults *)jarg7;
  if (!arg7) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIResults const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::TrafficLight::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6,(std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > > const &)*arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_subscribeContext__SWIG_1___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5, double jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::TrafficLight::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_subscribeContext__SWIG_2___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::TrafficLight::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_subscribeContext__SWIG_3___(const char * jarg1, int jarg2, double jarg3, void * jarg4) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::TrafficLight::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_subscribeContext__SWIG_4___(const char * jarg1, int jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::TrafficLight::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_unsubscribeContext___(const char * jarg1, int jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::TrafficLight::unsubscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_getAllSubscriptionResults___() {
  void * jresult ;
  libsumo::SubscriptionResults result;
  
  {
    try {
      result = libsumo::TrafficLight::getAllSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::SubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_getSubscriptionResults___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::TraCIResults result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::TrafficLight::getSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::TraCIResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_getAllContextSubscriptionResults___() {
  void * jresult ;
  libsumo::ContextSubscriptionResults result;
  
  {
    try {
      result = libsumo::TrafficLight::getAllContextSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::ContextSubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_getContextSubscriptionResults___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::SubscriptionResults result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::TrafficLight::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::SubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_subscribeParameterWithKey__SWIG_0___(const char * jarg1, const char * jarg2, double jarg3, double jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::TrafficLight::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_subscribeParameterWithKey__SWIG_1___(const char * jarg1, const char * jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::TrafficLight::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_subscribeParameterWithKey__SWIG_2___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::TrafficLight::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_DOMAIN_ID_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::TrafficLight::DOMAIN_ID;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_domainID___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::TrafficLight::domainID();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_setRedYellowGreenState___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::TrafficLight::setRedYellowGreenState((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_setPhase___(const char * jarg1, int jarg2) {
  std::string *arg1 = 0 ;
  int arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  {
    try {
      libsumo::TrafficLight::setPhase((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_setPhaseName___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::TrafficLight::setPhaseName((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_setProgram___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::TrafficLight::setProgram((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_setPhaseDuration___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::TrafficLight::setPhaseDuration((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_setProgramLogic___(const char * jarg1, void * jarg2) {
  std::string *arg1 = 0 ;
  libsumo::TraCILogic *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  
  arg2 = (libsumo::TraCILogic *)(((std::shared_ptr< const libsumo::TraCILogic > *)jarg2) ? ((std::shared_ptr< const libsumo::TraCILogic > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCILogic const & reference is null", 0);
    return ;
  } 
  {
    try {
      libsumo::TrafficLight::setProgramLogic((std::string const &)*arg1,(libsumo::TraCILogic const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_addConstraint__SWIG_0___(const char * jarg1, const char * jarg2, const char * jarg3, const char * jarg4, int jarg5, int jarg6) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  int arg5 ;
  int arg6 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  if (!jarg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg4_str(jarg4);
  arg4 = &arg4_str; 
  arg5 = (int)jarg5; 
  arg6 = (int)jarg6; 
  {
    try {
      libsumo::TrafficLight::addConstraint((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_addConstraint__SWIG_1___(const char * jarg1, const char * jarg2, const char * jarg3, const char * jarg4, int jarg5) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  int arg5 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  if (!jarg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg4_str(jarg4);
  arg4 = &arg4_str; 
  arg5 = (int)jarg5; 
  {
    try {
      libsumo::TrafficLight::addConstraint((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_addConstraint__SWIG_2___(const char * jarg1, const char * jarg2, const char * jarg3, const char * jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  if (!jarg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg4_str(jarg4);
  arg4 = &arg4_str; 
  {
    try {
      libsumo::TrafficLight::addConstraint((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_swapConstraints___(const char * jarg1, const char * jarg2, const char * jarg3, const char * jarg4) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::vector< libsumo::TraCISignalConstraint > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  if (!jarg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg4_str(jarg4);
  arg4 = &arg4_str; 
  {
    try {
      result = libsumo::TrafficLight::swapConstraints((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< libsumo::TraCISignalConstraint >(result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_removeConstraints___(const char * jarg1, const char * jarg2, const char * jarg3, const char * jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  if (!jarg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg4_str(jarg4);
  arg4 = &arg4_str; 
  {
    try {
      libsumo::TrafficLight::removeConstraints((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_updateConstraints__SWIG_0___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  (&arg2)->assign(jarg2); 
  {
    try {
      libsumo::TrafficLight::updateConstraints((std::string const &)*arg1,SWIG_STD_MOVE(arg2));
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_updateConstraints__SWIG_1___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::TrafficLight::updateConstraints((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_getCompleteRedYellowGreenDefinition___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::vector< libsumo::TraCILogic > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::TrafficLight::getCompleteRedYellowGreenDefinition((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< libsumo::TraCILogic >(result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_setCompleteRedYellowGreenDefinition___(const char * jarg1, void * jarg2) {
  std::string *arg1 = 0 ;
  libsumo::TraCILogic *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  
  arg2 = (libsumo::TraCILogic *)(((std::shared_ptr< const libsumo::TraCILogic > *)jarg2) ? ((std::shared_ptr< const libsumo::TraCILogic > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCILogic const & reference is null", 0);
    return ;
  } 
  {
    try {
      libsumo::TrafficLight::setCompleteRedYellowGreenDefinition((std::string const &)*arg1,(libsumo::TraCILogic const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_setNemaSplits___(const char * jarg1, void * jarg2) {
  std::string *arg1 = 0 ;
  std::vector< double > *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< double > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< double > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::TrafficLight::setNemaSplits((std::string const &)*arg1,(std::vector< double > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_setNemaMaxGreens___(const char * jarg1, void * jarg2) {
  std::string *arg1 = 0 ;
  std::vector< double > *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< double > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< double > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::TrafficLight::setNemaMaxGreens((std::string const &)*arg1,(std::vector< double > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_setNemaCycleLength___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::TrafficLight::setNemaCycleLength((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TrafficLight_setNemaOffset___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::TrafficLight::setNemaOffset((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_TrafficLight___(void * jarg1) {
  libsumo::TrafficLight *arg1 = (libsumo::TrafficLight *) 0 ;
  
  arg1 = (libsumo::TrafficLight *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_getLength___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::VehicleType::getLength((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_getMaxSpeed___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::VehicleType::getMaxSpeed((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_getVehicleClass___(const char * jarg1) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::VehicleType::getVehicleClass((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_getSpeedFactor___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::VehicleType::getSpeedFactor((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_getAccel___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::VehicleType::getAccel((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_getDecel___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::VehicleType::getDecel((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_getEmergencyDecel___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::VehicleType::getEmergencyDecel((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_getApparentDecel___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::VehicleType::getApparentDecel((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_getImperfection___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::VehicleType::getImperfection((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_getTau___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::VehicleType::getTau((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_getEmissionClass___(const char * jarg1) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::VehicleType::getEmissionClass((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_getShapeClass___(const char * jarg1) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::VehicleType::getShapeClass((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_getMinGap___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::VehicleType::getMinGap((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_getWidth___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::VehicleType::getWidth((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_getHeight___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::VehicleType::getHeight((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_getMass___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::VehicleType::getMass((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_getColor___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::TraCIColor result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::VehicleType::getColor((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr<  libsumo::TraCIColor >(new libsumo::TraCIColor(result)); 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_getMinGapLat___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::VehicleType::getMinGapLat((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_getMaxSpeedLat___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::VehicleType::getMaxSpeedLat((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_getLateralAlignment___(const char * jarg1) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::VehicleType::getLateralAlignment((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_getPersonCapacity___(const char * jarg1) {
  int jresult ;
  std::string *arg1 = 0 ;
  int result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (int)libsumo::VehicleType::getPersonCapacity((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_getActionStepLength___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::VehicleType::getActionStepLength((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_getSpeedDeviation___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::VehicleType::getSpeedDeviation((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_getBoardingDuration___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::VehicleType::getBoardingDuration((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_getImpatience___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::VehicleType::getImpatience((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_getIDList___() {
  void * jresult ;
  std::vector< std::string > result;
  
  {
    try {
      result = libsumo::VehicleType::getIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_getIDCount___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::VehicleType::getIDCount();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_getParameter___(const char * jarg1, const char * jarg2) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = libsumo::VehicleType::getParameter((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_getParameterWithKey___(const char * jarg1, const char * jarg2) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::pair< std::string,std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = libsumo::VehicleType::getParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::pair< std::string,std::string >(result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_setParameter___(const char * jarg1, const char * jarg2, const char * jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  {
    try {
      libsumo::VehicleType::setParameter((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_setLength___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::VehicleType::setLength((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_setMaxSpeed___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::VehicleType::setMaxSpeed((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_setVehicleClass___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::VehicleType::setVehicleClass((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_setSpeedFactor___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::VehicleType::setSpeedFactor((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_setAccel___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::VehicleType::setAccel((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_setDecel___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::VehicleType::setDecel((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_setEmergencyDecel___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::VehicleType::setEmergencyDecel((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_setApparentDecel___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::VehicleType::setApparentDecel((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_setImperfection___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::VehicleType::setImperfection((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_setTau___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::VehicleType::setTau((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_setEmissionClass___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::VehicleType::setEmissionClass((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_setShapeClass___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::VehicleType::setShapeClass((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_setWidth___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::VehicleType::setWidth((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_setHeight___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::VehicleType::setHeight((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_setMass___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::VehicleType::setMass((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_setColor___(const char * jarg1, void * jarg2) {
  std::string *arg1 = 0 ;
  libsumo::TraCIColor *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  
  arg2 = (libsumo::TraCIColor *)(((std::shared_ptr< const libsumo::TraCIColor > *)jarg2) ? ((std::shared_ptr< const libsumo::TraCIColor > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIColor const & reference is null", 0);
    return ;
  } 
  {
    try {
      libsumo::VehicleType::setColor((std::string const &)*arg1,(libsumo::TraCIColor const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_setMinGap___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::VehicleType::setMinGap((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_setMinGapLat___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::VehicleType::setMinGapLat((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_setMaxSpeedLat___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::VehicleType::setMaxSpeedLat((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_setLateralAlignment___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::VehicleType::setLateralAlignment((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_setActionStepLength__SWIG_0___(const char * jarg1, double jarg2, unsigned int jarg3) {
  std::string *arg1 = 0 ;
  double arg2 ;
  bool arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  arg3 = jarg3 ? true : false; 
  {
    try {
      libsumo::VehicleType::setActionStepLength((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_setActionStepLength__SWIG_1___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::VehicleType::setActionStepLength((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_setBoardingDuration___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::VehicleType::setBoardingDuration((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_setImpatience___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::VehicleType::setImpatience((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_copy___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::VehicleType::copy((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_setSpeedDeviation___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::VehicleType::setSpeedDeviation((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_getScale___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::VehicleType::getScale((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_setScale___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::VehicleType::setScale((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_subscribe__SWIG_0___(const char * jarg1, void * jarg2, double jarg3, double jarg4, void * jarg5) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  libsumo::TraCIResults *arg5 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (libsumo::TraCIResults *)jarg5;
  if (!arg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIResults const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::VehicleType::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4,(std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > > const &)*arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_subscribe__SWIG_1___(const char * jarg1, void * jarg2, double jarg3, double jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::VehicleType::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_subscribe__SWIG_2___(const char * jarg1, void * jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::VehicleType::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_subscribe__SWIG_3___(const char * jarg1, void * jarg2) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::VehicleType::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_subscribe__SWIG_4___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::VehicleType::subscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_unsubscribe___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::VehicleType::unsubscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_subscribeContext__SWIG_0___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5, double jarg6, void * jarg7) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  libsumo::TraCIResults *arg7 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (libsumo::TraCIResults *)jarg7;
  if (!arg7) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIResults const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::VehicleType::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6,(std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > > const &)*arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_subscribeContext__SWIG_1___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5, double jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::VehicleType::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_subscribeContext__SWIG_2___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::VehicleType::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_subscribeContext__SWIG_3___(const char * jarg1, int jarg2, double jarg3, void * jarg4) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::VehicleType::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_subscribeContext__SWIG_4___(const char * jarg1, int jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::VehicleType::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_unsubscribeContext___(const char * jarg1, int jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::VehicleType::unsubscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_getAllSubscriptionResults___() {
  void * jresult ;
  libsumo::SubscriptionResults result;
  
  {
    try {
      result = libsumo::VehicleType::getAllSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::SubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_getSubscriptionResults___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::TraCIResults result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::VehicleType::getSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::TraCIResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_getAllContextSubscriptionResults___() {
  void * jresult ;
  libsumo::ContextSubscriptionResults result;
  
  {
    try {
      result = libsumo::VehicleType::getAllContextSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::ContextSubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_getContextSubscriptionResults___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::SubscriptionResults result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::VehicleType::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::SubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_subscribeParameterWithKey__SWIG_0___(const char * jarg1, const char * jarg2, double jarg3, double jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::VehicleType::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_subscribeParameterWithKey__SWIG_1___(const char * jarg1, const char * jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::VehicleType::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_subscribeParameterWithKey__SWIG_2___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::VehicleType::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_DOMAIN_ID_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VehicleType::DOMAIN_ID;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VehicleType_domainID___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::VehicleType::domainID();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_VehicleType___(void * jarg1) {
  libsumo::VehicleType *arg1 = (libsumo::VehicleType *) 0 ;
  
  arg1 = (libsumo::VehicleType *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getSpeed___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Vehicle::getSpeed((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getLateralSpeed___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Vehicle::getLateralSpeed((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getAcceleration___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Vehicle::getAcceleration((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getSpeedWithoutTraCI___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Vehicle::getSpeedWithoutTraCI((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getPosition__SWIG_0___(const char * jarg1, unsigned int jarg2) {
  void * jresult ;
  std::string *arg1 = 0 ;
  bool arg2 ;
  libsumo::TraCIPosition result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = jarg2 ? true : false; 
  {
    try {
      result = libsumo::Vehicle::getPosition((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr<  libsumo::TraCIPosition >(new libsumo::TraCIPosition(result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getPosition__SWIG_1___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::TraCIPosition result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Vehicle::getPosition((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr<  libsumo::TraCIPosition >(new libsumo::TraCIPosition(result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getPosition3D___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::TraCIPosition result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Vehicle::getPosition3D((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr<  libsumo::TraCIPosition >(new libsumo::TraCIPosition(result)); 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getAngle___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Vehicle::getAngle((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getSlope___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Vehicle::getSlope((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getRoadID___(const char * jarg1) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Vehicle::getRoadID((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getLaneID___(const char * jarg1) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Vehicle::getLaneID((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getLaneIndex___(const char * jarg1) {
  int jresult ;
  std::string *arg1 = 0 ;
  int result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (int)libsumo::Vehicle::getLaneIndex((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getSegmentID___(const char * jarg1) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Vehicle::getSegmentID((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getSegmentIndex___(const char * jarg1) {
  int jresult ;
  std::string *arg1 = 0 ;
  int result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (int)libsumo::Vehicle::getSegmentIndex((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getTypeID___(const char * jarg1) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Vehicle::getTypeID((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getRouteID___(const char * jarg1) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Vehicle::getRouteID((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getDeparture___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Vehicle::getDeparture((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getDepartDelay___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Vehicle::getDepartDelay((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getRouteIndex___(const char * jarg1) {
  int jresult ;
  std::string *arg1 = 0 ;
  int result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (int)libsumo::Vehicle::getRouteIndex((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getLanePosition___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Vehicle::getLanePosition((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getLateralLanePosition___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Vehicle::getLateralLanePosition((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getCO2Emission___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Vehicle::getCO2Emission((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getCOEmission___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Vehicle::getCOEmission((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getHCEmission___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Vehicle::getHCEmission((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getPMxEmission___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Vehicle::getPMxEmission((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getNOxEmission___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Vehicle::getNOxEmission((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getFuelConsumption___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Vehicle::getFuelConsumption((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getNoiseEmission___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Vehicle::getNoiseEmission((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getElectricityConsumption___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Vehicle::getElectricityConsumption((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getPersonNumber___(const char * jarg1) {
  int jresult ;
  std::string *arg1 = 0 ;
  int result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (int)libsumo::Vehicle::getPersonNumber((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getPersonIDList___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Vehicle::getPersonIDList((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getLeader__SWIG_0___(const char * jarg1, double jarg2) {
  void * jresult ;
  std::string *arg1 = 0 ;
  double arg2 ;
  std::pair< std::string,double > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      result = libsumo::Vehicle::getLeader((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::pair< std::string,double >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getLeader__SWIG_1___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::pair< std::string,double > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Vehicle::getLeader((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::pair< std::string,double >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getFollower__SWIG_0___(const char * jarg1, double jarg2) {
  void * jresult ;
  std::string *arg1 = 0 ;
  double arg2 ;
  std::pair< std::string,double > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      result = libsumo::Vehicle::getFollower((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::pair< std::string,double >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getFollower__SWIG_1___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::pair< std::string,double > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Vehicle::getFollower((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::pair< std::string,double >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getJunctionFoes__SWIG_0___(const char * jarg1, double jarg2) {
  void * jresult ;
  std::string *arg1 = 0 ;
  double arg2 ;
  std::vector< libsumo::TraCIJunctionFoe > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      result = libsumo::Vehicle::getJunctionFoes((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< libsumo::TraCIJunctionFoe >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getJunctionFoes__SWIG_1___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::vector< libsumo::TraCIJunctionFoe > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Vehicle::getJunctionFoes((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< libsumo::TraCIJunctionFoe >(result); 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getWaitingTime___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Vehicle::getWaitingTime((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getAccumulatedWaitingTime___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Vehicle::getAccumulatedWaitingTime((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getAdaptedTraveltime___(const char * jarg1, double jarg2, const char * jarg3) {
  double jresult ;
  std::string *arg1 = 0 ;
  double arg2 ;
  std::string *arg3 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  {
    try {
      result = (double)libsumo::Vehicle::getAdaptedTraveltime((std::string const &)*arg1,arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getEffort___(const char * jarg1, double jarg2, const char * jarg3) {
  double jresult ;
  std::string *arg1 = 0 ;
  double arg2 ;
  std::string *arg3 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  {
    try {
      result = (double)libsumo::Vehicle::getEffort((std::string const &)*arg1,arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_isRouteValid___(const char * jarg1) {
  unsigned int jresult ;
  std::string *arg1 = 0 ;
  bool result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (bool)libsumo::Vehicle::isRouteValid((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getRoute___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Vehicle::getRoute((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getSignals___(const char * jarg1) {
  int jresult ;
  std::string *arg1 = 0 ;
  int result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (int)libsumo::Vehicle::getSignals((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getBestLanes___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::vector< libsumo::TraCIBestLanesData > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Vehicle::getBestLanes((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< libsumo::TraCIBestLanesData >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getNextTLS___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::vector< libsumo::TraCINextTLSData > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Vehicle::getNextTLS((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< libsumo::TraCINextTLSData >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getNextStops___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::vector< libsumo::TraCINextStopData > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Vehicle::getNextStops((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< libsumo::TraCINextStopData >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getNextLinks___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::vector< libsumo::TraCIConnection > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Vehicle::getNextLinks((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< libsumo::TraCIConnection >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getStops__SWIG_0___(const char * jarg1, int jarg2) {
  void * jresult ;
  std::string *arg1 = 0 ;
  int arg2 ;
  std::vector< libsumo::TraCINextStopData > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  {
    try {
      result = libsumo::Vehicle::getStops((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< libsumo::TraCINextStopData >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getStops__SWIG_1___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::vector< libsumo::TraCINextStopData > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Vehicle::getStops((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< libsumo::TraCINextStopData >(result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getStopState___(const char * jarg1) {
  int jresult ;
  std::string *arg1 = 0 ;
  int result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (int)libsumo::Vehicle::getStopState((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getStopParameter__SWIG_0___(const char * jarg1, int jarg2, const char * jarg3, unsigned int jarg4) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  int arg2 ;
  std::string *arg3 = 0 ;
  bool arg4 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  arg4 = jarg4 ? true : false; 
  {
    try {
      result = libsumo::Vehicle::getStopParameter((std::string const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getStopParameter__SWIG_1___(const char * jarg1, int jarg2, const char * jarg3) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  int arg2 ;
  std::string *arg3 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  {
    try {
      result = libsumo::Vehicle::getStopParameter((std::string const &)*arg1,arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getDistance___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Vehicle::getDistance((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getDrivingDistance__SWIG_0___(const char * jarg1, const char * jarg2, double jarg3, int jarg4) {
  double jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  int arg4 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  arg4 = (int)jarg4; 
  {
    try {
      result = (double)libsumo::Vehicle::getDrivingDistance((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getDrivingDistance__SWIG_1___(const char * jarg1, const char * jarg2, double jarg3) {
  double jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  {
    try {
      result = (double)libsumo::Vehicle::getDrivingDistance((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getDrivingDistance2D___(const char * jarg1, double jarg2, double jarg3) {
  double jresult ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      result = (double)libsumo::Vehicle::getDrivingDistance2D((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getAllowedSpeed___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Vehicle::getAllowedSpeed((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getSpeedMode___(const char * jarg1) {
  int jresult ;
  std::string *arg1 = 0 ;
  int result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (int)libsumo::Vehicle::getSpeedMode((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getLaneChangeMode___(const char * jarg1) {
  int jresult ;
  std::string *arg1 = 0 ;
  int result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (int)libsumo::Vehicle::getLaneChangeMode((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getRoutingMode___(const char * jarg1) {
  int jresult ;
  std::string *arg1 = 0 ;
  int result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (int)libsumo::Vehicle::getRoutingMode((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getLine___(const char * jarg1) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Vehicle::getLine((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getVia___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Vehicle::getVia((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getLaneChangeState___(const char * jarg1, int jarg2) {
  void * jresult ;
  std::string *arg1 = 0 ;
  int arg2 ;
  std::pair< int,int > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  {
    try {
      result = libsumo::Vehicle::getLaneChangeState((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::pair< int,int >(result); 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getLastActionTime___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Vehicle::getLastActionTime((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getNeighbors___(const char * jarg1, int jarg2) {
  void * jresult ;
  std::string *arg1 = 0 ;
  int arg2 ;
  std::vector< std::pair< std::string,double > > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  {
    try {
      result = libsumo::Vehicle::getNeighbors((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::pair< std::string,double > >(result); 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getFollowSpeed__SWIG_0___(const char * jarg1, double jarg2, double jarg3, double jarg4, double jarg5, const char * jarg6) {
  double jresult ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  std::string *arg6 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  if (!jarg6) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg6_str(jarg6);
  arg6 = &arg6_str; 
  {
    try {
      result = (double)libsumo::Vehicle::getFollowSpeed((std::string const &)*arg1,arg2,arg3,arg4,arg5,(std::string const &)*arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getFollowSpeed__SWIG_1___(const char * jarg1, double jarg2, double jarg3, double jarg4, double jarg5) {
  double jresult ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  {
    try {
      result = (double)libsumo::Vehicle::getFollowSpeed((std::string const &)*arg1,arg2,arg3,arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getSecureGap__SWIG_0___(const char * jarg1, double jarg2, double jarg3, double jarg4, const char * jarg5) {
  double jresult ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  std::string *arg5 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  if (!jarg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg5_str(jarg5);
  arg5 = &arg5_str; 
  {
    try {
      result = (double)libsumo::Vehicle::getSecureGap((std::string const &)*arg1,arg2,arg3,arg4,(std::string const &)*arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getSecureGap__SWIG_1___(const char * jarg1, double jarg2, double jarg3, double jarg4) {
  double jresult ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      result = (double)libsumo::Vehicle::getSecureGap((std::string const &)*arg1,arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getStopSpeed___(const char * jarg1, double jarg2, double jarg3) {
  double jresult ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      result = (double)libsumo::Vehicle::getStopSpeed((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getStopDelay___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Vehicle::getStopDelay((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getStopArrivalDelay___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Vehicle::getStopArrivalDelay((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getTimeLoss___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Vehicle::getTimeLoss((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getTaxiFleet__SWIG_0___(int jarg1) {
  void * jresult ;
  int arg1 ;
  std::vector< std::string > result;
  
  arg1 = (int)jarg1; 
  {
    try {
      result = libsumo::Vehicle::getTaxiFleet(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getTaxiFleet__SWIG_1___() {
  void * jresult ;
  std::vector< std::string > result;
  
  {
    try {
      result = libsumo::Vehicle::getTaxiFleet();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getLoadedIDList___() {
  void * jresult ;
  std::vector< std::string > result;
  
  {
    try {
      result = libsumo::Vehicle::getLoadedIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getTeleportingIDList___() {
  void * jresult ;
  std::vector< std::string > result;
  
  {
    try {
      result = libsumo::Vehicle::getTeleportingIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getIDList___() {
  void * jresult ;
  std::vector< std::string > result;
  
  {
    try {
      result = libsumo::Vehicle::getIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getIDCount___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::Vehicle::getIDCount();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getParameter___(const char * jarg1, const char * jarg2) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = libsumo::Vehicle::getParameter((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getParameterWithKey___(const char * jarg1, const char * jarg2) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::pair< std::string,std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = libsumo::Vehicle::getParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::pair< std::string,std::string >(result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_setParameter___(const char * jarg1, const char * jarg2, const char * jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  {
    try {
      libsumo::Vehicle::setParameter((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getLength___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Vehicle::getLength((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getMaxSpeed___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Vehicle::getMaxSpeed((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getVehicleClass___(const char * jarg1) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Vehicle::getVehicleClass((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getSpeedFactor___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Vehicle::getSpeedFactor((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getAccel___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Vehicle::getAccel((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getDecel___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Vehicle::getDecel((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getEmergencyDecel___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Vehicle::getEmergencyDecel((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getApparentDecel___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Vehicle::getApparentDecel((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getImperfection___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Vehicle::getImperfection((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getTau___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Vehicle::getTau((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getEmissionClass___(const char * jarg1) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Vehicle::getEmissionClass((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getShapeClass___(const char * jarg1) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Vehicle::getShapeClass((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getMinGap___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Vehicle::getMinGap((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getWidth___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Vehicle::getWidth((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getHeight___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Vehicle::getHeight((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getMass___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Vehicle::getMass((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getColor___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::TraCIColor result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Vehicle::getColor((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr<  libsumo::TraCIColor >(new libsumo::TraCIColor(result)); 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getMinGapLat___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Vehicle::getMinGapLat((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getMaxSpeedLat___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Vehicle::getMaxSpeedLat((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getLateralAlignment___(const char * jarg1) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Vehicle::getLateralAlignment((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getPersonCapacity___(const char * jarg1) {
  int jresult ;
  std::string *arg1 = 0 ;
  int result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (int)libsumo::Vehicle::getPersonCapacity((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getActionStepLength___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Vehicle::getActionStepLength((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getSpeedDeviation___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Vehicle::getSpeedDeviation((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getBoardingDuration___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Vehicle::getBoardingDuration((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getImpatience___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Vehicle::getImpatience((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_setStop__SWIG_0___(const char * jarg1, const char * jarg2, double jarg3, int jarg4, double jarg5, int jarg6, double jarg7, double jarg8) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  int arg4 ;
  double arg5 ;
  int arg6 ;
  double arg7 ;
  double arg8 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (double)jarg5; 
  arg6 = (int)jarg6; 
  arg7 = (double)jarg7; 
  arg8 = (double)jarg8; 
  {
    try {
      libsumo::Vehicle::setStop((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4,arg5,arg6,arg7,arg8);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_setStop__SWIG_1___(const char * jarg1, const char * jarg2, double jarg3, int jarg4, double jarg5, int jarg6, double jarg7) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  int arg4 ;
  double arg5 ;
  int arg6 ;
  double arg7 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (double)jarg5; 
  arg6 = (int)jarg6; 
  arg7 = (double)jarg7; 
  {
    try {
      libsumo::Vehicle::setStop((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4,arg5,arg6,arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_setStop__SWIG_2___(const char * jarg1, const char * jarg2, double jarg3, int jarg4, double jarg5, int jarg6) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  int arg4 ;
  double arg5 ;
  int arg6 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (double)jarg5; 
  arg6 = (int)jarg6; 
  {
    try {
      libsumo::Vehicle::setStop((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_setStop__SWIG_3___(const char * jarg1, const char * jarg2, double jarg3, int jarg4, double jarg5) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  int arg4 ;
  double arg5 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::Vehicle::setStop((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_setStop__SWIG_4___(const char * jarg1, const char * jarg2, double jarg3, int jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  int arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  arg4 = (int)jarg4; 
  {
    try {
      libsumo::Vehicle::setStop((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_setStop__SWIG_5___(const char * jarg1, const char * jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Vehicle::setStop((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_setStop__SWIG_6___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::Vehicle::setStop((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_replaceStop__SWIG_0___(const char * jarg1, int jarg2, const char * jarg3, double jarg4, int jarg5, double jarg6, int jarg7, double jarg8, double jarg9, int jarg10) {
  std::string *arg1 = 0 ;
  int arg2 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  double arg6 ;
  int arg7 ;
  double arg8 ;
  double arg9 ;
  int arg10 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  arg4 = (double)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (int)jarg7; 
  arg8 = (double)jarg8; 
  arg9 = (double)jarg9; 
  arg10 = (int)jarg10; 
  {
    try {
      libsumo::Vehicle::replaceStop((std::string const &)*arg1,arg2,(std::string const &)*arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_replaceStop__SWIG_1___(const char * jarg1, int jarg2, const char * jarg3, double jarg4, int jarg5, double jarg6, int jarg7, double jarg8, double jarg9) {
  std::string *arg1 = 0 ;
  int arg2 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  double arg6 ;
  int arg7 ;
  double arg8 ;
  double arg9 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  arg4 = (double)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (int)jarg7; 
  arg8 = (double)jarg8; 
  arg9 = (double)jarg9; 
  {
    try {
      libsumo::Vehicle::replaceStop((std::string const &)*arg1,arg2,(std::string const &)*arg3,arg4,arg5,arg6,arg7,arg8,arg9);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_replaceStop__SWIG_2___(const char * jarg1, int jarg2, const char * jarg3, double jarg4, int jarg5, double jarg6, int jarg7, double jarg8) {
  std::string *arg1 = 0 ;
  int arg2 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  double arg6 ;
  int arg7 ;
  double arg8 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  arg4 = (double)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (int)jarg7; 
  arg8 = (double)jarg8; 
  {
    try {
      libsumo::Vehicle::replaceStop((std::string const &)*arg1,arg2,(std::string const &)*arg3,arg4,arg5,arg6,arg7,arg8);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_replaceStop__SWIG_3___(const char * jarg1, int jarg2, const char * jarg3, double jarg4, int jarg5, double jarg6, int jarg7) {
  std::string *arg1 = 0 ;
  int arg2 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  double arg6 ;
  int arg7 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  arg4 = (double)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (int)jarg7; 
  {
    try {
      libsumo::Vehicle::replaceStop((std::string const &)*arg1,arg2,(std::string const &)*arg3,arg4,arg5,arg6,arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_replaceStop__SWIG_4___(const char * jarg1, int jarg2, const char * jarg3, double jarg4, int jarg5, double jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  double arg6 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  arg4 = (double)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::Vehicle::replaceStop((std::string const &)*arg1,arg2,(std::string const &)*arg3,arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_replaceStop__SWIG_5___(const char * jarg1, int jarg2, const char * jarg3, double jarg4, int jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  arg4 = (double)jarg4; 
  arg5 = (int)jarg5; 
  {
    try {
      libsumo::Vehicle::replaceStop((std::string const &)*arg1,arg2,(std::string const &)*arg3,arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_replaceStop__SWIG_6___(const char * jarg1, int jarg2, const char * jarg3, double jarg4) {
  std::string *arg1 = 0 ;
  int arg2 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Vehicle::replaceStop((std::string const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_replaceStop__SWIG_7___(const char * jarg1, int jarg2, const char * jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  std::string *arg3 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  {
    try {
      libsumo::Vehicle::replaceStop((std::string const &)*arg1,arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_insertStop__SWIG_0___(const char * jarg1, int jarg2, const char * jarg3, double jarg4, int jarg5, double jarg6, int jarg7, double jarg8, double jarg9, int jarg10) {
  std::string *arg1 = 0 ;
  int arg2 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  double arg6 ;
  int arg7 ;
  double arg8 ;
  double arg9 ;
  int arg10 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  arg4 = (double)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (int)jarg7; 
  arg8 = (double)jarg8; 
  arg9 = (double)jarg9; 
  arg10 = (int)jarg10; 
  {
    try {
      libsumo::Vehicle::insertStop((std::string const &)*arg1,arg2,(std::string const &)*arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_insertStop__SWIG_1___(const char * jarg1, int jarg2, const char * jarg3, double jarg4, int jarg5, double jarg6, int jarg7, double jarg8, double jarg9) {
  std::string *arg1 = 0 ;
  int arg2 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  double arg6 ;
  int arg7 ;
  double arg8 ;
  double arg9 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  arg4 = (double)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (int)jarg7; 
  arg8 = (double)jarg8; 
  arg9 = (double)jarg9; 
  {
    try {
      libsumo::Vehicle::insertStop((std::string const &)*arg1,arg2,(std::string const &)*arg3,arg4,arg5,arg6,arg7,arg8,arg9);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_insertStop__SWIG_2___(const char * jarg1, int jarg2, const char * jarg3, double jarg4, int jarg5, double jarg6, int jarg7, double jarg8) {
  std::string *arg1 = 0 ;
  int arg2 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  double arg6 ;
  int arg7 ;
  double arg8 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  arg4 = (double)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (int)jarg7; 
  arg8 = (double)jarg8; 
  {
    try {
      libsumo::Vehicle::insertStop((std::string const &)*arg1,arg2,(std::string const &)*arg3,arg4,arg5,arg6,arg7,arg8);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_insertStop__SWIG_3___(const char * jarg1, int jarg2, const char * jarg3, double jarg4, int jarg5, double jarg6, int jarg7) {
  std::string *arg1 = 0 ;
  int arg2 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  double arg6 ;
  int arg7 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  arg4 = (double)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (int)jarg7; 
  {
    try {
      libsumo::Vehicle::insertStop((std::string const &)*arg1,arg2,(std::string const &)*arg3,arg4,arg5,arg6,arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_insertStop__SWIG_4___(const char * jarg1, int jarg2, const char * jarg3, double jarg4, int jarg5, double jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  double arg6 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  arg4 = (double)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::Vehicle::insertStop((std::string const &)*arg1,arg2,(std::string const &)*arg3,arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_insertStop__SWIG_5___(const char * jarg1, int jarg2, const char * jarg3, double jarg4, int jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  arg4 = (double)jarg4; 
  arg5 = (int)jarg5; 
  {
    try {
      libsumo::Vehicle::insertStop((std::string const &)*arg1,arg2,(std::string const &)*arg3,arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_insertStop__SWIG_6___(const char * jarg1, int jarg2, const char * jarg3, double jarg4) {
  std::string *arg1 = 0 ;
  int arg2 ;
  std::string *arg3 = 0 ;
  double arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Vehicle::insertStop((std::string const &)*arg1,arg2,(std::string const &)*arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_insertStop__SWIG_7___(const char * jarg1, int jarg2, const char * jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  std::string *arg3 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  {
    try {
      libsumo::Vehicle::insertStop((std::string const &)*arg1,arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_setStopParameter__SWIG_0___(const char * jarg1, int jarg2, const char * jarg3, const char * jarg4, unsigned int jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  bool arg5 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  if (!jarg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg4_str(jarg4);
  arg4 = &arg4_str; 
  arg5 = jarg5 ? true : false; 
  {
    try {
      libsumo::Vehicle::setStopParameter((std::string const &)*arg1,arg2,(std::string const &)*arg3,(std::string const &)*arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_setStopParameter__SWIG_1___(const char * jarg1, int jarg2, const char * jarg3, const char * jarg4) {
  std::string *arg1 = 0 ;
  int arg2 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  if (!jarg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg4_str(jarg4);
  arg4 = &arg4_str; 
  {
    try {
      libsumo::Vehicle::setStopParameter((std::string const &)*arg1,arg2,(std::string const &)*arg3,(std::string const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_rerouteParkingArea___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::Vehicle::rerouteParkingArea((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_resume___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::Vehicle::resume((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_add__SWIG_0___(const char * jarg1, const char * jarg2, const char * jarg3, const char * jarg4, const char * jarg5, const char * jarg6, const char * jarg7, const char * jarg8, const char * jarg9, const char * jarg10, const char * jarg11, const char * jarg12, const char * jarg13, int jarg14, int jarg15) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  std::string *arg6 = 0 ;
  std::string *arg7 = 0 ;
  std::string *arg8 = 0 ;
  std::string *arg9 = 0 ;
  std::string *arg10 = 0 ;
  std::string *arg11 = 0 ;
  std::string *arg12 = 0 ;
  std::string *arg13 = 0 ;
  int arg14 ;
  int arg15 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  if (!jarg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg4_str(jarg4);
  arg4 = &arg4_str; 
  if (!jarg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg5_str(jarg5);
  arg5 = &arg5_str; 
  if (!jarg6) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg6_str(jarg6);
  arg6 = &arg6_str; 
  if (!jarg7) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg7_str(jarg7);
  arg7 = &arg7_str; 
  if (!jarg8) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg8_str(jarg8);
  arg8 = &arg8_str; 
  if (!jarg9) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg9_str(jarg9);
  arg9 = &arg9_str; 
  if (!jarg10) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg10_str(jarg10);
  arg10 = &arg10_str; 
  if (!jarg11) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg11_str(jarg11);
  arg11 = &arg11_str; 
  if (!jarg12) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg12_str(jarg12);
  arg12 = &arg12_str; 
  if (!jarg13) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg13_str(jarg13);
  arg13 = &arg13_str; 
  arg14 = (int)jarg14; 
  arg15 = (int)jarg15; 
  {
    try {
      libsumo::Vehicle::add((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::string const &)*arg5,(std::string const &)*arg6,(std::string const &)*arg7,(std::string const &)*arg8,(std::string const &)*arg9,(std::string const &)*arg10,(std::string const &)*arg11,(std::string const &)*arg12,(std::string const &)*arg13,arg14,arg15);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_add__SWIG_1___(const char * jarg1, const char * jarg2, const char * jarg3, const char * jarg4, const char * jarg5, const char * jarg6, const char * jarg7, const char * jarg8, const char * jarg9, const char * jarg10, const char * jarg11, const char * jarg12, const char * jarg13, int jarg14) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  std::string *arg6 = 0 ;
  std::string *arg7 = 0 ;
  std::string *arg8 = 0 ;
  std::string *arg9 = 0 ;
  std::string *arg10 = 0 ;
  std::string *arg11 = 0 ;
  std::string *arg12 = 0 ;
  std::string *arg13 = 0 ;
  int arg14 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  if (!jarg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg4_str(jarg4);
  arg4 = &arg4_str; 
  if (!jarg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg5_str(jarg5);
  arg5 = &arg5_str; 
  if (!jarg6) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg6_str(jarg6);
  arg6 = &arg6_str; 
  if (!jarg7) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg7_str(jarg7);
  arg7 = &arg7_str; 
  if (!jarg8) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg8_str(jarg8);
  arg8 = &arg8_str; 
  if (!jarg9) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg9_str(jarg9);
  arg9 = &arg9_str; 
  if (!jarg10) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg10_str(jarg10);
  arg10 = &arg10_str; 
  if (!jarg11) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg11_str(jarg11);
  arg11 = &arg11_str; 
  if (!jarg12) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg12_str(jarg12);
  arg12 = &arg12_str; 
  if (!jarg13) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg13_str(jarg13);
  arg13 = &arg13_str; 
  arg14 = (int)jarg14; 
  {
    try {
      libsumo::Vehicle::add((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::string const &)*arg5,(std::string const &)*arg6,(std::string const &)*arg7,(std::string const &)*arg8,(std::string const &)*arg9,(std::string const &)*arg10,(std::string const &)*arg11,(std::string const &)*arg12,(std::string const &)*arg13,arg14);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_add__SWIG_2___(const char * jarg1, const char * jarg2, const char * jarg3, const char * jarg4, const char * jarg5, const char * jarg6, const char * jarg7, const char * jarg8, const char * jarg9, const char * jarg10, const char * jarg11, const char * jarg12, const char * jarg13) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  std::string *arg6 = 0 ;
  std::string *arg7 = 0 ;
  std::string *arg8 = 0 ;
  std::string *arg9 = 0 ;
  std::string *arg10 = 0 ;
  std::string *arg11 = 0 ;
  std::string *arg12 = 0 ;
  std::string *arg13 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  if (!jarg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg4_str(jarg4);
  arg4 = &arg4_str; 
  if (!jarg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg5_str(jarg5);
  arg5 = &arg5_str; 
  if (!jarg6) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg6_str(jarg6);
  arg6 = &arg6_str; 
  if (!jarg7) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg7_str(jarg7);
  arg7 = &arg7_str; 
  if (!jarg8) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg8_str(jarg8);
  arg8 = &arg8_str; 
  if (!jarg9) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg9_str(jarg9);
  arg9 = &arg9_str; 
  if (!jarg10) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg10_str(jarg10);
  arg10 = &arg10_str; 
  if (!jarg11) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg11_str(jarg11);
  arg11 = &arg11_str; 
  if (!jarg12) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg12_str(jarg12);
  arg12 = &arg12_str; 
  if (!jarg13) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg13_str(jarg13);
  arg13 = &arg13_str; 
  {
    try {
      libsumo::Vehicle::add((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::string const &)*arg5,(std::string const &)*arg6,(std::string const &)*arg7,(std::string const &)*arg8,(std::string const &)*arg9,(std::string const &)*arg10,(std::string const &)*arg11,(std::string const &)*arg12,(std::string const &)*arg13);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_add__SWIG_3___(const char * jarg1, const char * jarg2, const char * jarg3, const char * jarg4, const char * jarg5, const char * jarg6, const char * jarg7, const char * jarg8, const char * jarg9, const char * jarg10, const char * jarg11, const char * jarg12) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  std::string *arg6 = 0 ;
  std::string *arg7 = 0 ;
  std::string *arg8 = 0 ;
  std::string *arg9 = 0 ;
  std::string *arg10 = 0 ;
  std::string *arg11 = 0 ;
  std::string *arg12 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  if (!jarg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg4_str(jarg4);
  arg4 = &arg4_str; 
  if (!jarg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg5_str(jarg5);
  arg5 = &arg5_str; 
  if (!jarg6) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg6_str(jarg6);
  arg6 = &arg6_str; 
  if (!jarg7) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg7_str(jarg7);
  arg7 = &arg7_str; 
  if (!jarg8) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg8_str(jarg8);
  arg8 = &arg8_str; 
  if (!jarg9) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg9_str(jarg9);
  arg9 = &arg9_str; 
  if (!jarg10) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg10_str(jarg10);
  arg10 = &arg10_str; 
  if (!jarg11) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg11_str(jarg11);
  arg11 = &arg11_str; 
  if (!jarg12) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg12_str(jarg12);
  arg12 = &arg12_str; 
  {
    try {
      libsumo::Vehicle::add((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::string const &)*arg5,(std::string const &)*arg6,(std::string const &)*arg7,(std::string const &)*arg8,(std::string const &)*arg9,(std::string const &)*arg10,(std::string const &)*arg11,(std::string const &)*arg12);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_add__SWIG_4___(const char * jarg1, const char * jarg2, const char * jarg3, const char * jarg4, const char * jarg5, const char * jarg6, const char * jarg7, const char * jarg8, const char * jarg9, const char * jarg10, const char * jarg11) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  std::string *arg6 = 0 ;
  std::string *arg7 = 0 ;
  std::string *arg8 = 0 ;
  std::string *arg9 = 0 ;
  std::string *arg10 = 0 ;
  std::string *arg11 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  if (!jarg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg4_str(jarg4);
  arg4 = &arg4_str; 
  if (!jarg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg5_str(jarg5);
  arg5 = &arg5_str; 
  if (!jarg6) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg6_str(jarg6);
  arg6 = &arg6_str; 
  if (!jarg7) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg7_str(jarg7);
  arg7 = &arg7_str; 
  if (!jarg8) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg8_str(jarg8);
  arg8 = &arg8_str; 
  if (!jarg9) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg9_str(jarg9);
  arg9 = &arg9_str; 
  if (!jarg10) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg10_str(jarg10);
  arg10 = &arg10_str; 
  if (!jarg11) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg11_str(jarg11);
  arg11 = &arg11_str; 
  {
    try {
      libsumo::Vehicle::add((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::string const &)*arg5,(std::string const &)*arg6,(std::string const &)*arg7,(std::string const &)*arg8,(std::string const &)*arg9,(std::string const &)*arg10,(std::string const &)*arg11);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_add__SWIG_5___(const char * jarg1, const char * jarg2, const char * jarg3, const char * jarg4, const char * jarg5, const char * jarg6, const char * jarg7, const char * jarg8, const char * jarg9, const char * jarg10) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  std::string *arg6 = 0 ;
  std::string *arg7 = 0 ;
  std::string *arg8 = 0 ;
  std::string *arg9 = 0 ;
  std::string *arg10 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  if (!jarg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg4_str(jarg4);
  arg4 = &arg4_str; 
  if (!jarg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg5_str(jarg5);
  arg5 = &arg5_str; 
  if (!jarg6) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg6_str(jarg6);
  arg6 = &arg6_str; 
  if (!jarg7) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg7_str(jarg7);
  arg7 = &arg7_str; 
  if (!jarg8) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg8_str(jarg8);
  arg8 = &arg8_str; 
  if (!jarg9) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg9_str(jarg9);
  arg9 = &arg9_str; 
  if (!jarg10) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg10_str(jarg10);
  arg10 = &arg10_str; 
  {
    try {
      libsumo::Vehicle::add((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::string const &)*arg5,(std::string const &)*arg6,(std::string const &)*arg7,(std::string const &)*arg8,(std::string const &)*arg9,(std::string const &)*arg10);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_add__SWIG_6___(const char * jarg1, const char * jarg2, const char * jarg3, const char * jarg4, const char * jarg5, const char * jarg6, const char * jarg7, const char * jarg8, const char * jarg9) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  std::string *arg6 = 0 ;
  std::string *arg7 = 0 ;
  std::string *arg8 = 0 ;
  std::string *arg9 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  if (!jarg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg4_str(jarg4);
  arg4 = &arg4_str; 
  if (!jarg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg5_str(jarg5);
  arg5 = &arg5_str; 
  if (!jarg6) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg6_str(jarg6);
  arg6 = &arg6_str; 
  if (!jarg7) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg7_str(jarg7);
  arg7 = &arg7_str; 
  if (!jarg8) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg8_str(jarg8);
  arg8 = &arg8_str; 
  if (!jarg9) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg9_str(jarg9);
  arg9 = &arg9_str; 
  {
    try {
      libsumo::Vehicle::add((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::string const &)*arg5,(std::string const &)*arg6,(std::string const &)*arg7,(std::string const &)*arg8,(std::string const &)*arg9);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_add__SWIG_7___(const char * jarg1, const char * jarg2, const char * jarg3, const char * jarg4, const char * jarg5, const char * jarg6, const char * jarg7, const char * jarg8) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  std::string *arg6 = 0 ;
  std::string *arg7 = 0 ;
  std::string *arg8 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  if (!jarg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg4_str(jarg4);
  arg4 = &arg4_str; 
  if (!jarg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg5_str(jarg5);
  arg5 = &arg5_str; 
  if (!jarg6) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg6_str(jarg6);
  arg6 = &arg6_str; 
  if (!jarg7) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg7_str(jarg7);
  arg7 = &arg7_str; 
  if (!jarg8) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg8_str(jarg8);
  arg8 = &arg8_str; 
  {
    try {
      libsumo::Vehicle::add((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::string const &)*arg5,(std::string const &)*arg6,(std::string const &)*arg7,(std::string const &)*arg8);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_add__SWIG_8___(const char * jarg1, const char * jarg2, const char * jarg3, const char * jarg4, const char * jarg5, const char * jarg6, const char * jarg7) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  std::string *arg6 = 0 ;
  std::string *arg7 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  if (!jarg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg4_str(jarg4);
  arg4 = &arg4_str; 
  if (!jarg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg5_str(jarg5);
  arg5 = &arg5_str; 
  if (!jarg6) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg6_str(jarg6);
  arg6 = &arg6_str; 
  if (!jarg7) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg7_str(jarg7);
  arg7 = &arg7_str; 
  {
    try {
      libsumo::Vehicle::add((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::string const &)*arg5,(std::string const &)*arg6,(std::string const &)*arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_add__SWIG_9___(const char * jarg1, const char * jarg2, const char * jarg3, const char * jarg4, const char * jarg5, const char * jarg6) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  std::string *arg6 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  if (!jarg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg4_str(jarg4);
  arg4 = &arg4_str; 
  if (!jarg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg5_str(jarg5);
  arg5 = &arg5_str; 
  if (!jarg6) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg6_str(jarg6);
  arg6 = &arg6_str; 
  {
    try {
      libsumo::Vehicle::add((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::string const &)*arg5,(std::string const &)*arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_add__SWIG_10___(const char * jarg1, const char * jarg2, const char * jarg3, const char * jarg4, const char * jarg5) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  if (!jarg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg4_str(jarg4);
  arg4 = &arg4_str; 
  if (!jarg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg5_str(jarg5);
  arg5 = &arg5_str; 
  {
    try {
      libsumo::Vehicle::add((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::string const &)*arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_add__SWIG_11___(const char * jarg1, const char * jarg2, const char * jarg3, const char * jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  if (!jarg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg4_str(jarg4);
  arg4 = &arg4_str; 
  {
    try {
      libsumo::Vehicle::add((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_add__SWIG_12___(const char * jarg1, const char * jarg2, const char * jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  {
    try {
      libsumo::Vehicle::add((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_add__SWIG_13___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::Vehicle::add((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_changeTarget___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::Vehicle::changeTarget((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_changeLane___(const char * jarg1, int jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Vehicle::changeLane((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_changeLaneRelative___(const char * jarg1, int jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Vehicle::changeLaneRelative((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_changeSublane___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::changeSublane((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_slowDown___(const char * jarg1, double jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Vehicle::slowDown((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_openGap__SWIG_0___(const char * jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, const char * jarg7) {
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  std::string *arg7 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  if (!jarg7) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg7_str(jarg7);
  arg7 = &arg7_str; 
  {
    try {
      libsumo::Vehicle::openGap((std::string const &)*arg1,arg2,arg3,arg4,arg5,arg6,(std::string const &)*arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_openGap__SWIG_1___(const char * jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6) {
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::Vehicle::openGap((std::string const &)*arg1,arg2,arg3,arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_openGap__SWIG_2___(const char * jarg1, double jarg2, double jarg3, double jarg4, double jarg5) {
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::Vehicle::openGap((std::string const &)*arg1,arg2,arg3,arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_deactivateGapControl___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::Vehicle::deactivateGapControl((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_requestToC___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::requestToC((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_setSpeed___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::setSpeed((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_setAcceleration___(const char * jarg1, double jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Vehicle::setAcceleration((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_setPreviousSpeed__SWIG_0___(const char * jarg1, double jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Vehicle::setPreviousSpeed((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_setPreviousSpeed__SWIG_1___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::setPreviousSpeed((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_setSpeedMode___(const char * jarg1, int jarg2) {
  std::string *arg1 = 0 ;
  int arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  {
    try {
      libsumo::Vehicle::setSpeedMode((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_setLaneChangeMode___(const char * jarg1, int jarg2) {
  std::string *arg1 = 0 ;
  int arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  {
    try {
      libsumo::Vehicle::setLaneChangeMode((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_setRoutingMode___(const char * jarg1, int jarg2) {
  std::string *arg1 = 0 ;
  int arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  {
    try {
      libsumo::Vehicle::setRoutingMode((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_setType___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::Vehicle::setType((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_setRouteID___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::Vehicle::setRouteID((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_setRoute__SWIG_0___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::Vehicle::setRoute((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_setRoute__SWIG_1___(const char * jarg1, void * jarg2) {
  std::string *arg1 = 0 ;
  std::vector< std::string > *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< std::string > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::string > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Vehicle::setRoute((std::string const &)*arg1,(std::vector< std::string > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_setLateralLanePosition___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::setLateralLanePosition((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_updateBestLanes___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::Vehicle::updateBestLanes((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_setAdaptedTraveltime__SWIG_0___(const char * jarg1, const char * jarg2, double jarg3, double jarg4, double jarg5) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::Vehicle::setAdaptedTraveltime((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_setAdaptedTraveltime__SWIG_1___(const char * jarg1, const char * jarg2, double jarg3, double jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Vehicle::setAdaptedTraveltime((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_setAdaptedTraveltime__SWIG_2___(const char * jarg1, const char * jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Vehicle::setAdaptedTraveltime((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_setAdaptedTraveltime__SWIG_3___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::Vehicle::setAdaptedTraveltime((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_setEffort__SWIG_0___(const char * jarg1, const char * jarg2, double jarg3, double jarg4, double jarg5) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::Vehicle::setEffort((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_setEffort__SWIG_1___(const char * jarg1, const char * jarg2, double jarg3, double jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Vehicle::setEffort((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_setEffort__SWIG_2___(const char * jarg1, const char * jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Vehicle::setEffort((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_setEffort__SWIG_3___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::Vehicle::setEffort((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_rerouteTraveltime__SWIG_0___(const char * jarg1, unsigned int jarg2) {
  std::string *arg1 = 0 ;
  bool arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = jarg2 ? true : false; 
  {
    try {
      libsumo::Vehicle::rerouteTraveltime((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_rerouteTraveltime__SWIG_1___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::Vehicle::rerouteTraveltime((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_rerouteEffort___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::Vehicle::rerouteEffort((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_setSignals___(const char * jarg1, int jarg2) {
  std::string *arg1 = 0 ;
  int arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  {
    try {
      libsumo::Vehicle::setSignals((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_moveTo__SWIG_0___(const char * jarg1, const char * jarg2, double jarg3, int jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  int arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  arg4 = (int)jarg4; 
  {
    try {
      libsumo::Vehicle::moveTo((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_moveTo__SWIG_1___(const char * jarg1, const char * jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Vehicle::moveTo((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_moveToXY__SWIG_0___(const char * jarg1, const char * jarg2, int jarg3, double jarg4, double jarg5, double jarg6, int jarg7, double jarg8) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  int arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  int arg7 ;
  double arg8 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (int)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (int)jarg7; 
  arg8 = (double)jarg8; 
  {
    try {
      libsumo::Vehicle::moveToXY((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4,arg5,arg6,arg7,arg8);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_moveToXY__SWIG_1___(const char * jarg1, const char * jarg2, int jarg3, double jarg4, double jarg5, double jarg6, int jarg7) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  int arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  int arg7 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (int)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (int)jarg7; 
  {
    try {
      libsumo::Vehicle::moveToXY((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4,arg5,arg6,arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_moveToXY__SWIG_2___(const char * jarg1, const char * jarg2, int jarg3, double jarg4, double jarg5, double jarg6) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  int arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (int)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::Vehicle::moveToXY((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_moveToXY__SWIG_3___(const char * jarg1, const char * jarg2, int jarg3, double jarg4, double jarg5) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  int arg3 ;
  double arg4 ;
  double arg5 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (int)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::Vehicle::moveToXY((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_remove__SWIG_0___(const char * jarg1, char jarg2) {
  std::string *arg1 = 0 ;
  char arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (char)jarg2; 
  {
    try {
      libsumo::Vehicle::remove((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_remove__SWIG_1___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::Vehicle::remove((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_setLine___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::Vehicle::setLine((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_setVia___(const char * jarg1, void * jarg2) {
  std::string *arg1 = 0 ;
  std::vector< std::string > *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< std::string > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::string > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Vehicle::setVia((std::string const &)*arg1,(std::vector< std::string > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_highlight__SWIG_0___(const char * jarg1, void * jarg2, double jarg3, int jarg4, double jarg5, int jarg6) {
  std::string *arg1 = 0 ;
  libsumo::TraCIColor *arg2 = 0 ;
  double arg3 ;
  int arg4 ;
  double arg5 ;
  int arg6 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  
  arg2 = (libsumo::TraCIColor *)(((std::shared_ptr< const libsumo::TraCIColor > *)jarg2) ? ((std::shared_ptr< const libsumo::TraCIColor > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIColor const & reference is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (double)jarg5; 
  arg6 = (int)jarg6; 
  {
    try {
      libsumo::Vehicle::highlight((std::string const &)*arg1,(libsumo::TraCIColor const &)*arg2,arg3,arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_highlight__SWIG_1___(const char * jarg1, void * jarg2, double jarg3, int jarg4, double jarg5) {
  std::string *arg1 = 0 ;
  libsumo::TraCIColor *arg2 = 0 ;
  double arg3 ;
  int arg4 ;
  double arg5 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  
  arg2 = (libsumo::TraCIColor *)(((std::shared_ptr< const libsumo::TraCIColor > *)jarg2) ? ((std::shared_ptr< const libsumo::TraCIColor > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIColor const & reference is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::Vehicle::highlight((std::string const &)*arg1,(libsumo::TraCIColor const &)*arg2,arg3,arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_highlight__SWIG_2___(const char * jarg1, void * jarg2, double jarg3, int jarg4) {
  std::string *arg1 = 0 ;
  libsumo::TraCIColor *arg2 = 0 ;
  double arg3 ;
  int arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  
  arg2 = (libsumo::TraCIColor *)(((std::shared_ptr< const libsumo::TraCIColor > *)jarg2) ? ((std::shared_ptr< const libsumo::TraCIColor > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIColor const & reference is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (int)jarg4; 
  {
    try {
      libsumo::Vehicle::highlight((std::string const &)*arg1,(libsumo::TraCIColor const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_highlight__SWIG_3___(const char * jarg1, void * jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  libsumo::TraCIColor *arg2 = 0 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  
  arg2 = (libsumo::TraCIColor *)(((std::shared_ptr< const libsumo::TraCIColor > *)jarg2) ? ((std::shared_ptr< const libsumo::TraCIColor > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIColor const & reference is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Vehicle::highlight((std::string const &)*arg1,(libsumo::TraCIColor const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_highlight__SWIG_4___(const char * jarg1, void * jarg2) {
  std::string *arg1 = 0 ;
  libsumo::TraCIColor *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  
  arg2 = (libsumo::TraCIColor *)(((std::shared_ptr< const libsumo::TraCIColor > *)jarg2) ? ((std::shared_ptr< const libsumo::TraCIColor > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIColor const & reference is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Vehicle::highlight((std::string const &)*arg1,(libsumo::TraCIColor const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_highlight__SWIG_5___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::Vehicle::highlight((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_dispatchTaxi___(const char * jarg1, void * jarg2) {
  std::string *arg1 = 0 ;
  std::vector< std::string > *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< std::string > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::string > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Vehicle::dispatchTaxi((std::string const &)*arg1,(std::vector< std::string > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_setLength___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::setLength((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_setMaxSpeed___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::setMaxSpeed((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_setVehicleClass___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::Vehicle::setVehicleClass((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_setSpeedFactor___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::setSpeedFactor((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_setAccel___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::setAccel((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_setDecel___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::setDecel((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_setEmergencyDecel___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::setEmergencyDecel((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_setApparentDecel___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::setApparentDecel((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_setImperfection___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::setImperfection((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_setTau___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::setTau((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_setEmissionClass___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::Vehicle::setEmissionClass((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_setShapeClass___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::Vehicle::setShapeClass((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_setWidth___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::setWidth((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_setHeight___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::setHeight((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_setMass___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::setMass((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_setColor___(const char * jarg1, void * jarg2) {
  std::string *arg1 = 0 ;
  libsumo::TraCIColor *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  
  arg2 = (libsumo::TraCIColor *)(((std::shared_ptr< const libsumo::TraCIColor > *)jarg2) ? ((std::shared_ptr< const libsumo::TraCIColor > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIColor const & reference is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Vehicle::setColor((std::string const &)*arg1,(libsumo::TraCIColor const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_setMinGap___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::setMinGap((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_setMinGapLat___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::setMinGapLat((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_setMaxSpeedLat___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::setMaxSpeedLat((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_setLateralAlignment___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::Vehicle::setLateralAlignment((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_setActionStepLength__SWIG_0___(const char * jarg1, double jarg2, unsigned int jarg3) {
  std::string *arg1 = 0 ;
  double arg2 ;
  bool arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  arg3 = jarg3 ? true : false; 
  {
    try {
      libsumo::Vehicle::setActionStepLength((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_setActionStepLength__SWIG_1___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::setActionStepLength((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_setBoardingDuration___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::setBoardingDuration((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_setImpatience___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::setImpatience((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_subscribe__SWIG_0___(const char * jarg1, void * jarg2, double jarg3, double jarg4, void * jarg5) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  libsumo::TraCIResults *arg5 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (libsumo::TraCIResults *)jarg5;
  if (!arg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIResults const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Vehicle::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4,(std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > > const &)*arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_subscribe__SWIG_1___(const char * jarg1, void * jarg2, double jarg3, double jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Vehicle::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_subscribe__SWIG_2___(const char * jarg1, void * jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Vehicle::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_subscribe__SWIG_3___(const char * jarg1, void * jarg2) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Vehicle::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_subscribe__SWIG_4___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::Vehicle::subscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_unsubscribe___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::Vehicle::unsubscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_subscribeContext__SWIG_0___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5, double jarg6, void * jarg7) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  libsumo::TraCIResults *arg7 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (libsumo::TraCIResults *)jarg7;
  if (!arg7) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIResults const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Vehicle::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6,(std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > > const &)*arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_subscribeContext__SWIG_1___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5, double jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::Vehicle::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_subscribeContext__SWIG_2___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::Vehicle::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_subscribeContext__SWIG_3___(const char * jarg1, int jarg2, double jarg3, void * jarg4) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Vehicle::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_subscribeContext__SWIG_4___(const char * jarg1, int jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Vehicle::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_unsubscribeContext___(const char * jarg1, int jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Vehicle::unsubscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getAllSubscriptionResults___() {
  void * jresult ;
  libsumo::SubscriptionResults result;
  
  {
    try {
      result = libsumo::Vehicle::getAllSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::SubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getSubscriptionResults___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::TraCIResults result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Vehicle::getSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::TraCIResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getAllContextSubscriptionResults___() {
  void * jresult ;
  libsumo::ContextSubscriptionResults result;
  
  {
    try {
      result = libsumo::Vehicle::getAllContextSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::ContextSubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_getContextSubscriptionResults___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::SubscriptionResults result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Vehicle::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::SubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_subscribeParameterWithKey__SWIG_0___(const char * jarg1, const char * jarg2, double jarg3, double jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Vehicle::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_subscribeParameterWithKey__SWIG_1___(const char * jarg1, const char * jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Vehicle::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_subscribeParameterWithKey__SWIG_2___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::Vehicle::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_DOMAIN_ID_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::Vehicle::DOMAIN_ID;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_domainID___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::Vehicle::domainID();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_subscribeLeader__SWIG_0___(const char * jarg1, double jarg2, double jarg3, double jarg4) {
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Vehicle::subscribeLeader((std::string const &)*arg1,arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_subscribeLeader__SWIG_1___(const char * jarg1, double jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Vehicle::subscribeLeader((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_subscribeLeader__SWIG_2___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::subscribeLeader((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_subscribeLeader__SWIG_3___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::Vehicle::subscribeLeader((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_addSubscriptionFilterLanes__SWIG_0___(void * jarg1, unsigned int jarg2, double jarg3, double jarg4) {
  std::vector< int > *arg1 = 0 ;
  bool arg2 ;
  double arg3 ;
  double arg4 ;
  
  arg1 = (std::vector< int > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg2 = jarg2 ? true : false; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Vehicle::addSubscriptionFilterLanes((std::vector< int > const &)*arg1,arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_addSubscriptionFilterLanes__SWIG_1___(void * jarg1, unsigned int jarg2, double jarg3) {
  std::vector< int > *arg1 = 0 ;
  bool arg2 ;
  double arg3 ;
  
  arg1 = (std::vector< int > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg2 = jarg2 ? true : false; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Vehicle::addSubscriptionFilterLanes((std::vector< int > const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_addSubscriptionFilterLanes__SWIG_2___(void * jarg1, unsigned int jarg2) {
  std::vector< int > *arg1 = 0 ;
  bool arg2 ;
  
  arg1 = (std::vector< int > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg2 = jarg2 ? true : false; 
  {
    try {
      libsumo::Vehicle::addSubscriptionFilterLanes((std::vector< int > const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_addSubscriptionFilterLanes__SWIG_3___(void * jarg1) {
  std::vector< int > *arg1 = 0 ;
  
  arg1 = (std::vector< int > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Vehicle::addSubscriptionFilterLanes((std::vector< int > const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_addSubscriptionFilterNoOpposite___() {
  {
    try {
      libsumo::Vehicle::addSubscriptionFilterNoOpposite();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_addSubscriptionFilterDownstreamDistance___(double jarg1) {
  double arg1 ;
  
  arg1 = (double)jarg1; 
  {
    try {
      libsumo::Vehicle::addSubscriptionFilterDownstreamDistance(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_addSubscriptionFilterUpstreamDistance___(double jarg1) {
  double arg1 ;
  
  arg1 = (double)jarg1; 
  {
    try {
      libsumo::Vehicle::addSubscriptionFilterUpstreamDistance(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_addSubscriptionFilterCFManeuver__SWIG_0___(double jarg1, double jarg2) {
  double arg1 ;
  double arg2 ;
  
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::addSubscriptionFilterCFManeuver(arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_addSubscriptionFilterCFManeuver__SWIG_1___(double jarg1) {
  double arg1 ;
  
  arg1 = (double)jarg1; 
  {
    try {
      libsumo::Vehicle::addSubscriptionFilterCFManeuver(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_addSubscriptionFilterCFManeuver__SWIG_2___() {
  {
    try {
      libsumo::Vehicle::addSubscriptionFilterCFManeuver();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_addSubscriptionFilterLCManeuver__SWIG_0___(int jarg1, unsigned int jarg2, double jarg3, double jarg4) {
  int arg1 ;
  bool arg2 ;
  double arg3 ;
  double arg4 ;
  
  arg1 = (int)jarg1; 
  arg2 = jarg2 ? true : false; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Vehicle::addSubscriptionFilterLCManeuver(arg1,arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_addSubscriptionFilterLCManeuver__SWIG_1___(int jarg1, unsigned int jarg2, double jarg3) {
  int arg1 ;
  bool arg2 ;
  double arg3 ;
  
  arg1 = (int)jarg1; 
  arg2 = jarg2 ? true : false; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Vehicle::addSubscriptionFilterLCManeuver(arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_addSubscriptionFilterLCManeuver__SWIG_2___(int jarg1, unsigned int jarg2) {
  int arg1 ;
  bool arg2 ;
  
  arg1 = (int)jarg1; 
  arg2 = jarg2 ? true : false; 
  {
    try {
      libsumo::Vehicle::addSubscriptionFilterLCManeuver(arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_addSubscriptionFilterLCManeuver__SWIG_3___(int jarg1) {
  int arg1 ;
  
  arg1 = (int)jarg1; 
  {
    try {
      libsumo::Vehicle::addSubscriptionFilterLCManeuver(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_addSubscriptionFilterLCManeuver__SWIG_4___() {
  {
    try {
      libsumo::Vehicle::addSubscriptionFilterLCManeuver();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_addSubscriptionFilterLeadFollow___(void * jarg1) {
  std::vector< int > *arg1 = 0 ;
  
  arg1 = (std::vector< int > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Vehicle::addSubscriptionFilterLeadFollow((std::vector< int > const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_addSubscriptionFilterTurn__SWIG_0___(double jarg1, double jarg2) {
  double arg1 ;
  double arg2 ;
  
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::addSubscriptionFilterTurn(arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_addSubscriptionFilterTurn__SWIG_1___(double jarg1) {
  double arg1 ;
  
  arg1 = (double)jarg1; 
  {
    try {
      libsumo::Vehicle::addSubscriptionFilterTurn(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_addSubscriptionFilterTurn__SWIG_2___() {
  {
    try {
      libsumo::Vehicle::addSubscriptionFilterTurn();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_addSubscriptionFilterVClass___(void * jarg1) {
  std::vector< std::string > *arg1 = 0 ;
  
  arg1 = (std::vector< std::string > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::string > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Vehicle::addSubscriptionFilterVClass((std::vector< std::string > const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_addSubscriptionFilterVType___(void * jarg1) {
  std::vector< std::string > *arg1 = 0 ;
  
  arg1 = (std::vector< std::string > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::string > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Vehicle::addSubscriptionFilterVType((std::vector< std::string > const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_addSubscriptionFilterFieldOfVision___(double jarg1) {
  double arg1 ;
  
  arg1 = (double)jarg1; 
  {
    try {
      libsumo::Vehicle::addSubscriptionFilterFieldOfVision(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_addSubscriptionFilterLateralDistance__SWIG_0___(double jarg1, double jarg2, double jarg3) {
  double arg1 ;
  double arg2 ;
  double arg3 ;
  
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Vehicle::addSubscriptionFilterLateralDistance(arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_addSubscriptionFilterLateralDistance__SWIG_1___(double jarg1, double jarg2) {
  double arg1 ;
  double arg2 ;
  
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Vehicle::addSubscriptionFilterLateralDistance(arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Vehicle_addSubscriptionFilterLateralDistance__SWIG_2___(double jarg1) {
  double arg1 ;
  
  arg1 = (double)jarg1; 
  {
    try {
      libsumo::Vehicle::addSubscriptionFilterLateralDistance(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_Vehicle___(void * jarg1) {
  libsumo::Vehicle *arg1 = (libsumo::Vehicle *) 0 ;
  
  arg1 = (libsumo::Vehicle *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_getSpeed___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Person::getSpeed((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_getPosition__SWIG_0___(const char * jarg1, unsigned int jarg2) {
  void * jresult ;
  std::string *arg1 = 0 ;
  bool arg2 ;
  libsumo::TraCIPosition result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = jarg2 ? true : false; 
  {
    try {
      result = libsumo::Person::getPosition((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr<  libsumo::TraCIPosition >(new libsumo::TraCIPosition(result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_getPosition__SWIG_1___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::TraCIPosition result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Person::getPosition((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr<  libsumo::TraCIPosition >(new libsumo::TraCIPosition(result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_getPosition3D___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::TraCIPosition result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Person::getPosition3D((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr<  libsumo::TraCIPosition >(new libsumo::TraCIPosition(result)); 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_getRoadID___(const char * jarg1) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Person::getRoadID((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_getLaneID___(const char * jarg1) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Person::getLaneID((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_getTypeID___(const char * jarg1) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Person::getTypeID((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_getWaitingTime___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Person::getWaitingTime((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_getNextEdge___(const char * jarg1) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Person::getNextEdge((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_getVehicle___(const char * jarg1) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Person::getVehicle((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_getRemainingStages___(const char * jarg1) {
  int jresult ;
  std::string *arg1 = 0 ;
  int result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (int)libsumo::Person::getRemainingStages((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_getStage__SWIG_0___(const char * jarg1, int jarg2) {
  void * jresult ;
  std::string *arg1 = 0 ;
  int arg2 ;
  libsumo::TraCIStage result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  {
    try {
      result = libsumo::Person::getStage((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr<  libsumo::TraCIStage >(new libsumo::TraCIStage(result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_getStage__SWIG_1___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::TraCIStage result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Person::getStage((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr<  libsumo::TraCIStage >(new libsumo::TraCIStage(result)); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_getEdges__SWIG_0___(const char * jarg1, int jarg2) {
  void * jresult ;
  std::string *arg1 = 0 ;
  int arg2 ;
  std::vector< std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  {
    try {
      result = libsumo::Person::getEdges((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_getEdges__SWIG_1___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Person::getEdges((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_getAngle___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Person::getAngle((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_getSlope___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Person::getSlope((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_getLanePosition___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Person::getLanePosition((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_getWalkingDistance__SWIG_0___(const char * jarg1, const char * jarg2, double jarg3, int jarg4) {
  double jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  int arg4 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  arg4 = (int)jarg4; 
  {
    try {
      result = (double)libsumo::Person::getWalkingDistance((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_getWalkingDistance__SWIG_1___(const char * jarg1, const char * jarg2, double jarg3) {
  double jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  {
    try {
      result = (double)libsumo::Person::getWalkingDistance((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_getWalkingDistance2D___(const char * jarg1, double jarg2, double jarg3) {
  double jresult ;
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      result = (double)libsumo::Person::getWalkingDistance2D((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_getTaxiReservations__SWIG_0___(int jarg1) {
  void * jresult ;
  int arg1 ;
  std::vector< libsumo::TraCIReservation > result;
  
  arg1 = (int)jarg1; 
  {
    try {
      result = libsumo::Person::getTaxiReservations(arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< libsumo::TraCIReservation >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_getTaxiReservations__SWIG_1___() {
  void * jresult ;
  std::vector< libsumo::TraCIReservation > result;
  
  {
    try {
      result = libsumo::Person::getTaxiReservations();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< libsumo::TraCIReservation >(result); 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_splitTaxiReservation___(const char * jarg1, void * jarg2) {
  const char * jresult ;
  std::string arg1 ;
  std::vector< std::string > *arg2 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  (&arg1)->assign(jarg1); 
  arg2 = (std::vector< std::string > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::string > const & is null", 0);
    return 0;
  } 
  {
    try {
      result = libsumo::Person::splitTaxiReservation(SWIG_STD_MOVE(arg1),(std::vector< std::string > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_getIDList___() {
  void * jresult ;
  std::vector< std::string > result;
  
  {
    try {
      result = libsumo::Person::getIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_getIDCount___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::Person::getIDCount();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_getParameter___(const char * jarg1, const char * jarg2) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = libsumo::Person::getParameter((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_getParameterWithKey___(const char * jarg1, const char * jarg2) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::pair< std::string,std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = libsumo::Person::getParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::pair< std::string,std::string >(result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_setParameter___(const char * jarg1, const char * jarg2, const char * jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  {
    try {
      libsumo::Person::setParameter((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_getLength___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Person::getLength((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_getMaxSpeed___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Person::getMaxSpeed((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_getVehicleClass___(const char * jarg1) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Person::getVehicleClass((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_getSpeedFactor___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Person::getSpeedFactor((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_getAccel___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Person::getAccel((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_getDecel___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Person::getDecel((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_getEmergencyDecel___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Person::getEmergencyDecel((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_getApparentDecel___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Person::getApparentDecel((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_getImperfection___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Person::getImperfection((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_getTau___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Person::getTau((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_getEmissionClass___(const char * jarg1) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Person::getEmissionClass((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_getShapeClass___(const char * jarg1) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Person::getShapeClass((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_getMinGap___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Person::getMinGap((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_getWidth___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Person::getWidth((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_getHeight___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Person::getHeight((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_getMass___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Person::getMass((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_getColor___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::TraCIColor result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Person::getColor((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::shared_ptr<  libsumo::TraCIColor >(new libsumo::TraCIColor(result)); 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_getMinGapLat___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Person::getMinGapLat((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_getMaxSpeedLat___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Person::getMaxSpeedLat((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_getLateralAlignment___(const char * jarg1) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Person::getLateralAlignment((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_getPersonCapacity___(const char * jarg1) {
  int jresult ;
  std::string *arg1 = 0 ;
  int result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (int)libsumo::Person::getPersonCapacity((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_getActionStepLength___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Person::getActionStepLength((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_getSpeedDeviation___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Person::getSpeedDeviation((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_getBoardingDuration___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Person::getBoardingDuration((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_getImpatience___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Person::getImpatience((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_add__SWIG_0___(const char * jarg1, const char * jarg2, double jarg3, double jarg4, const char * jarg5) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  std::string arg5 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  if (!jarg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  (&arg5)->assign(jarg5); 
  {
    try {
      libsumo::Person::add((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4,SWIG_STD_MOVE(arg5));
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_add__SWIG_1___(const char * jarg1, const char * jarg2, double jarg3, double jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Person::add((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_add__SWIG_2___(const char * jarg1, const char * jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Person::add((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_appendStage___(const char * jarg1, void * jarg2) {
  std::string *arg1 = 0 ;
  libsumo::TraCIStage *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  
  arg2 = (libsumo::TraCIStage *)(((std::shared_ptr< const libsumo::TraCIStage > *)jarg2) ? ((std::shared_ptr< const libsumo::TraCIStage > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIStage const & reference is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Person::appendStage((std::string const &)*arg1,(libsumo::TraCIStage const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_replaceStage___(const char * jarg1, int jarg2, void * jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  libsumo::TraCIStage *arg3 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  
  arg3 = (libsumo::TraCIStage *)(((std::shared_ptr< const libsumo::TraCIStage > *)jarg3) ? ((std::shared_ptr< const libsumo::TraCIStage > *)jarg3)->get() : 0);
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIStage const & reference is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Person::replaceStage((std::string const &)*arg1,arg2,(libsumo::TraCIStage const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_appendWaitingStage__SWIG_0___(const char * jarg1, double jarg2, const char * jarg3, const char * jarg4) {
  std::string *arg1 = 0 ;
  double arg2 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  if (!jarg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg4_str(jarg4);
  arg4 = &arg4_str; 
  {
    try {
      libsumo::Person::appendWaitingStage((std::string const &)*arg1,arg2,(std::string const &)*arg3,(std::string const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_appendWaitingStage__SWIG_1___(const char * jarg1, double jarg2, const char * jarg3) {
  std::string *arg1 = 0 ;
  double arg2 ;
  std::string *arg3 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  {
    try {
      libsumo::Person::appendWaitingStage((std::string const &)*arg1,arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_appendWaitingStage__SWIG_2___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Person::appendWaitingStage((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_appendWalkingStage__SWIG_0___(const char * jarg1, void * jarg2, double jarg3, double jarg4, double jarg5, const char * jarg6) {
  std::string *arg1 = 0 ;
  std::vector< std::string > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  std::string *arg6 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< std::string > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::string > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  if (!jarg6) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg6_str(jarg6);
  arg6 = &arg6_str; 
  {
    try {
      libsumo::Person::appendWalkingStage((std::string const &)*arg1,(std::vector< std::string > const &)*arg2,arg3,arg4,arg5,(std::string const &)*arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_appendWalkingStage__SWIG_1___(const char * jarg1, void * jarg2, double jarg3, double jarg4, double jarg5) {
  std::string *arg1 = 0 ;
  std::vector< std::string > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< std::string > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::string > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::Person::appendWalkingStage((std::string const &)*arg1,(std::vector< std::string > const &)*arg2,arg3,arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_appendWalkingStage__SWIG_2___(const char * jarg1, void * jarg2, double jarg3, double jarg4) {
  std::string *arg1 = 0 ;
  std::vector< std::string > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< std::string > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::string > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Person::appendWalkingStage((std::string const &)*arg1,(std::vector< std::string > const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_appendWalkingStage__SWIG_3___(const char * jarg1, void * jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  std::vector< std::string > *arg2 = 0 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< std::string > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::string > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Person::appendWalkingStage((std::string const &)*arg1,(std::vector< std::string > const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_appendDrivingStage__SWIG_0___(const char * jarg1, const char * jarg2, const char * jarg3, const char * jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  if (!jarg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg4_str(jarg4);
  arg4 = &arg4_str; 
  {
    try {
      libsumo::Person::appendDrivingStage((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_appendDrivingStage__SWIG_1___(const char * jarg1, const char * jarg2, const char * jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  {
    try {
      libsumo::Person::appendDrivingStage((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_removeStage___(const char * jarg1, int jarg2) {
  std::string *arg1 = 0 ;
  int arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  {
    try {
      libsumo::Person::removeStage((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_rerouteTraveltime___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::Person::rerouteTraveltime((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_moveTo__SWIG_0___(const char * jarg1, const char * jarg2, double jarg3, double jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Person::moveTo((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_moveTo__SWIG_1___(const char * jarg1, const char * jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Person::moveTo((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_moveToXY__SWIG_0___(const char * jarg1, const char * jarg2, double jarg3, double jarg4, double jarg5, int jarg6, double jarg7) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  int arg6 ;
  double arg7 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  arg6 = (int)jarg6; 
  arg7 = (double)jarg7; 
  {
    try {
      libsumo::Person::moveToXY((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4,arg5,arg6,arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_moveToXY__SWIG_1___(const char * jarg1, const char * jarg2, double jarg3, double jarg4, double jarg5, int jarg6) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  int arg6 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  arg6 = (int)jarg6; 
  {
    try {
      libsumo::Person::moveToXY((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_moveToXY__SWIG_2___(const char * jarg1, const char * jarg2, double jarg3, double jarg4, double jarg5) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::Person::moveToXY((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_moveToXY__SWIG_3___(const char * jarg1, const char * jarg2, double jarg3, double jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Person::moveToXY((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_remove__SWIG_0___(const char * jarg1, char jarg2) {
  std::string *arg1 = 0 ;
  char arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (char)jarg2; 
  {
    try {
      libsumo::Person::remove((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_remove__SWIG_1___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::Person::remove((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_setSpeed___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Person::setSpeed((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_setType___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::Person::setType((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_setLength___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Person::setLength((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_setMaxSpeed___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Person::setMaxSpeed((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_setVehicleClass___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::Person::setVehicleClass((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_setSpeedFactor___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Person::setSpeedFactor((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_setAccel___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Person::setAccel((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_setDecel___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Person::setDecel((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_setEmergencyDecel___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Person::setEmergencyDecel((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_setApparentDecel___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Person::setApparentDecel((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_setImperfection___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Person::setImperfection((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_setTau___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Person::setTau((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_setEmissionClass___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::Person::setEmissionClass((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_setShapeClass___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::Person::setShapeClass((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_setWidth___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Person::setWidth((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_setHeight___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Person::setHeight((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_setMass___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Person::setMass((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_setColor___(const char * jarg1, void * jarg2) {
  std::string *arg1 = 0 ;
  libsumo::TraCIColor *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  
  arg2 = (libsumo::TraCIColor *)(((std::shared_ptr< const libsumo::TraCIColor > *)jarg2) ? ((std::shared_ptr< const libsumo::TraCIColor > *)jarg2)->get() : 0);
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIColor const & reference is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Person::setColor((std::string const &)*arg1,(libsumo::TraCIColor const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_setMinGap___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Person::setMinGap((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_setMinGapLat___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Person::setMinGapLat((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_setMaxSpeedLat___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Person::setMaxSpeedLat((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_setLateralAlignment___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::Person::setLateralAlignment((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_setActionStepLength__SWIG_0___(const char * jarg1, double jarg2, unsigned int jarg3) {
  std::string *arg1 = 0 ;
  double arg2 ;
  bool arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  arg3 = jarg3 ? true : false; 
  {
    try {
      libsumo::Person::setActionStepLength((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_setActionStepLength__SWIG_1___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Person::setActionStepLength((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_setBoardingDuration___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Person::setBoardingDuration((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_setImpatience___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::Person::setImpatience((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_subscribe__SWIG_0___(const char * jarg1, void * jarg2, double jarg3, double jarg4, void * jarg5) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  libsumo::TraCIResults *arg5 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (libsumo::TraCIResults *)jarg5;
  if (!arg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIResults const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Person::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4,(std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > > const &)*arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_subscribe__SWIG_1___(const char * jarg1, void * jarg2, double jarg3, double jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Person::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_subscribe__SWIG_2___(const char * jarg1, void * jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Person::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_subscribe__SWIG_3___(const char * jarg1, void * jarg2) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Person::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_subscribe__SWIG_4___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::Person::subscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_unsubscribe___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::Person::unsubscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_subscribeContext__SWIG_0___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5, double jarg6, void * jarg7) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  libsumo::TraCIResults *arg7 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (libsumo::TraCIResults *)jarg7;
  if (!arg7) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIResults const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Person::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6,(std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > > const &)*arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_subscribeContext__SWIG_1___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5, double jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::Person::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_subscribeContext__SWIG_2___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::Person::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_subscribeContext__SWIG_3___(const char * jarg1, int jarg2, double jarg3, void * jarg4) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Person::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_subscribeContext__SWIG_4___(const char * jarg1, int jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Person::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_unsubscribeContext___(const char * jarg1, int jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Person::unsubscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_getAllSubscriptionResults___() {
  void * jresult ;
  libsumo::SubscriptionResults result;
  
  {
    try {
      result = libsumo::Person::getAllSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::SubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_getSubscriptionResults___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::TraCIResults result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Person::getSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::TraCIResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_getAllContextSubscriptionResults___() {
  void * jresult ;
  libsumo::ContextSubscriptionResults result;
  
  {
    try {
      result = libsumo::Person::getAllContextSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::ContextSubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_getContextSubscriptionResults___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::SubscriptionResults result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Person::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::SubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_subscribeParameterWithKey__SWIG_0___(const char * jarg1, const char * jarg2, double jarg3, double jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Person::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_subscribeParameterWithKey__SWIG_1___(const char * jarg1, const char * jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Person::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_subscribeParameterWithKey__SWIG_2___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::Person::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_DOMAIN_ID_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::Person::DOMAIN_ID;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Person_domainID___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::Person::domainID();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_Person___(void * jarg1) {
  libsumo::Person *arg1 = (libsumo::Person *) 0 ;
  
  arg1 = (libsumo::Person *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Calibrator_getEdgeID___(const char * jarg1) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Calibrator::getEdgeID((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Calibrator_getLaneID___(const char * jarg1) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Calibrator::getLaneID((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Calibrator_getVehsPerHour___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Calibrator::getVehsPerHour((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Calibrator_getSpeed___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Calibrator::getSpeed((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Calibrator_getTypeID___(const char * jarg1) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Calibrator::getTypeID((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Calibrator_getBegin___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Calibrator::getBegin((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Calibrator_getEnd___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::Calibrator::getEnd((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Calibrator_getRouteID___(const char * jarg1) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Calibrator::getRouteID((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Calibrator_getRouteProbeID___(const char * jarg1) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Calibrator::getRouteProbeID((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Calibrator_getVTypes___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Calibrator::getVTypes((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Calibrator_getPassed___(const char * jarg1) {
  int jresult ;
  std::string *arg1 = 0 ;
  int result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (int)libsumo::Calibrator::getPassed((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Calibrator_getInserted___(const char * jarg1) {
  int jresult ;
  std::string *arg1 = 0 ;
  int result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (int)libsumo::Calibrator::getInserted((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Calibrator_getRemoved___(const char * jarg1) {
  int jresult ;
  std::string *arg1 = 0 ;
  int result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (int)libsumo::Calibrator::getRemoved((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Calibrator_getIDList___() {
  void * jresult ;
  std::vector< std::string > result;
  
  {
    try {
      result = libsumo::Calibrator::getIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Calibrator_getIDCount___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::Calibrator::getIDCount();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Calibrator_getParameter___(const char * jarg1, const char * jarg2) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = libsumo::Calibrator::getParameter((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Calibrator_getParameterWithKey___(const char * jarg1, const char * jarg2) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::pair< std::string,std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = libsumo::Calibrator::getParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::pair< std::string,std::string >(result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Calibrator_setParameter___(const char * jarg1, const char * jarg2, const char * jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  {
    try {
      libsumo::Calibrator::setParameter((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Calibrator_subscribe__SWIG_0___(const char * jarg1, void * jarg2, double jarg3, double jarg4, void * jarg5) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  libsumo::TraCIResults *arg5 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (libsumo::TraCIResults *)jarg5;
  if (!arg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIResults const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Calibrator::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4,(std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > > const &)*arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Calibrator_subscribe__SWIG_1___(const char * jarg1, void * jarg2, double jarg3, double jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Calibrator::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Calibrator_subscribe__SWIG_2___(const char * jarg1, void * jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Calibrator::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Calibrator_subscribe__SWIG_3___(const char * jarg1, void * jarg2) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Calibrator::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Calibrator_subscribe__SWIG_4___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::Calibrator::subscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Calibrator_unsubscribe___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::Calibrator::unsubscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Calibrator_subscribeContext__SWIG_0___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5, double jarg6, void * jarg7) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  libsumo::TraCIResults *arg7 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (libsumo::TraCIResults *)jarg7;
  if (!arg7) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIResults const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Calibrator::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6,(std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > > const &)*arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Calibrator_subscribeContext__SWIG_1___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5, double jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::Calibrator::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Calibrator_subscribeContext__SWIG_2___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::Calibrator::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Calibrator_subscribeContext__SWIG_3___(const char * jarg1, int jarg2, double jarg3, void * jarg4) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Calibrator::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Calibrator_subscribeContext__SWIG_4___(const char * jarg1, int jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Calibrator::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Calibrator_unsubscribeContext___(const char * jarg1, int jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Calibrator::unsubscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Calibrator_getAllSubscriptionResults___() {
  void * jresult ;
  libsumo::SubscriptionResults result;
  
  {
    try {
      result = libsumo::Calibrator::getAllSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::SubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Calibrator_getSubscriptionResults___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::TraCIResults result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Calibrator::getSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::TraCIResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Calibrator_getAllContextSubscriptionResults___() {
  void * jresult ;
  libsumo::ContextSubscriptionResults result;
  
  {
    try {
      result = libsumo::Calibrator::getAllContextSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::ContextSubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Calibrator_getContextSubscriptionResults___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::SubscriptionResults result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Calibrator::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::SubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Calibrator_subscribeParameterWithKey__SWIG_0___(const char * jarg1, const char * jarg2, double jarg3, double jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Calibrator::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Calibrator_subscribeParameterWithKey__SWIG_1___(const char * jarg1, const char * jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Calibrator::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Calibrator_subscribeParameterWithKey__SWIG_2___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::Calibrator::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Calibrator_DOMAIN_ID_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::Calibrator::DOMAIN_ID;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Calibrator_domainID___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::Calibrator::domainID();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Calibrator_setFlow__SWIG_0___(const char * jarg1, double jarg2, double jarg3, double jarg4, double jarg5, const char * jarg6, const char * jarg7, const char * jarg8, const char * jarg9) {
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  std::string *arg6 = 0 ;
  std::string *arg7 = 0 ;
  std::string *arg8 = 0 ;
  std::string *arg9 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  if (!jarg6) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg6_str(jarg6);
  arg6 = &arg6_str; 
  if (!jarg7) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg7_str(jarg7);
  arg7 = &arg7_str; 
  if (!jarg8) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg8_str(jarg8);
  arg8 = &arg8_str; 
  if (!jarg9) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg9_str(jarg9);
  arg9 = &arg9_str; 
  {
    try {
      libsumo::Calibrator::setFlow((std::string const &)*arg1,arg2,arg3,arg4,arg5,(std::string const &)*arg6,(std::string const &)*arg7,(std::string const &)*arg8,(std::string const &)*arg9);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Calibrator_setFlow__SWIG_1___(const char * jarg1, double jarg2, double jarg3, double jarg4, double jarg5, const char * jarg6, const char * jarg7, const char * jarg8) {
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  std::string *arg6 = 0 ;
  std::string *arg7 = 0 ;
  std::string *arg8 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  if (!jarg6) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg6_str(jarg6);
  arg6 = &arg6_str; 
  if (!jarg7) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg7_str(jarg7);
  arg7 = &arg7_str; 
  if (!jarg8) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg8_str(jarg8);
  arg8 = &arg8_str; 
  {
    try {
      libsumo::Calibrator::setFlow((std::string const &)*arg1,arg2,arg3,arg4,arg5,(std::string const &)*arg6,(std::string const &)*arg7,(std::string const &)*arg8);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Calibrator_setFlow__SWIG_2___(const char * jarg1, double jarg2, double jarg3, double jarg4, double jarg5, const char * jarg6, const char * jarg7) {
  std::string *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  std::string *arg6 = 0 ;
  std::string *arg7 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  if (!jarg6) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg6_str(jarg6);
  arg6 = &arg6_str; 
  if (!jarg7) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg7_str(jarg7);
  arg7 = &arg7_str; 
  {
    try {
      libsumo::Calibrator::setFlow((std::string const &)*arg1,arg2,arg3,arg4,arg5,(std::string const &)*arg6,(std::string const &)*arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_Calibrator___(void * jarg1) {
  libsumo::Calibrator *arg1 = (libsumo::Calibrator *) 0 ;
  
  arg1 = (libsumo::Calibrator *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_BusStop_getLaneID___(const char * jarg1) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::BusStop::getLaneID((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_BusStop_getStartPos___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::BusStop::getStartPos((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_BusStop_getEndPos___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::BusStop::getEndPos((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_BusStop_getName___(const char * jarg1) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::BusStop::getName((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_BusStop_getVehicleCount___(const char * jarg1) {
  int jresult ;
  std::string *arg1 = 0 ;
  int result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (int)libsumo::BusStop::getVehicleCount((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_BusStop_getVehicleIDs___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::BusStop::getVehicleIDs((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_BusStop_getPersonCount___(const char * jarg1) {
  int jresult ;
  std::string *arg1 = 0 ;
  int result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (int)libsumo::BusStop::getPersonCount((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_BusStop_getPersonIDs___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::BusStop::getPersonIDs((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_BusStop_getIDList___() {
  void * jresult ;
  std::vector< std::string > result;
  
  {
    try {
      result = libsumo::BusStop::getIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_BusStop_getIDCount___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::BusStop::getIDCount();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_BusStop_getParameter___(const char * jarg1, const char * jarg2) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = libsumo::BusStop::getParameter((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_BusStop_getParameterWithKey___(const char * jarg1, const char * jarg2) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::pair< std::string,std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = libsumo::BusStop::getParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::pair< std::string,std::string >(result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_BusStop_setParameter___(const char * jarg1, const char * jarg2, const char * jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  {
    try {
      libsumo::BusStop::setParameter((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_BusStop_subscribe__SWIG_0___(const char * jarg1, void * jarg2, double jarg3, double jarg4, void * jarg5) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  libsumo::TraCIResults *arg5 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (libsumo::TraCIResults *)jarg5;
  if (!arg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIResults const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::BusStop::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4,(std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > > const &)*arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_BusStop_subscribe__SWIG_1___(const char * jarg1, void * jarg2, double jarg3, double jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::BusStop::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_BusStop_subscribe__SWIG_2___(const char * jarg1, void * jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::BusStop::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_BusStop_subscribe__SWIG_3___(const char * jarg1, void * jarg2) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::BusStop::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_BusStop_subscribe__SWIG_4___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::BusStop::subscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_BusStop_unsubscribe___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::BusStop::unsubscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_BusStop_subscribeContext__SWIG_0___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5, double jarg6, void * jarg7) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  libsumo::TraCIResults *arg7 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (libsumo::TraCIResults *)jarg7;
  if (!arg7) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIResults const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::BusStop::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6,(std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > > const &)*arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_BusStop_subscribeContext__SWIG_1___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5, double jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::BusStop::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_BusStop_subscribeContext__SWIG_2___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::BusStop::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_BusStop_subscribeContext__SWIG_3___(const char * jarg1, int jarg2, double jarg3, void * jarg4) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::BusStop::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_BusStop_subscribeContext__SWIG_4___(const char * jarg1, int jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::BusStop::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_BusStop_unsubscribeContext___(const char * jarg1, int jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::BusStop::unsubscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_BusStop_getAllSubscriptionResults___() {
  void * jresult ;
  libsumo::SubscriptionResults result;
  
  {
    try {
      result = libsumo::BusStop::getAllSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::SubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_BusStop_getSubscriptionResults___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::TraCIResults result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::BusStop::getSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::TraCIResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_BusStop_getAllContextSubscriptionResults___() {
  void * jresult ;
  libsumo::ContextSubscriptionResults result;
  
  {
    try {
      result = libsumo::BusStop::getAllContextSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::ContextSubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_BusStop_getContextSubscriptionResults___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::SubscriptionResults result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::BusStop::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::SubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_BusStop_subscribeParameterWithKey__SWIG_0___(const char * jarg1, const char * jarg2, double jarg3, double jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::BusStop::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_BusStop_subscribeParameterWithKey__SWIG_1___(const char * jarg1, const char * jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::BusStop::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_BusStop_subscribeParameterWithKey__SWIG_2___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::BusStop::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_BusStop_DOMAIN_ID_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::BusStop::DOMAIN_ID;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_BusStop_domainID___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::BusStop::domainID();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_BusStop___(void * jarg1) {
  libsumo::BusStop *arg1 = (libsumo::BusStop *) 0 ;
  
  arg1 = (libsumo::BusStop *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ParkingArea_getLaneID___(const char * jarg1) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::ParkingArea::getLaneID((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ParkingArea_getStartPos___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::ParkingArea::getStartPos((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ParkingArea_getEndPos___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::ParkingArea::getEndPos((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ParkingArea_getName___(const char * jarg1) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::ParkingArea::getName((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ParkingArea_getVehicleCount___(const char * jarg1) {
  int jresult ;
  std::string *arg1 = 0 ;
  int result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (int)libsumo::ParkingArea::getVehicleCount((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ParkingArea_getVehicleIDs___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::ParkingArea::getVehicleIDs((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ParkingArea_getAcceptedBadges___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::ParkingArea::getAcceptedBadges((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ParkingArea_getIDList___() {
  void * jresult ;
  std::vector< std::string > result;
  
  {
    try {
      result = libsumo::ParkingArea::getIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ParkingArea_getIDCount___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::ParkingArea::getIDCount();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ParkingArea_getParameter___(const char * jarg1, const char * jarg2) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = libsumo::ParkingArea::getParameter((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ParkingArea_getParameterWithKey___(const char * jarg1, const char * jarg2) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::pair< std::string,std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = libsumo::ParkingArea::getParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::pair< std::string,std::string >(result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ParkingArea_setParameter___(const char * jarg1, const char * jarg2, const char * jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  {
    try {
      libsumo::ParkingArea::setParameter((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ParkingArea_subscribe__SWIG_0___(const char * jarg1, void * jarg2, double jarg3, double jarg4, void * jarg5) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  libsumo::TraCIResults *arg5 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (libsumo::TraCIResults *)jarg5;
  if (!arg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIResults const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::ParkingArea::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4,(std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > > const &)*arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ParkingArea_subscribe__SWIG_1___(const char * jarg1, void * jarg2, double jarg3, double jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::ParkingArea::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ParkingArea_subscribe__SWIG_2___(const char * jarg1, void * jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::ParkingArea::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ParkingArea_subscribe__SWIG_3___(const char * jarg1, void * jarg2) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::ParkingArea::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ParkingArea_subscribe__SWIG_4___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::ParkingArea::subscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ParkingArea_unsubscribe___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::ParkingArea::unsubscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ParkingArea_subscribeContext__SWIG_0___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5, double jarg6, void * jarg7) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  libsumo::TraCIResults *arg7 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (libsumo::TraCIResults *)jarg7;
  if (!arg7) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIResults const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::ParkingArea::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6,(std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > > const &)*arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ParkingArea_subscribeContext__SWIG_1___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5, double jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::ParkingArea::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ParkingArea_subscribeContext__SWIG_2___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::ParkingArea::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ParkingArea_subscribeContext__SWIG_3___(const char * jarg1, int jarg2, double jarg3, void * jarg4) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::ParkingArea::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ParkingArea_subscribeContext__SWIG_4___(const char * jarg1, int jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::ParkingArea::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ParkingArea_unsubscribeContext___(const char * jarg1, int jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::ParkingArea::unsubscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ParkingArea_getAllSubscriptionResults___() {
  void * jresult ;
  libsumo::SubscriptionResults result;
  
  {
    try {
      result = libsumo::ParkingArea::getAllSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::SubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ParkingArea_getSubscriptionResults___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::TraCIResults result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::ParkingArea::getSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::TraCIResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ParkingArea_getAllContextSubscriptionResults___() {
  void * jresult ;
  libsumo::ContextSubscriptionResults result;
  
  {
    try {
      result = libsumo::ParkingArea::getAllContextSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::ContextSubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ParkingArea_getContextSubscriptionResults___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::SubscriptionResults result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::ParkingArea::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::SubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ParkingArea_subscribeParameterWithKey__SWIG_0___(const char * jarg1, const char * jarg2, double jarg3, double jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::ParkingArea::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ParkingArea_subscribeParameterWithKey__SWIG_1___(const char * jarg1, const char * jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::ParkingArea::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ParkingArea_subscribeParameterWithKey__SWIG_2___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::ParkingArea::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ParkingArea_DOMAIN_ID_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::ParkingArea::DOMAIN_ID;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ParkingArea_domainID___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::ParkingArea::domainID();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ParkingArea_setAcceptedBadges___(const char * jarg1, void * jarg2) {
  std::string *arg1 = 0 ;
  std::vector< std::string > *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< std::string > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< std::string > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::ParkingArea::setAcceptedBadges((std::string const &)*arg1,(std::vector< std::string > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_ParkingArea___(void * jarg1) {
  libsumo::ParkingArea *arg1 = (libsumo::ParkingArea *) 0 ;
  
  arg1 = (libsumo::ParkingArea *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ChargingStation_getLaneID___(const char * jarg1) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::ChargingStation::getLaneID((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ChargingStation_getStartPos___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::ChargingStation::getStartPos((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ChargingStation_getEndPos___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::ChargingStation::getEndPos((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ChargingStation_getName___(const char * jarg1) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::ChargingStation::getName((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ChargingStation_getVehicleCount___(const char * jarg1) {
  int jresult ;
  std::string *arg1 = 0 ;
  int result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (int)libsumo::ChargingStation::getVehicleCount((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ChargingStation_getVehicleIDs___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::ChargingStation::getVehicleIDs((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ChargingStation_getChargingPower___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::ChargingStation::getChargingPower((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ChargingStation_getEfficiency___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::ChargingStation::getEfficiency((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ChargingStation_getChargeDelay___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::ChargingStation::getChargeDelay((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ChargingStation_getChargeInTransit___(const char * jarg1) {
  int jresult ;
  std::string *arg1 = 0 ;
  int result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (int)libsumo::ChargingStation::getChargeInTransit((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ChargingStation_getIDList___() {
  void * jresult ;
  std::vector< std::string > result;
  
  {
    try {
      result = libsumo::ChargingStation::getIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ChargingStation_getIDCount___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::ChargingStation::getIDCount();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ChargingStation_getParameter___(const char * jarg1, const char * jarg2) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = libsumo::ChargingStation::getParameter((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ChargingStation_getParameterWithKey___(const char * jarg1, const char * jarg2) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::pair< std::string,std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = libsumo::ChargingStation::getParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::pair< std::string,std::string >(result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ChargingStation_setParameter___(const char * jarg1, const char * jarg2, const char * jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  {
    try {
      libsumo::ChargingStation::setParameter((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ChargingStation_subscribe__SWIG_0___(const char * jarg1, void * jarg2, double jarg3, double jarg4, void * jarg5) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  libsumo::TraCIResults *arg5 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (libsumo::TraCIResults *)jarg5;
  if (!arg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIResults const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::ChargingStation::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4,(std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > > const &)*arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ChargingStation_subscribe__SWIG_1___(const char * jarg1, void * jarg2, double jarg3, double jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::ChargingStation::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ChargingStation_subscribe__SWIG_2___(const char * jarg1, void * jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::ChargingStation::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ChargingStation_subscribe__SWIG_3___(const char * jarg1, void * jarg2) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::ChargingStation::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ChargingStation_subscribe__SWIG_4___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::ChargingStation::subscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ChargingStation_unsubscribe___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::ChargingStation::unsubscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ChargingStation_subscribeContext__SWIG_0___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5, double jarg6, void * jarg7) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  libsumo::TraCIResults *arg7 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (libsumo::TraCIResults *)jarg7;
  if (!arg7) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIResults const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::ChargingStation::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6,(std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > > const &)*arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ChargingStation_subscribeContext__SWIG_1___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5, double jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::ChargingStation::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ChargingStation_subscribeContext__SWIG_2___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::ChargingStation::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ChargingStation_subscribeContext__SWIG_3___(const char * jarg1, int jarg2, double jarg3, void * jarg4) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::ChargingStation::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ChargingStation_subscribeContext__SWIG_4___(const char * jarg1, int jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::ChargingStation::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ChargingStation_unsubscribeContext___(const char * jarg1, int jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::ChargingStation::unsubscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ChargingStation_getAllSubscriptionResults___() {
  void * jresult ;
  libsumo::SubscriptionResults result;
  
  {
    try {
      result = libsumo::ChargingStation::getAllSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::SubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ChargingStation_getSubscriptionResults___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::TraCIResults result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::ChargingStation::getSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::TraCIResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ChargingStation_getAllContextSubscriptionResults___() {
  void * jresult ;
  libsumo::ContextSubscriptionResults result;
  
  {
    try {
      result = libsumo::ChargingStation::getAllContextSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::ContextSubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ChargingStation_getContextSubscriptionResults___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::SubscriptionResults result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::ChargingStation::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::SubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ChargingStation_subscribeParameterWithKey__SWIG_0___(const char * jarg1, const char * jarg2, double jarg3, double jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::ChargingStation::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ChargingStation_subscribeParameterWithKey__SWIG_1___(const char * jarg1, const char * jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::ChargingStation::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ChargingStation_subscribeParameterWithKey__SWIG_2___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::ChargingStation::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ChargingStation_DOMAIN_ID_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::ChargingStation::DOMAIN_ID;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ChargingStation_domainID___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::ChargingStation::domainID();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ChargingStation_setChargingPower___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::ChargingStation::setChargingPower((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ChargingStation_setEfficiency___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::ChargingStation::setEfficiency((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ChargingStation_setChargeDelay___(const char * jarg1, double jarg2) {
  std::string *arg1 = 0 ;
  double arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (double)jarg2; 
  {
    try {
      libsumo::ChargingStation::setChargeDelay((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_ChargingStation_setChargeInTransit___(const char * jarg1, unsigned int jarg2) {
  std::string *arg1 = 0 ;
  bool arg2 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = jarg2 ? true : false; 
  {
    try {
      libsumo::ChargingStation::setChargeInTransit((std::string const &)*arg1,arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_ChargingStation___(void * jarg1) {
  libsumo::ChargingStation *arg1 = (libsumo::ChargingStation *) 0 ;
  
  arg1 = (libsumo::ChargingStation *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_OverheadWire_getLaneID___(const char * jarg1) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::OverheadWire::getLaneID((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_OverheadWire_getStartPos___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::OverheadWire::getStartPos((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_EclipsefSumofLibsumo_OverheadWire_getEndPos___(const char * jarg1) {
  double jresult ;
  std::string *arg1 = 0 ;
  double result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (double)libsumo::OverheadWire::getEndPos((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_OverheadWire_getName___(const char * jarg1) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::OverheadWire::getName((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_OverheadWire_getVehicleCount___(const char * jarg1) {
  int jresult ;
  std::string *arg1 = 0 ;
  int result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (int)libsumo::OverheadWire::getVehicleCount((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_OverheadWire_getVehicleIDs___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::OverheadWire::getVehicleIDs((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_OverheadWire_getIDList___() {
  void * jresult ;
  std::vector< std::string > result;
  
  {
    try {
      result = libsumo::OverheadWire::getIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_OverheadWire_getIDCount___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::OverheadWire::getIDCount();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_OverheadWire_getParameter___(const char * jarg1, const char * jarg2) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = libsumo::OverheadWire::getParameter((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_OverheadWire_getParameterWithKey___(const char * jarg1, const char * jarg2) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::pair< std::string,std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = libsumo::OverheadWire::getParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::pair< std::string,std::string >(result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_OverheadWire_setParameter___(const char * jarg1, const char * jarg2, const char * jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  {
    try {
      libsumo::OverheadWire::setParameter((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_OverheadWire_subscribe__SWIG_0___(const char * jarg1, void * jarg2, double jarg3, double jarg4, void * jarg5) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  libsumo::TraCIResults *arg5 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (libsumo::TraCIResults *)jarg5;
  if (!arg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIResults const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::OverheadWire::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4,(std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > > const &)*arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_OverheadWire_subscribe__SWIG_1___(const char * jarg1, void * jarg2, double jarg3, double jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::OverheadWire::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_OverheadWire_subscribe__SWIG_2___(const char * jarg1, void * jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::OverheadWire::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_OverheadWire_subscribe__SWIG_3___(const char * jarg1, void * jarg2) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::OverheadWire::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_OverheadWire_subscribe__SWIG_4___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::OverheadWire::subscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_OverheadWire_unsubscribe___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::OverheadWire::unsubscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_OverheadWire_subscribeContext__SWIG_0___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5, double jarg6, void * jarg7) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  libsumo::TraCIResults *arg7 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (libsumo::TraCIResults *)jarg7;
  if (!arg7) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIResults const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::OverheadWire::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6,(std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > > const &)*arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_OverheadWire_subscribeContext__SWIG_1___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5, double jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::OverheadWire::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_OverheadWire_subscribeContext__SWIG_2___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::OverheadWire::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_OverheadWire_subscribeContext__SWIG_3___(const char * jarg1, int jarg2, double jarg3, void * jarg4) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::OverheadWire::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_OverheadWire_subscribeContext__SWIG_4___(const char * jarg1, int jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::OverheadWire::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_OverheadWire_unsubscribeContext___(const char * jarg1, int jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::OverheadWire::unsubscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_OverheadWire_getAllSubscriptionResults___() {
  void * jresult ;
  libsumo::SubscriptionResults result;
  
  {
    try {
      result = libsumo::OverheadWire::getAllSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::SubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_OverheadWire_getSubscriptionResults___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::TraCIResults result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::OverheadWire::getSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::TraCIResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_OverheadWire_getAllContextSubscriptionResults___() {
  void * jresult ;
  libsumo::ContextSubscriptionResults result;
  
  {
    try {
      result = libsumo::OverheadWire::getAllContextSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::ContextSubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_OverheadWire_getContextSubscriptionResults___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::SubscriptionResults result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::OverheadWire::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::SubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_OverheadWire_subscribeParameterWithKey__SWIG_0___(const char * jarg1, const char * jarg2, double jarg3, double jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::OverheadWire::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_OverheadWire_subscribeParameterWithKey__SWIG_1___(const char * jarg1, const char * jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::OverheadWire::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_OverheadWire_subscribeParameterWithKey__SWIG_2___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::OverheadWire::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_OverheadWire_DOMAIN_ID_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::OverheadWire::DOMAIN_ID;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_OverheadWire_domainID___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::OverheadWire::domainID();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_OverheadWire___(void * jarg1) {
  libsumo::OverheadWire *arg1 = (libsumo::OverheadWire *) 0 ;
  
  arg1 = (libsumo::OverheadWire *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Rerouter_getIDList___() {
  void * jresult ;
  std::vector< std::string > result;
  
  {
    try {
      result = libsumo::Rerouter::getIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Rerouter_getIDCount___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::Rerouter::getIDCount();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Rerouter_getParameter___(const char * jarg1, const char * jarg2) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = libsumo::Rerouter::getParameter((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Rerouter_getParameterWithKey___(const char * jarg1, const char * jarg2) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::pair< std::string,std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = libsumo::Rerouter::getParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::pair< std::string,std::string >(result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Rerouter_setParameter___(const char * jarg1, const char * jarg2, const char * jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  {
    try {
      libsumo::Rerouter::setParameter((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Rerouter_subscribe__SWIG_0___(const char * jarg1, void * jarg2, double jarg3, double jarg4, void * jarg5) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  libsumo::TraCIResults *arg5 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (libsumo::TraCIResults *)jarg5;
  if (!arg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIResults const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Rerouter::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4,(std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > > const &)*arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Rerouter_subscribe__SWIG_1___(const char * jarg1, void * jarg2, double jarg3, double jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Rerouter::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Rerouter_subscribe__SWIG_2___(const char * jarg1, void * jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Rerouter::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Rerouter_subscribe__SWIG_3___(const char * jarg1, void * jarg2) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Rerouter::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Rerouter_subscribe__SWIG_4___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::Rerouter::subscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Rerouter_unsubscribe___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::Rerouter::unsubscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Rerouter_subscribeContext__SWIG_0___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5, double jarg6, void * jarg7) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  libsumo::TraCIResults *arg7 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (libsumo::TraCIResults *)jarg7;
  if (!arg7) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIResults const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Rerouter::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6,(std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > > const &)*arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Rerouter_subscribeContext__SWIG_1___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5, double jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::Rerouter::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Rerouter_subscribeContext__SWIG_2___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::Rerouter::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Rerouter_subscribeContext__SWIG_3___(const char * jarg1, int jarg2, double jarg3, void * jarg4) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::Rerouter::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Rerouter_subscribeContext__SWIG_4___(const char * jarg1, int jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Rerouter::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Rerouter_unsubscribeContext___(const char * jarg1, int jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Rerouter::unsubscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Rerouter_getAllSubscriptionResults___() {
  void * jresult ;
  libsumo::SubscriptionResults result;
  
  {
    try {
      result = libsumo::Rerouter::getAllSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::SubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Rerouter_getSubscriptionResults___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::TraCIResults result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Rerouter::getSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::TraCIResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Rerouter_getAllContextSubscriptionResults___() {
  void * jresult ;
  libsumo::ContextSubscriptionResults result;
  
  {
    try {
      result = libsumo::Rerouter::getAllContextSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::ContextSubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Rerouter_getContextSubscriptionResults___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::SubscriptionResults result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::Rerouter::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::SubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Rerouter_subscribeParameterWithKey__SWIG_0___(const char * jarg1, const char * jarg2, double jarg3, double jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::Rerouter::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Rerouter_subscribeParameterWithKey__SWIG_1___(const char * jarg1, const char * jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::Rerouter::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Rerouter_subscribeParameterWithKey__SWIG_2___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::Rerouter::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Rerouter_DOMAIN_ID_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::Rerouter::DOMAIN_ID;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_Rerouter_domainID___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::Rerouter::domainID();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_Rerouter___(void * jarg1) {
  libsumo::Rerouter *arg1 = (libsumo::Rerouter *) 0 ;
  
  arg1 = (libsumo::Rerouter *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MeanData_getIDList___() {
  void * jresult ;
  std::vector< std::string > result;
  
  {
    try {
      result = libsumo::MeanData::getIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MeanData_getIDCount___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::MeanData::getIDCount();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MeanData_getParameter___(const char * jarg1, const char * jarg2) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = libsumo::MeanData::getParameter((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MeanData_getParameterWithKey___(const char * jarg1, const char * jarg2) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::pair< std::string,std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = libsumo::MeanData::getParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::pair< std::string,std::string >(result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MeanData_setParameter___(const char * jarg1, const char * jarg2, const char * jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  {
    try {
      libsumo::MeanData::setParameter((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MeanData_subscribe__SWIG_0___(const char * jarg1, void * jarg2, double jarg3, double jarg4, void * jarg5) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  libsumo::TraCIResults *arg5 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (libsumo::TraCIResults *)jarg5;
  if (!arg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIResults const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::MeanData::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4,(std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > > const &)*arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MeanData_subscribe__SWIG_1___(const char * jarg1, void * jarg2, double jarg3, double jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::MeanData::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MeanData_subscribe__SWIG_2___(const char * jarg1, void * jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::MeanData::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MeanData_subscribe__SWIG_3___(const char * jarg1, void * jarg2) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::MeanData::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MeanData_subscribe__SWIG_4___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::MeanData::subscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MeanData_unsubscribe___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::MeanData::unsubscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MeanData_subscribeContext__SWIG_0___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5, double jarg6, void * jarg7) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  libsumo::TraCIResults *arg7 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (libsumo::TraCIResults *)jarg7;
  if (!arg7) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIResults const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::MeanData::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6,(std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > > const &)*arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MeanData_subscribeContext__SWIG_1___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5, double jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::MeanData::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MeanData_subscribeContext__SWIG_2___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::MeanData::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MeanData_subscribeContext__SWIG_3___(const char * jarg1, int jarg2, double jarg3, void * jarg4) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::MeanData::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MeanData_subscribeContext__SWIG_4___(const char * jarg1, int jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::MeanData::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MeanData_unsubscribeContext___(const char * jarg1, int jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::MeanData::unsubscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MeanData_getAllSubscriptionResults___() {
  void * jresult ;
  libsumo::SubscriptionResults result;
  
  {
    try {
      result = libsumo::MeanData::getAllSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::SubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MeanData_getSubscriptionResults___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::TraCIResults result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::MeanData::getSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::TraCIResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MeanData_getAllContextSubscriptionResults___() {
  void * jresult ;
  libsumo::ContextSubscriptionResults result;
  
  {
    try {
      result = libsumo::MeanData::getAllContextSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::ContextSubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MeanData_getContextSubscriptionResults___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::SubscriptionResults result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::MeanData::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::SubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MeanData_subscribeParameterWithKey__SWIG_0___(const char * jarg1, const char * jarg2, double jarg3, double jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::MeanData::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MeanData_subscribeParameterWithKey__SWIG_1___(const char * jarg1, const char * jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::MeanData::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MeanData_subscribeParameterWithKey__SWIG_2___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::MeanData::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MeanData_DOMAIN_ID_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::MeanData::DOMAIN_ID;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_MeanData_domainID___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::MeanData::domainID();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_MeanData___(void * jarg1) {
  libsumo::MeanData *arg1 = (libsumo::MeanData *) 0 ;
  
  arg1 = (libsumo::MeanData *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VariableSpeedSign_getLanes___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::vector< std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::VariableSpeedSign::getLanes((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VariableSpeedSign_getIDList___() {
  void * jresult ;
  std::vector< std::string > result;
  
  {
    try {
      result = libsumo::VariableSpeedSign::getIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VariableSpeedSign_getIDCount___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::VariableSpeedSign::getIDCount();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VariableSpeedSign_getParameter___(const char * jarg1, const char * jarg2) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = libsumo::VariableSpeedSign::getParameter((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VariableSpeedSign_getParameterWithKey___(const char * jarg1, const char * jarg2) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::pair< std::string,std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = libsumo::VariableSpeedSign::getParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::pair< std::string,std::string >(result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VariableSpeedSign_setParameter___(const char * jarg1, const char * jarg2, const char * jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  {
    try {
      libsumo::VariableSpeedSign::setParameter((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VariableSpeedSign_subscribe__SWIG_0___(const char * jarg1, void * jarg2, double jarg3, double jarg4, void * jarg5) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  libsumo::TraCIResults *arg5 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (libsumo::TraCIResults *)jarg5;
  if (!arg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIResults const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::VariableSpeedSign::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4,(std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > > const &)*arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VariableSpeedSign_subscribe__SWIG_1___(const char * jarg1, void * jarg2, double jarg3, double jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::VariableSpeedSign::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VariableSpeedSign_subscribe__SWIG_2___(const char * jarg1, void * jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::VariableSpeedSign::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VariableSpeedSign_subscribe__SWIG_3___(const char * jarg1, void * jarg2) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::VariableSpeedSign::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VariableSpeedSign_subscribe__SWIG_4___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::VariableSpeedSign::subscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VariableSpeedSign_unsubscribe___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::VariableSpeedSign::unsubscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VariableSpeedSign_subscribeContext__SWIG_0___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5, double jarg6, void * jarg7) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  libsumo::TraCIResults *arg7 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (libsumo::TraCIResults *)jarg7;
  if (!arg7) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIResults const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::VariableSpeedSign::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6,(std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > > const &)*arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VariableSpeedSign_subscribeContext__SWIG_1___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5, double jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::VariableSpeedSign::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VariableSpeedSign_subscribeContext__SWIG_2___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::VariableSpeedSign::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VariableSpeedSign_subscribeContext__SWIG_3___(const char * jarg1, int jarg2, double jarg3, void * jarg4) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::VariableSpeedSign::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VariableSpeedSign_subscribeContext__SWIG_4___(const char * jarg1, int jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::VariableSpeedSign::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VariableSpeedSign_unsubscribeContext___(const char * jarg1, int jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::VariableSpeedSign::unsubscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VariableSpeedSign_getAllSubscriptionResults___() {
  void * jresult ;
  libsumo::SubscriptionResults result;
  
  {
    try {
      result = libsumo::VariableSpeedSign::getAllSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::SubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VariableSpeedSign_getSubscriptionResults___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::TraCIResults result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::VariableSpeedSign::getSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::TraCIResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VariableSpeedSign_getAllContextSubscriptionResults___() {
  void * jresult ;
  libsumo::ContextSubscriptionResults result;
  
  {
    try {
      result = libsumo::VariableSpeedSign::getAllContextSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::ContextSubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VariableSpeedSign_getContextSubscriptionResults___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::SubscriptionResults result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::VariableSpeedSign::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::SubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VariableSpeedSign_subscribeParameterWithKey__SWIG_0___(const char * jarg1, const char * jarg2, double jarg3, double jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::VariableSpeedSign::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VariableSpeedSign_subscribeParameterWithKey__SWIG_1___(const char * jarg1, const char * jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::VariableSpeedSign::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VariableSpeedSign_subscribeParameterWithKey__SWIG_2___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::VariableSpeedSign::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VariableSpeedSign_DOMAIN_ID_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::VariableSpeedSign::DOMAIN_ID;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_VariableSpeedSign_domainID___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::VariableSpeedSign::domainID();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_VariableSpeedSign___(void * jarg1) {
  libsumo::VariableSpeedSign *arg1 = (libsumo::VariableSpeedSign *) 0 ;
  
  arg1 = (libsumo::VariableSpeedSign *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RouteProbe_getEdgeID___(const char * jarg1) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::RouteProbe::getEdgeID((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RouteProbe_sampleLastRouteID___(const char * jarg1) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::RouteProbe::sampleLastRouteID((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RouteProbe_sampleCurrentRouteID___(const char * jarg1) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::RouteProbe::sampleCurrentRouteID((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RouteProbe_getIDList___() {
  void * jresult ;
  std::vector< std::string > result;
  
  {
    try {
      result = libsumo::RouteProbe::getIDList();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::vector< std::string >(result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RouteProbe_getIDCount___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::RouteProbe::getIDCount();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT const char * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RouteProbe_getParameter___(const char * jarg1, const char * jarg2) {
  const char * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = libsumo::RouteProbe::getParameter((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RouteProbe_getParameterWithKey___(const char * jarg1, const char * jarg2) {
  void * jresult ;
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::pair< std::string,std::string > result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = libsumo::RouteProbe::getParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new std::pair< std::string,std::string >(result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RouteProbe_setParameter___(const char * jarg1, const char * jarg2, const char * jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  {
    try {
      libsumo::RouteProbe::setParameter((std::string const &)*arg1,(std::string const &)*arg2,(std::string const &)*arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RouteProbe_subscribe__SWIG_0___(const char * jarg1, void * jarg2, double jarg3, double jarg4, void * jarg5) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  libsumo::TraCIResults *arg5 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (libsumo::TraCIResults *)jarg5;
  if (!arg5) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIResults const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::RouteProbe::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4,(std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > > const &)*arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RouteProbe_subscribe__SWIG_1___(const char * jarg1, void * jarg2, double jarg3, double jarg4) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::RouteProbe::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RouteProbe_subscribe__SWIG_2___(const char * jarg1, void * jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::RouteProbe::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RouteProbe_subscribe__SWIG_3___(const char * jarg1, void * jarg2) {
  std::string *arg1 = 0 ;
  std::vector< int > *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::RouteProbe::subscribe((std::string const &)*arg1,(std::vector< int > const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RouteProbe_subscribe__SWIG_4___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::RouteProbe::subscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RouteProbe_unsubscribe___(const char * jarg1) {
  std::string *arg1 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      libsumo::RouteProbe::unsubscribe((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RouteProbe_subscribeContext__SWIG_0___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5, double jarg6, void * jarg7) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  libsumo::TraCIResults *arg7 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (libsumo::TraCIResults *)jarg7;
  if (!arg7) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "libsumo::TraCIResults const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::RouteProbe::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6,(std::map< int,std::shared_ptr< libsumo::TraCIResult >,std::less< int > > const &)*arg7);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RouteProbe_subscribeContext__SWIG_1___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5, double jarg6) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  double arg6 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      libsumo::RouteProbe::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5,arg6);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RouteProbe_subscribeContext__SWIG_2___(const char * jarg1, int jarg2, double jarg3, void * jarg4, double jarg5) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  double arg5 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  arg5 = (double)jarg5; 
  {
    try {
      libsumo::RouteProbe::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4,arg5);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RouteProbe_subscribeContext__SWIG_3___(const char * jarg1, int jarg2, double jarg3, void * jarg4) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  std::vector< int > *arg4 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (std::vector< int > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & is null", 0);
    return ;
  } 
  {
    try {
      libsumo::RouteProbe::subscribeContext((std::string const &)*arg1,arg2,arg3,(std::vector< int > const &)*arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RouteProbe_subscribeContext__SWIG_4___(const char * jarg1, int jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::RouteProbe::subscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RouteProbe_unsubscribeContext___(const char * jarg1, int jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  int arg2 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::RouteProbe::unsubscribeContext((std::string const &)*arg1,arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RouteProbe_getAllSubscriptionResults___() {
  void * jresult ;
  libsumo::SubscriptionResults result;
  
  {
    try {
      result = libsumo::RouteProbe::getAllSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::SubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RouteProbe_getSubscriptionResults___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::TraCIResults result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::RouteProbe::getSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::TraCIResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RouteProbe_getAllContextSubscriptionResults___() {
  void * jresult ;
  libsumo::ContextSubscriptionResults result;
  
  {
    try {
      result = libsumo::RouteProbe::getAllContextSubscriptionResults();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::ContextSubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RouteProbe_getContextSubscriptionResults___(const char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  libsumo::SubscriptionResults result;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = libsumo::RouteProbe::getContextSubscriptionResults((std::string const &)*arg1);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = new libsumo::SubscriptionResults(result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RouteProbe_subscribeParameterWithKey__SWIG_0___(const char * jarg1, const char * jarg2, double jarg3, double jarg4) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      libsumo::RouteProbe::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3,arg4);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RouteProbe_subscribeParameterWithKey__SWIG_1___(const char * jarg1, const char * jarg2, double jarg3) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  double arg3 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (double)jarg3; 
  {
    try {
      libsumo::RouteProbe::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2,arg3);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RouteProbe_subscribeParameterWithKey__SWIG_2___(const char * jarg1, const char * jarg2) {
  std::string *arg1 = 0 ;
  std::string *arg2 = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      libsumo::RouteProbe::subscribeParameterWithKey((std::string const &)*arg1,(std::string const &)*arg2);
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RouteProbe_DOMAIN_ID_get___() {
  int jresult ;
  int result;
  
  result = (int)(int)libsumo::RouteProbe::DOMAIN_ID;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_EclipsefSumofLibsumo_RouteProbe_domainID___() {
  int jresult ;
  int result;
  
  {
    try {
      result = (int)libsumo::RouteProbe::domainID();
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return 0; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return 0; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_EclipsefSumofLibsumo_delete_RouteProbe___(void * jarg1) {
  libsumo::RouteProbe *arg1 = (libsumo::RouteProbe *) 0 ;
  
  arg1 = (libsumo::RouteProbe *)jarg1; 
  {
    try {
      delete arg1;
    } catch (const libsumo::TraCIException& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_ValueError, s.c_str()); return ; 
      };
      
    } catch (const std::exception& e) {
      const std::string s = e.what();
      std::string printError;
      if (std::getenv("TRACI_PRINT_ERROR") != nullptr) {
        printError = std::getenv("TRACI_PRINT_ERROR");
      }
      
      
      
      if (printError == "all" || printError == "libsumo") {
        std::cerr << "Error: " << s << std::endl;
      }
      
      
      
      
      {
        SWIG_CSharpException(SWIG_UnknownError, s.c_str()); return ; 
      };
      
    } catch (...) {
      {
        SWIG_CSharpException(SWIG_UnknownError, "unknown exception"); return ; 
      };
    }
  }
}


SWIGEXPORT std::shared_ptr< libsumo::TraCIResult > * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIPosition_SWIGSmartPtrUpcast___(std::shared_ptr< libsumo::TraCIPosition > *jarg1) {
    return jarg1 ? new std::shared_ptr< libsumo::TraCIResult >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< libsumo::TraCIResult > * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIRoadPosition_SWIGSmartPtrUpcast___(std::shared_ptr< libsumo::TraCIRoadPosition > *jarg1) {
    return jarg1 ? new std::shared_ptr< libsumo::TraCIResult >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< libsumo::TraCIResult > * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIColor_SWIGSmartPtrUpcast___(std::shared_ptr< libsumo::TraCIColor > *jarg1) {
    return jarg1 ? new std::shared_ptr< libsumo::TraCIResult >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< libsumo::TraCIResult > * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIPositionVector_SWIGSmartPtrUpcast___(std::shared_ptr< libsumo::TraCIPositionVector > *jarg1) {
    return jarg1 ? new std::shared_ptr< libsumo::TraCIResult >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< libsumo::TraCIResult > * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIInt_SWIGSmartPtrUpcast___(std::shared_ptr< libsumo::TraCIInt > *jarg1) {
    return jarg1 ? new std::shared_ptr< libsumo::TraCIResult >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< libsumo::TraCIResult > * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIDouble_SWIGSmartPtrUpcast___(std::shared_ptr< libsumo::TraCIDouble > *jarg1) {
    return jarg1 ? new std::shared_ptr< libsumo::TraCIResult >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< libsumo::TraCIResult > * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIString_SWIGSmartPtrUpcast___(std::shared_ptr< libsumo::TraCIString > *jarg1) {
    return jarg1 ? new std::shared_ptr< libsumo::TraCIResult >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< libsumo::TraCIResult > * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIStringList_SWIGSmartPtrUpcast___(std::shared_ptr< libsumo::TraCIStringList > *jarg1) {
    return jarg1 ? new std::shared_ptr< libsumo::TraCIResult >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< libsumo::TraCIResult > * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIDoubleList_SWIGSmartPtrUpcast___(std::shared_ptr< libsumo::TraCIDoubleList > *jarg1) {
    return jarg1 ? new std::shared_ptr< libsumo::TraCIResult >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< libsumo::TraCIResult > * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIIntList_SWIGSmartPtrUpcast___(std::shared_ptr< libsumo::TraCIIntList > *jarg1) {
    return jarg1 ? new std::shared_ptr< libsumo::TraCIResult >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< libsumo::TraCIResult > * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIStringDoublePairList_SWIGSmartPtrUpcast___(std::shared_ptr< libsumo::TraCIStringDoublePairList > *jarg1) {
    return jarg1 ? new std::shared_ptr< libsumo::TraCIResult >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< libsumo::TraCIResult > * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILogicVectorWrapped_SWIGSmartPtrUpcast___(std::shared_ptr< libsumo::TraCILogicVectorWrapped > *jarg1) {
    return jarg1 ? new std::shared_ptr< libsumo::TraCIResult >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< libsumo::TraCIResult > * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCILinkVectorVectorWrapped_SWIGSmartPtrUpcast___(std::shared_ptr< libsumo::TraCILinkVectorVectorWrapped > *jarg1) {
    return jarg1 ? new std::shared_ptr< libsumo::TraCIResult >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< libsumo::TraCIResult > * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIConnectionVectorWrapped_SWIGSmartPtrUpcast___(std::shared_ptr< libsumo::TraCIConnectionVectorWrapped > *jarg1) {
    return jarg1 ? new std::shared_ptr< libsumo::TraCIResult >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< libsumo::TraCIResult > * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIVehicleDataVectorWrapped_SWIGSmartPtrUpcast___(std::shared_ptr< libsumo::TraCIVehicleDataVectorWrapped > *jarg1) {
    return jarg1 ? new std::shared_ptr< libsumo::TraCIResult >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< libsumo::TraCIResult > * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextTLSDataVectorWrapped_SWIGSmartPtrUpcast___(std::shared_ptr< libsumo::TraCINextTLSDataVectorWrapped > *jarg1) {
    return jarg1 ? new std::shared_ptr< libsumo::TraCIResult >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< libsumo::TraCIResult > * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCINextStopDataVectorWrapped_SWIGSmartPtrUpcast___(std::shared_ptr< libsumo::TraCINextStopDataVectorWrapped > *jarg1) {
    return jarg1 ? new std::shared_ptr< libsumo::TraCIResult >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< libsumo::TraCIResult > * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIBestLanesDataVectorWrapped_SWIGSmartPtrUpcast___(std::shared_ptr< libsumo::TraCIBestLanesDataVectorWrapped > *jarg1) {
    return jarg1 ? new std::shared_ptr< libsumo::TraCIResult >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< libsumo::TraCIResult > * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIStage_SWIGSmartPtrUpcast___(std::shared_ptr< libsumo::TraCIStage > *jarg1) {
    return jarg1 ? new std::shared_ptr< libsumo::TraCIResult >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< libsumo::TraCIResult > * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIReservationVectorWrapped_SWIGSmartPtrUpcast___(std::shared_ptr< libsumo::TraCIReservationVectorWrapped > *jarg1) {
    return jarg1 ? new std::shared_ptr< libsumo::TraCIResult >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< libsumo::TraCIResult > * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCICollisionVectorWrapped_SWIGSmartPtrUpcast___(std::shared_ptr< libsumo::TraCICollisionVectorWrapped > *jarg1) {
    return jarg1 ? new std::shared_ptr< libsumo::TraCIResult >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< libsumo::TraCIResult > * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCISignalConstraintVectorWrapped_SWIGSmartPtrUpcast___(std::shared_ptr< libsumo::TraCISignalConstraintVectorWrapped > *jarg1) {
    return jarg1 ? new std::shared_ptr< libsumo::TraCIResult >(*jarg1) : 0;
}

SWIGEXPORT std::shared_ptr< libsumo::TraCIResult > * SWIGSTDCALL CSharp_EclipsefSumofLibsumo_TraCIJunctionFoeVectorWrapped_SWIGSmartPtrUpcast___(std::shared_ptr< libsumo::TraCIJunctionFoeVectorWrapped > *jarg1) {
    return jarg1 ? new std::shared_ptr< libsumo::TraCIResult >(*jarg1) : 0;
}

#ifdef __cplusplus
}
#endif

