//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.3.1
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Eclipse.Sumo.Libtraci {

public class TraCIJunctionFoeVectorWrapped : TraCIResult {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  private bool swigCMemOwnDerived;

  internal TraCIJunctionFoeVectorWrapped(global::System.IntPtr cPtr, bool cMemoryOwn) : base(libtraciPINVOKE.TraCIJunctionFoeVectorWrapped_SWIGSmartPtrUpcast(cPtr), true) {
    swigCMemOwnDerived = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(TraCIJunctionFoeVectorWrapped obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwnDerived) {
          swigCMemOwnDerived = false;
          libtraciPINVOKE.delete_TraCIJunctionFoeVectorWrapped(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public override string getString() {
    string ret = libtraciPINVOKE.TraCIJunctionFoeVectorWrapped_getString(swigCPtr);
    if (libtraciPINVOKE.SWIGPendingException.Pending) throw libtraciPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public TraCIJunctionFoeVector value {
    set {
      libtraciPINVOKE.TraCIJunctionFoeVectorWrapped_value_set(swigCPtr, TraCIJunctionFoeVector.getCPtr(value));
      if (libtraciPINVOKE.SWIGPendingException.Pending) throw libtraciPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      global::System.IntPtr cPtr = libtraciPINVOKE.TraCIJunctionFoeVectorWrapped_value_get(swigCPtr);
      TraCIJunctionFoeVector ret = (cPtr == global::System.IntPtr.Zero) ? null : new TraCIJunctionFoeVector(cPtr, false);
      if (libtraciPINVOKE.SWIGPendingException.Pending) throw libtraciPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public TraCIJunctionFoeVectorWrapped() : this(libtraciPINVOKE.new_TraCIJunctionFoeVectorWrapped(), true) {
    if (libtraciPINVOKE.SWIGPendingException.Pending) throw libtraciPINVOKE.SWIGPendingException.Retrieve();
  }

}

}
